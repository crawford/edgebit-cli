// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0-devel
// 	protoc        (unknown)
// source: edgebit/platform/v1alpha/platform.proto

package platformv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VulnSeverity int32

const (
	VulnSeverity_VULN_SEVERITY_UNSPECIFIED VulnSeverity = 0
	VulnSeverity_VULN_SEVERITY_NEGLIGIBLE  VulnSeverity = 1
	VulnSeverity_VULN_SEVERITY_LOW         VulnSeverity = 2
	VulnSeverity_VULN_SEVERITY_MEDIUM      VulnSeverity = 3
	VulnSeverity_VULN_SEVERITY_HIGH        VulnSeverity = 4
	VulnSeverity_VULN_SEVERITY_CRITICAL    VulnSeverity = 5
)

// Enum value maps for VulnSeverity.
var (
	VulnSeverity_name = map[int32]string{
		0: "VULN_SEVERITY_UNSPECIFIED",
		1: "VULN_SEVERITY_NEGLIGIBLE",
		2: "VULN_SEVERITY_LOW",
		3: "VULN_SEVERITY_MEDIUM",
		4: "VULN_SEVERITY_HIGH",
		5: "VULN_SEVERITY_CRITICAL",
	}
	VulnSeverity_value = map[string]int32{
		"VULN_SEVERITY_UNSPECIFIED": 0,
		"VULN_SEVERITY_NEGLIGIBLE":  1,
		"VULN_SEVERITY_LOW":         2,
		"VULN_SEVERITY_MEDIUM":      3,
		"VULN_SEVERITY_HIGH":        4,
		"VULN_SEVERITY_CRITICAL":    5,
	}
)

func (x VulnSeverity) Enum() *VulnSeverity {
	p := new(VulnSeverity)
	*p = x
	return p
}

func (x VulnSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[0].Descriptor()
}

func (VulnSeverity) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[0]
}

func (x VulnSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnSeverity.Descriptor instead.
func (VulnSeverity) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

type VulnFixState int32

const (
	VulnFixState_VULN_FIX_STATE_UNSPECIFIED VulnFixState = 0
	VulnFixState_VULN_FIX_STATE_NOTFIXED    VulnFixState = 1
	VulnFixState_VULN_FIX_STATE_WONTFIX     VulnFixState = 2
	VulnFixState_VULN_FIX_STATE_FIXED       VulnFixState = 3
)

// Enum value maps for VulnFixState.
var (
	VulnFixState_name = map[int32]string{
		0: "VULN_FIX_STATE_UNSPECIFIED",
		1: "VULN_FIX_STATE_NOTFIXED",
		2: "VULN_FIX_STATE_WONTFIX",
		3: "VULN_FIX_STATE_FIXED",
	}
	VulnFixState_value = map[string]int32{
		"VULN_FIX_STATE_UNSPECIFIED": 0,
		"VULN_FIX_STATE_NOTFIXED":    1,
		"VULN_FIX_STATE_WONTFIX":     2,
		"VULN_FIX_STATE_FIXED":       3,
	}
)

func (x VulnFixState) Enum() *VulnFixState {
	p := new(VulnFixState)
	*p = x
	return p
}

func (x VulnFixState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnFixState) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[1].Descriptor()
}

func (VulnFixState) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[1]
}

func (x VulnFixState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnFixState.Descriptor instead.
func (VulnFixState) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

type SBOMFormat int32

const (
	SBOMFormat_SBOM_FORMAT_UNSPECIFIED    SBOMFormat = 0
	SBOMFormat_SBOM_FORMAT_SYFT           SBOMFormat = 1
	SBOMFormat_SBOM_FORMAT_SPDX_JSON      SBOMFormat = 2
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_JSON SBOMFormat = 3
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_XML  SBOMFormat = 4
)

// Enum value maps for SBOMFormat.
var (
	SBOMFormat_name = map[int32]string{
		0: "SBOM_FORMAT_UNSPECIFIED",
		1: "SBOM_FORMAT_SYFT",
		2: "SBOM_FORMAT_SPDX_JSON",
		3: "SBOM_FORMAT_CYCLONEDX_JSON",
		4: "SBOM_FORMAT_CYCLONEDX_XML",
	}
	SBOMFormat_value = map[string]int32{
		"SBOM_FORMAT_UNSPECIFIED":    0,
		"SBOM_FORMAT_SYFT":           1,
		"SBOM_FORMAT_SPDX_JSON":      2,
		"SBOM_FORMAT_CYCLONEDX_JSON": 3,
		"SBOM_FORMAT_CYCLONEDX_XML":  4,
	}
)

func (x SBOMFormat) Enum() *SBOMFormat {
	p := new(SBOMFormat)
	*p = x
	return p
}

func (x SBOMFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SBOMFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[2].Descriptor()
}

func (SBOMFormat) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[2]
}

func (x SBOMFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SBOMFormat.Descriptor instead.
func (SBOMFormat) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

type DormantPackagePolicy int32

const (
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_UNSPECIFIED DormantPackagePolicy = 0
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_IGNORE      DormantPackagePolicy = 1
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_DROP_1      DormantPackagePolicy = 2
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_DROP_2      DormantPackagePolicy = 3
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_SET_LOW     DormantPackagePolicy = 4
	DormantPackagePolicy_DORMANT_PACKAGE_POLICY_SET_MEDIUM  DormantPackagePolicy = 5
)

// Enum value maps for DormantPackagePolicy.
var (
	DormantPackagePolicy_name = map[int32]string{
		0: "DORMANT_PACKAGE_POLICY_UNSPECIFIED",
		1: "DORMANT_PACKAGE_POLICY_IGNORE",
		2: "DORMANT_PACKAGE_POLICY_DROP_1",
		3: "DORMANT_PACKAGE_POLICY_DROP_2",
		4: "DORMANT_PACKAGE_POLICY_SET_LOW",
		5: "DORMANT_PACKAGE_POLICY_SET_MEDIUM",
	}
	DormantPackagePolicy_value = map[string]int32{
		"DORMANT_PACKAGE_POLICY_UNSPECIFIED": 0,
		"DORMANT_PACKAGE_POLICY_IGNORE":      1,
		"DORMANT_PACKAGE_POLICY_DROP_1":      2,
		"DORMANT_PACKAGE_POLICY_DROP_2":      3,
		"DORMANT_PACKAGE_POLICY_SET_LOW":     4,
		"DORMANT_PACKAGE_POLICY_SET_MEDIUM":  5,
	}
)

func (x DormantPackagePolicy) Enum() *DormantPackagePolicy {
	p := new(DormantPackagePolicy)
	*p = x
	return p
}

func (x DormantPackagePolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DormantPackagePolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[3].Descriptor()
}

func (DormantPackagePolicy) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[3]
}

func (x DormantPackagePolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DormantPackagePolicy.Descriptor instead.
func (DormantPackagePolicy) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{3}
}

type ComponentType int32

const (
	ComponentType_COMPONENT_TYPE_UNSPECIFIED     ComponentType = 0
	ComponentType_COMPONENT_TYPE_SBOM_COLLECTION ComponentType = 1
)

// Enum value maps for ComponentType.
var (
	ComponentType_name = map[int32]string{
		0: "COMPONENT_TYPE_UNSPECIFIED",
		1: "COMPONENT_TYPE_SBOM_COLLECTION",
	}
	ComponentType_value = map[string]int32{
		"COMPONENT_TYPE_UNSPECIFIED":     0,
		"COMPONENT_TYPE_SBOM_COLLECTION": 1,
	}
)

func (x ComponentType) Enum() *ComponentType {
	p := new(ComponentType)
	*p = x
	return p
}

func (x ComponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[4].Descriptor()
}

func (ComponentType) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[4]
}

func (x ComponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentType.Descriptor instead.
func (ComponentType) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{4}
}

type ComponentIssueState int32

const (
	ComponentIssueState_COMPONENT_ISSUE_STATE_UNSPECIFIED ComponentIssueState = 0
	ComponentIssueState_COMPONENT_ISSUE_STATE_OPEN        ComponentIssueState = 1
	ComponentIssueState_COMPONENT_ISSUE_STATE_RESOLVED    ComponentIssueState = 2
	ComponentIssueState_COMPONENT_ISSUE_STATE_IGNORED     ComponentIssueState = 3
)

// Enum value maps for ComponentIssueState.
var (
	ComponentIssueState_name = map[int32]string{
		0: "COMPONENT_ISSUE_STATE_UNSPECIFIED",
		1: "COMPONENT_ISSUE_STATE_OPEN",
		2: "COMPONENT_ISSUE_STATE_RESOLVED",
		3: "COMPONENT_ISSUE_STATE_IGNORED",
	}
	ComponentIssueState_value = map[string]int32{
		"COMPONENT_ISSUE_STATE_UNSPECIFIED": 0,
		"COMPONENT_ISSUE_STATE_OPEN":        1,
		"COMPONENT_ISSUE_STATE_RESOLVED":    2,
		"COMPONENT_ISSUE_STATE_IGNORED":     3,
	}
)

func (x ComponentIssueState) Enum() *ComponentIssueState {
	p := new(ComponentIssueState)
	*p = x
	return p
}

func (x ComponentIssueState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentIssueState) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[5].Descriptor()
}

func (ComponentIssueState) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[5]
}

func (x ComponentIssueState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentIssueState.Descriptor instead.
func (ComponentIssueState) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{5}
}

type ComponentIssueSeverity int32

const (
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED ComponentIssueSeverity = 0
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_NEGLIGIBLE  ComponentIssueSeverity = 1
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_LOW         ComponentIssueSeverity = 2
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_MEDIUM      ComponentIssueSeverity = 3
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_HIGH        ComponentIssueSeverity = 4
	ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_CRITICAL    ComponentIssueSeverity = 5
)

// Enum value maps for ComponentIssueSeverity.
var (
	ComponentIssueSeverity_name = map[int32]string{
		0: "COMPONENT_ISSUE_SEVERITY_UNSPECIFIED",
		1: "COMPONENT_ISSUE_SEVERITY_NEGLIGIBLE",
		2: "COMPONENT_ISSUE_SEVERITY_LOW",
		3: "COMPONENT_ISSUE_SEVERITY_MEDIUM",
		4: "COMPONENT_ISSUE_SEVERITY_HIGH",
		5: "COMPONENT_ISSUE_SEVERITY_CRITICAL",
	}
	ComponentIssueSeverity_value = map[string]int32{
		"COMPONENT_ISSUE_SEVERITY_UNSPECIFIED": 0,
		"COMPONENT_ISSUE_SEVERITY_NEGLIGIBLE":  1,
		"COMPONENT_ISSUE_SEVERITY_LOW":         2,
		"COMPONENT_ISSUE_SEVERITY_MEDIUM":      3,
		"COMPONENT_ISSUE_SEVERITY_HIGH":        4,
		"COMPONENT_ISSUE_SEVERITY_CRITICAL":    5,
	}
)

func (x ComponentIssueSeverity) Enum() *ComponentIssueSeverity {
	p := new(ComponentIssueSeverity)
	*p = x
	return p
}

func (x ComponentIssueSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentIssueSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[6].Descriptor()
}

func (ComponentIssueSeverity) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[6]
}

func (x ComponentIssueSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentIssueSeverity.Descriptor instead.
func (ComponentIssueSeverity) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{6}
}

type CIBotCommentFlavor int32

const (
	CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_UNSPECIFIED CIBotCommentFlavor = 0
	CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_GITHUB      CIBotCommentFlavor = 1
)

// Enum value maps for CIBotCommentFlavor.
var (
	CIBotCommentFlavor_name = map[int32]string{
		0: "CI_BOT_COMMENT_FLAVOR_UNSPECIFIED",
		1: "CI_BOT_COMMENT_FLAVOR_GITHUB",
	}
	CIBotCommentFlavor_value = map[string]int32{
		"CI_BOT_COMMENT_FLAVOR_UNSPECIFIED": 0,
		"CI_BOT_COMMENT_FLAVOR_GITHUB":      1,
	}
)

func (x CIBotCommentFlavor) Enum() *CIBotCommentFlavor {
	p := new(CIBotCommentFlavor)
	*p = x
	return p
}

func (x CIBotCommentFlavor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CIBotCommentFlavor) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[7].Descriptor()
}

func (CIBotCommentFlavor) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[7]
}

func (x CIBotCommentFlavor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CIBotCommentFlavor.Descriptor instead.
func (CIBotCommentFlavor) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{7}
}

type SBOMGenerationSource int32

const (
	SBOMGenerationSource_SBOM_GENERATION_SOURCE_UNSPECIFIED SBOMGenerationSource = 0
	SBOMGenerationSource_SBOM_GENERATION_SOURCE_BUILD       SBOMGenerationSource = 1
	SBOMGenerationSource_SBOM_GENERATION_SOURCE_SOURCE      SBOMGenerationSource = 2
)

// Enum value maps for SBOMGenerationSource.
var (
	SBOMGenerationSource_name = map[int32]string{
		0: "SBOM_GENERATION_SOURCE_UNSPECIFIED",
		1: "SBOM_GENERATION_SOURCE_BUILD",
		2: "SBOM_GENERATION_SOURCE_SOURCE",
	}
	SBOMGenerationSource_value = map[string]int32{
		"SBOM_GENERATION_SOURCE_UNSPECIFIED": 0,
		"SBOM_GENERATION_SOURCE_BUILD":       1,
		"SBOM_GENERATION_SOURCE_SOURCE":      2,
	}
)

func (x SBOMGenerationSource) Enum() *SBOMGenerationSource {
	p := new(SBOMGenerationSource)
	*p = x
	return p
}

func (x SBOMGenerationSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SBOMGenerationSource) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[8].Descriptor()
}

func (SBOMGenerationSource) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[8]
}

func (x SBOMGenerationSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SBOMGenerationSource.Descriptor instead.
func (SBOMGenerationSource) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{8}
}

type IntegrationType int32

const (
	IntegrationType_INTEGRATION_TYPE_UNSPECIFIED IntegrationType = 0
	IntegrationType_INTEGRATION_TYPE_GITHUB      IntegrationType = 1
	IntegrationType_INTEGRATION_TYPE_JIRA        IntegrationType = 2
	IntegrationType_INTEGRATION_TYPE_VANTA       IntegrationType = 3
	IntegrationType_INTEGRATION_TYPE_SLACK       IntegrationType = 4
)

// Enum value maps for IntegrationType.
var (
	IntegrationType_name = map[int32]string{
		0: "INTEGRATION_TYPE_UNSPECIFIED",
		1: "INTEGRATION_TYPE_GITHUB",
		2: "INTEGRATION_TYPE_JIRA",
		3: "INTEGRATION_TYPE_VANTA",
		4: "INTEGRATION_TYPE_SLACK",
	}
	IntegrationType_value = map[string]int32{
		"INTEGRATION_TYPE_UNSPECIFIED": 0,
		"INTEGRATION_TYPE_GITHUB":      1,
		"INTEGRATION_TYPE_JIRA":        2,
		"INTEGRATION_TYPE_VANTA":       3,
		"INTEGRATION_TYPE_SLACK":       4,
	}
)

func (x IntegrationType) Enum() *IntegrationType {
	p := new(IntegrationType)
	*p = x
	return p
}

func (x IntegrationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IntegrationType) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[9].Descriptor()
}

func (IntegrationType) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[9]
}

func (x IntegrationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IntegrationType.Descriptor instead.
func (IntegrationType) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{9}
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ServerSBOMRoutingPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyItems []*PolicyItem `protobuf:"bytes,1,rep,name=policy_items,json=policyItems,proto3" json:"policy_items,omitempty"`
}

func (x *ServerSBOMRoutingPolicy) Reset() {
	*x = ServerSBOMRoutingPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSBOMRoutingPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSBOMRoutingPolicy) ProtoMessage() {}

func (x *ServerSBOMRoutingPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSBOMRoutingPolicy.ProtoReflect.Descriptor instead.
func (*ServerSBOMRoutingPolicy) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

func (x *ServerSBOMRoutingPolicy) GetPolicyItems() []*PolicyItem {
	if x != nil {
		return x.PolicyItems
	}
	return nil
}

type PolicyItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName   string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	LabelSelector string `protobuf:"bytes,2,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	ComponentId   string `protobuf:"bytes,3,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *PolicyItem) Reset() {
	*x = PolicyItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PolicyItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PolicyItem) ProtoMessage() {}

func (x *PolicyItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PolicyItem.ProtoReflect.Descriptor instead.
func (*PolicyItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

func (x *PolicyItem) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *PolicyItem) GetLabelSelector() string {
	if x != nil {
		return x.LabelSelector
	}
	return ""
}

func (x *PolicyItem) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type GetServerSBOMRoutingPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetServerSBOMRoutingPolicyRequest) Reset() {
	*x = GetServerSBOMRoutingPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerSBOMRoutingPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerSBOMRoutingPolicyRequest) ProtoMessage() {}

func (x *GetServerSBOMRoutingPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerSBOMRoutingPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetServerSBOMRoutingPolicyRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{3}
}

func (x *GetServerSBOMRoutingPolicyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetServerSBOMRoutingPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *ServerSBOMRoutingPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetServerSBOMRoutingPolicyResponse) Reset() {
	*x = GetServerSBOMRoutingPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerSBOMRoutingPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerSBOMRoutingPolicyResponse) ProtoMessage() {}

func (x *GetServerSBOMRoutingPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerSBOMRoutingPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetServerSBOMRoutingPolicyResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{4}
}

func (x *GetServerSBOMRoutingPolicyResponse) GetPolicy() *ServerSBOMRoutingPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type UpdateServerSbomRoutingPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string        `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PolicyItems []*PolicyItem `protobuf:"bytes,2,rep,name=policy_items,json=policyItems,proto3" json:"policy_items,omitempty"`
}

func (x *UpdateServerSbomRoutingPolicyRequest) Reset() {
	*x = UpdateServerSbomRoutingPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerSbomRoutingPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerSbomRoutingPolicyRequest) ProtoMessage() {}

func (x *UpdateServerSbomRoutingPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerSbomRoutingPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpdateServerSbomRoutingPolicyRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateServerSbomRoutingPolicyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateServerSbomRoutingPolicyRequest) GetPolicyItems() []*PolicyItem {
	if x != nil {
		return x.PolicyItems
	}
	return nil
}

type UpdateServerSbomRoutingPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateServerSbomRoutingPolicyResponse) Reset() {
	*x = UpdateServerSbomRoutingPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateServerSbomRoutingPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateServerSbomRoutingPolicyResponse) ProtoMessage() {}

func (x *UpdateServerSbomRoutingPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateServerSbomRoutingPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpdateServerSbomRoutingPolicyResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{6}
}

type SetProjectIssueSLAPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NegligibleSla *durationpb.Duration `protobuf:"bytes,2,opt,name=negligible_sla,json=negligibleSla,proto3" json:"negligible_sla,omitempty"`
	LowSla        *durationpb.Duration `protobuf:"bytes,3,opt,name=low_sla,json=lowSla,proto3" json:"low_sla,omitempty"`
	MediumSla     *durationpb.Duration `protobuf:"bytes,4,opt,name=medium_sla,json=mediumSla,proto3" json:"medium_sla,omitempty"`
	HighSla       *durationpb.Duration `protobuf:"bytes,5,opt,name=high_sla,json=highSla,proto3" json:"high_sla,omitempty"`
	CriticalSla   *durationpb.Duration `protobuf:"bytes,6,opt,name=critical_sla,json=criticalSla,proto3" json:"critical_sla,omitempty"`
}

func (x *SetProjectIssueSLAPolicyRequest) Reset() {
	*x = SetProjectIssueSLAPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectIssueSLAPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectIssueSLAPolicyRequest) ProtoMessage() {}

func (x *SetProjectIssueSLAPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectIssueSLAPolicyRequest.ProtoReflect.Descriptor instead.
func (*SetProjectIssueSLAPolicyRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{7}
}

func (x *SetProjectIssueSLAPolicyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SetProjectIssueSLAPolicyRequest) GetNegligibleSla() *durationpb.Duration {
	if x != nil {
		return x.NegligibleSla
	}
	return nil
}

func (x *SetProjectIssueSLAPolicyRequest) GetLowSla() *durationpb.Duration {
	if x != nil {
		return x.LowSla
	}
	return nil
}

func (x *SetProjectIssueSLAPolicyRequest) GetMediumSla() *durationpb.Duration {
	if x != nil {
		return x.MediumSla
	}
	return nil
}

func (x *SetProjectIssueSLAPolicyRequest) GetHighSla() *durationpb.Duration {
	if x != nil {
		return x.HighSla
	}
	return nil
}

func (x *SetProjectIssueSLAPolicyRequest) GetCriticalSla() *durationpb.Duration {
	if x != nil {
		return x.CriticalSla
	}
	return nil
}

type ProjectIssueSLAPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string               `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	NegligibleSla *durationpb.Duration `protobuf:"bytes,2,opt,name=negligible_sla,json=negligibleSla,proto3" json:"negligible_sla,omitempty"`
	LowSla        *durationpb.Duration `protobuf:"bytes,3,opt,name=low_sla,json=lowSla,proto3" json:"low_sla,omitempty"`
	MediumSla     *durationpb.Duration `protobuf:"bytes,4,opt,name=medium_sla,json=mediumSla,proto3" json:"medium_sla,omitempty"`
	HighSla       *durationpb.Duration `protobuf:"bytes,5,opt,name=high_sla,json=highSla,proto3" json:"high_sla,omitempty"`
	CriticalSla   *durationpb.Duration `protobuf:"bytes,6,opt,name=critical_sla,json=criticalSla,proto3" json:"critical_sla,omitempty"`
}

func (x *ProjectIssueSLAPolicy) Reset() {
	*x = ProjectIssueSLAPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectIssueSLAPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectIssueSLAPolicy) ProtoMessage() {}

func (x *ProjectIssueSLAPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectIssueSLAPolicy.ProtoReflect.Descriptor instead.
func (*ProjectIssueSLAPolicy) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectIssueSLAPolicy) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectIssueSLAPolicy) GetNegligibleSla() *durationpb.Duration {
	if x != nil {
		return x.NegligibleSla
	}
	return nil
}

func (x *ProjectIssueSLAPolicy) GetLowSla() *durationpb.Duration {
	if x != nil {
		return x.LowSla
	}
	return nil
}

func (x *ProjectIssueSLAPolicy) GetMediumSla() *durationpb.Duration {
	if x != nil {
		return x.MediumSla
	}
	return nil
}

func (x *ProjectIssueSLAPolicy) GetHighSla() *durationpb.Duration {
	if x != nil {
		return x.HighSla
	}
	return nil
}

func (x *ProjectIssueSLAPolicy) GetCriticalSla() *durationpb.Duration {
	if x != nil {
		return x.CriticalSla
	}
	return nil
}

type SetProjectIssueSLAPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *ProjectIssueSLAPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *SetProjectIssueSLAPolicyResponse) Reset() {
	*x = SetProjectIssueSLAPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProjectIssueSLAPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProjectIssueSLAPolicyResponse) ProtoMessage() {}

func (x *SetProjectIssueSLAPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProjectIssueSLAPolicyResponse.ProtoReflect.Descriptor instead.
func (*SetProjectIssueSLAPolicyResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{9}
}

func (x *SetProjectIssueSLAPolicyResponse) GetPolicy() *ProjectIssueSLAPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetProjectIssueSLAPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectIssueSLAPolicyRequest) Reset() {
	*x = GetProjectIssueSLAPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectIssueSLAPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectIssueSLAPolicyRequest) ProtoMessage() {}

func (x *GetProjectIssueSLAPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectIssueSLAPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetProjectIssueSLAPolicyRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{10}
}

func (x *GetProjectIssueSLAPolicyRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectIssueSLAPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *ProjectIssueSLAPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetProjectIssueSLAPolicyResponse) Reset() {
	*x = GetProjectIssueSLAPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectIssueSLAPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectIssueSLAPolicyResponse) ProtoMessage() {}

func (x *GetProjectIssueSLAPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectIssueSLAPolicyResponse.ProtoReflect.Descriptor instead.
func (*GetProjectIssueSLAPolicyResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{11}
}

func (x *GetProjectIssueSLAPolicyResponse) GetPolicy() *ProjectIssueSLAPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{12}
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{13}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{14}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{15}
}

func (x *CreateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GetProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{16}
}

func (x *GetProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectResponse) Reset() {
	*x = GetProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResponse) ProtoMessage() {}

func (x *GetProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type GenerateAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Roles     []string `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GenerateAgentDeployTokenRequest) Reset() {
	*x = GenerateAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenRequest) ProtoMessage() {}

func (x *GenerateAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{20}
}

func (x *GenerateAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GenerateAgentDeployTokenRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GenerateAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployToken string `protobuf:"bytes,1,opt,name=deploy_token,json=deployToken,proto3" json:"deploy_token,omitempty"`
}

func (x *GenerateAgentDeployTokenResponse) Reset() {
	*x = GenerateAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenResponse) ProtoMessage() {}

func (x *GenerateAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateAgentDeployTokenResponse) GetDeployToken() string {
	if x != nil {
		return x.DeployToken
	}
	return ""
}

type CreateAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string   `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Roles       []string `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *CreateAgentDeployTokenRequest) Reset() {
	*x = CreateAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDeployTokenRequest) ProtoMessage() {}

func (x *CreateAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{22}
}

func (x *CreateAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateAgentDeployTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAgentDeployTokenRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type CreateAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateAgentDeployTokenResponse) Reset() {
	*x = CreateAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDeployTokenResponse) ProtoMessage() {}

func (x *CreateAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{23}
}

func (x *CreateAgentDeployTokenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateAgentDeployTokenResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAgentDeployTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListAgentDeployTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListAgentDeployTokensRequest) Reset() {
	*x = ListAgentDeployTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDeployTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDeployTokensRequest) ProtoMessage() {}

func (x *ListAgentDeployTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDeployTokensRequest.ProtoReflect.Descriptor instead.
func (*ListAgentDeployTokensRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{24}
}

func (x *ListAgentDeployTokensRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListAgentDeployTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*AgentDeployToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ListAgentDeployTokensResponse) Reset() {
	*x = ListAgentDeployTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDeployTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDeployTokensResponse) ProtoMessage() {}

func (x *ListAgentDeployTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDeployTokensResponse.ProtoReflect.Descriptor instead.
func (*ListAgentDeployTokensResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{25}
}

func (x *ListAgentDeployTokensResponse) GetTokens() []*AgentDeployToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type AgentDeployToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
	Roles       []string               `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *AgentDeployToken) Reset() {
	*x = AgentDeployToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDeployToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDeployToken) ProtoMessage() {}

func (x *AgentDeployToken) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDeployToken.ProtoReflect.Descriptor instead.
func (*AgentDeployToken) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{26}
}

func (x *AgentDeployToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentDeployToken) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AgentDeployToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgentDeployToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgentDeployToken) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

func (x *AgentDeployToken) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type DeleteAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenId   string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *DeleteAgentDeployTokenRequest) Reset() {
	*x = DeleteAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentDeployTokenRequest) ProtoMessage() {}

func (x *DeleteAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{27}
}

func (x *DeleteAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteAgentDeployTokenRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type DeleteAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAgentDeployTokenResponse) Reset() {
	*x = DeleteAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentDeployTokenResponse) ProtoMessage() {}

func (x *DeleteAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{28}
}

type ListMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{29}
}

func (x *ListMachinesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Machine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesResponse.ProtoReflect.Descriptor instead.
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{30}
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

type GetMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMachineRequest) Reset() {
	*x = GetMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineRequest) ProtoMessage() {}

func (x *GetMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineRequest.ProtoReflect.Descriptor instead.
func (*GetMachineRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{31}
}

func (x *GetMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetMachineRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type GetMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *GetMachineResponse) Reset() {
	*x = GetMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineResponse) ProtoMessage() {}

func (x *GetMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineResponse.ProtoReflect.Descriptor instead.
func (*GetMachineResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{32}
}

func (x *GetMachineResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Hostname                  string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PolicyViolations          int32                  `protobuf:"varint,4,opt,name=policy_violations,json=policyViolations,proto3" json:"policy_violations,omitempty"`
	Workloads                 int32                  `protobuf:"varint,5,opt,name=workloads,proto3" json:"workloads,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	OperatingSystem           string                 `protobuf:"bytes,8,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	LastUpdated               *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	AgentAlive                bool                   `protobuf:"varint,10,opt,name=agent_alive,json=agentAlive,proto3" json:"agent_alive,omitempty"`
	Labels                    map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{33}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Machine) GetPolicyViolations() int32 {
	if x != nil {
		return x.PolicyViolations
	}
	return 0
}

func (x *Machine) GetWorkloads() int32 {
	if x != nil {
		return x.Workloads
	}
	return 0
}

func (x *Machine) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Machine) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Machine) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Machine) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Machine) GetAgentAlive() bool {
	if x != nil {
		return x.AgentAlive
	}
	return false
}

func (x *Machine) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	InUse                     bool     `protobuf:"varint,4,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	TotalVulnerabilities      int32    `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32    `protobuf:"varint,6,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	WorkloadId                string   `protobuf:"bytes,7,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	SourceId                  string   `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	VulnerabilityIds          []string `protobuf:"bytes,9,rep,name=vulnerability_ids,json=vulnerabilityIds,proto3" json:"vulnerability_ids,omitempty"`
	Version                   string   `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{34}
}

func (x *Package) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Package) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *Package) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Package) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Package) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *Package) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Package) GetVulnerabilityIds() []string {
	if x != nil {
		return x.VulnerabilityIds
	}
	return nil
}

func (x *Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename   string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	InUse      bool   `protobuf:"varint,3,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Executable bool   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	PackageId  string `protobuf:"bytes,5,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	SourceId   string `protobuf:"bytes,6,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{35}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *File) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *File) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *File) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type VulnReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *VulnReference) Reset() {
	*x = VulnReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnReference) ProtoMessage() {}

func (x *VulnReference) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnReference.ProtoReflect.Descriptor instead.
func (*VulnReference) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{36}
}

func (x *VulnReference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Severity    VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References  []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState    VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{37}
}

func (x *Vulnerability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vulnerability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vulnerability) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *Vulnerability) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Vulnerability) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *Vulnerability) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type Workload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Trust                     string                 `protobuf:"bytes,5,opt,name=trust,proto3" json:"trust,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	SourceId                  string                 `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	ImageName                 string                 `protobuf:"bytes,9,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	StartedAt                 *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt                   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
}

func (x *Workload) Reset() {
	*x = Workload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workload) ProtoMessage() {}

func (x *Workload) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workload.ProtoReflect.Descriptor instead.
func (*Workload) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{38}
}

func (x *Workload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Workload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Workload) GetTrust() string {
	if x != nil {
		return x.Trust
	}
	return ""
}

func (x *Workload) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Workload) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Workload) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Workload) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *Workload) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Workload) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

type ListWorkloadsForMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *ListWorkloadsForMachineRequest) Reset() {
	*x = ListWorkloadsForMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsForMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsForMachineRequest) ProtoMessage() {}

func (x *ListWorkloadsForMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsForMachineRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadsForMachineRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{39}
}

func (x *ListWorkloadsForMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListWorkloadsForMachineRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type ListWorkloadsForMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine   *Machine    `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Workloads []*Workload `protobuf:"bytes,2,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListWorkloadsForMachineResponse) Reset() {
	*x = ListWorkloadsForMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsForMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsForMachineResponse) ProtoMessage() {}

func (x *ListWorkloadsForMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsForMachineResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadsForMachineResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{40}
}

func (x *ListWorkloadsForMachineResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *ListWorkloadsForMachineResponse) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type GetMachineInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMachineInventoryRequest) Reset() {
	*x = GetMachineInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryRequest) ProtoMessage() {}

func (x *GetMachineInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{41}
}

func (x *GetMachineInventoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetMachineInventoryRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type GetMachineInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine         *Machine         `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Packages        []*Package       `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
	FilesInUse      []*File          `protobuf:"bytes,3,rep,name=files_in_use,json=filesInUse,proto3" json:"files_in_use,omitempty"`
	Workloads       []*Workload      `protobuf:"bytes,4,rep,name=workloads,proto3" json:"workloads,omitempty"`
	Vulnerabilities []*Vulnerability `protobuf:"bytes,5,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *GetMachineInventoryResponse) Reset() {
	*x = GetMachineInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryResponse) ProtoMessage() {}

func (x *GetMachineInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{42}
}

func (x *GetMachineInventoryResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetFilesInUse() []*File {
	if x != nil {
		return x.FilesInUse
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type OverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *OverviewRequest) Reset() {
	*x = OverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewRequest) ProtoMessage() {}

func (x *OverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewRequest.ProtoReflect.Descriptor instead.
func (*OverviewRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{43}
}

func (x *OverviewRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type OverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages                  []*OverviewPackage       `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	ActiveWorkloads           int32                    `protobuf:"varint,2,opt,name=active_workloads,json=activeWorkloads,proto3" json:"active_workloads,omitempty"`
	UniquePackages            int32                    `protobuf:"varint,3,opt,name=unique_packages,json=uniquePackages,proto3" json:"unique_packages,omitempty"`
	ActivePackages            int32                    `protobuf:"varint,4,opt,name=active_packages,json=activePackages,proto3" json:"active_packages,omitempty"`
	TotalVulnerabilities      int32                    `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                    `protobuf:"varint,6,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	OnboardingState           *OverviewOnboardingState `protobuf:"bytes,7,opt,name=onboarding_state,json=onboardingState,proto3" json:"onboarding_state,omitempty"`
}

func (x *OverviewResponse) Reset() {
	*x = OverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewResponse) ProtoMessage() {}

func (x *OverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewResponse.ProtoReflect.Descriptor instead.
func (*OverviewResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{44}
}

func (x *OverviewResponse) GetPackages() []*OverviewPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *OverviewResponse) GetActiveWorkloads() int32 {
	if x != nil {
		return x.ActiveWorkloads
	}
	return 0
}

func (x *OverviewResponse) GetUniquePackages() int32 {
	if x != nil {
		return x.UniquePackages
	}
	return 0
}

func (x *OverviewResponse) GetActivePackages() int32 {
	if x != nil {
		return x.ActivePackages
	}
	return 0
}

func (x *OverviewResponse) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *OverviewResponse) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *OverviewResponse) GetOnboardingState() *OverviewOnboardingState {
	if x != nil {
		return x.OnboardingState
	}
	return nil
}

type OverviewPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId      string                 `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	PackageName    string                 `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageVersion string                 `protobuf:"bytes,3,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	SeenTotal      int32                  `protobuf:"varint,4,opt,name=seen_total,json=seenTotal,proto3" json:"seen_total,omitempty"`
	SeenActive     int32                  `protobuf:"varint,5,opt,name=seen_active,json=seenActive,proto3" json:"seen_active,omitempty"`
	PackageType    string                 `protobuf:"bytes,6,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	Vulns          []*OverviewPackageVuln `protobuf:"bytes,7,rep,name=vulns,proto3" json:"vulns,omitempty"`
}

func (x *OverviewPackage) Reset() {
	*x = OverviewPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewPackage) ProtoMessage() {}

func (x *OverviewPackage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewPackage.ProtoReflect.Descriptor instead.
func (*OverviewPackage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{45}
}

func (x *OverviewPackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *OverviewPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *OverviewPackage) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *OverviewPackage) GetSeenTotal() int32 {
	if x != nil {
		return x.SeenTotal
	}
	return 0
}

func (x *OverviewPackage) GetSeenActive() int32 {
	if x != nil {
		return x.SeenActive
	}
	return 0
}

func (x *OverviewPackage) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *OverviewPackage) GetVulns() []*OverviewPackageVuln {
	if x != nil {
		return x.Vulns
	}
	return nil
}

type OverviewPackageVuln struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VulnerabilityId string           `protobuf:"bytes,1,opt,name=vulnerability_id,json=vulnerabilityId,proto3" json:"vulnerability_id,omitempty"`
	Summary         string           `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Severity        VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References      []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState        VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions     []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *OverviewPackageVuln) Reset() {
	*x = OverviewPackageVuln{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewPackageVuln) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewPackageVuln) ProtoMessage() {}

func (x *OverviewPackageVuln) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewPackageVuln.ProtoReflect.Descriptor instead.
func (*OverviewPackageVuln) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{46}
}

func (x *OverviewPackageVuln) GetVulnerabilityId() string {
	if x != nil {
		return x.VulnerabilityId
	}
	return ""
}

func (x *OverviewPackageVuln) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *OverviewPackageVuln) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *OverviewPackageVuln) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *OverviewPackageVuln) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *OverviewPackageVuln) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type OverviewOnboardingState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentDeployed      bool `protobuf:"varint,1,opt,name=agent_deployed,json=agentDeployed,proto3" json:"agent_deployed,omitempty"`
	ContainersDetected bool `protobuf:"varint,2,opt,name=containers_detected,json=containersDetected,proto3" json:"containers_detected,omitempty"`
	SbomUploaded       bool `protobuf:"varint,3,opt,name=sbom_uploaded,json=sbomUploaded,proto3" json:"sbom_uploaded,omitempty"`
}

func (x *OverviewOnboardingState) Reset() {
	*x = OverviewOnboardingState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewOnboardingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewOnboardingState) ProtoMessage() {}

func (x *OverviewOnboardingState) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewOnboardingState.ProtoReflect.Descriptor instead.
func (*OverviewOnboardingState) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{47}
}

func (x *OverviewOnboardingState) GetAgentDeployed() bool {
	if x != nil {
		return x.AgentDeployed
	}
	return false
}

func (x *OverviewOnboardingState) GetContainersDetected() bool {
	if x != nil {
		return x.ContainersDetected
	}
	return false
}

func (x *OverviewOnboardingState) GetSbomUploaded() bool {
	if x != nil {
		return x.SbomUploaded
	}
	return false
}

type CreateOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateOrgAccessTokenRequest) Reset() {
	*x = CreateOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenRequest) ProtoMessage() {}

func (x *CreateOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{48}
}

func (x *CreateOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateOrgAccessTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateOrgAccessTokenResponse) Reset() {
	*x = CreateOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenResponse) ProtoMessage() {}

func (x *CreateOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{49}
}

func (x *CreateOrgAccessTokenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListOrgAccessTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListOrgAccessTokensRequest) Reset() {
	*x = ListOrgAccessTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensRequest) ProtoMessage() {}

func (x *ListOrgAccessTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensRequest.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{50}
}

func (x *ListOrgAccessTokensRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListOrgAccessTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*OrgAccessToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ListOrgAccessTokensResponse) Reset() {
	*x = ListOrgAccessTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensResponse) ProtoMessage() {}

func (x *ListOrgAccessTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensResponse.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{51}
}

func (x *ListOrgAccessTokensResponse) GetTokens() []*OrgAccessToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type OrgAccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
}

func (x *OrgAccessToken) Reset() {
	*x = OrgAccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAccessToken) ProtoMessage() {}

func (x *OrgAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAccessToken.ProtoReflect.Descriptor instead.
func (*OrgAccessToken) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{52}
}

func (x *OrgAccessToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgAccessToken) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OrgAccessToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrgAccessToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrgAccessToken) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type DeleteOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrgAccessTokenRequest) Reset() {
	*x = DeleteOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenRequest) ProtoMessage() {}

func (x *DeleteOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteOrgAccessTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrgAccessTokenResponse) Reset() {
	*x = DeleteOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenResponse) ProtoMessage() {}

func (x *DeleteOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{54}
}

// An image with no further details. This primarily happens when an SBOM tool
// (e.g. syft) is ran on the workload (e.g. after a host boots)
type GenericImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericImage) Reset() {
	*x = GenericImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericImage) ProtoMessage() {}

func (x *GenericImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericImage.ProtoReflect.Descriptor instead.
func (*GenericImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{55}
}

// Docker image
type DockerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Potentially full tag in registry/user/name:tag format.
	// The full format does not need to be used. The same defaults
	// that "docker pull" assumes will work.
	Tag         string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	RepoDigests []string `protobuf:"bytes,2,rep,name=repo_digests,json=repoDigests,proto3" json:"repo_digests,omitempty"`
}

func (x *DockerImage) Reset() {
	*x = DockerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImage) ProtoMessage() {}

func (x *DockerImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImage.ProtoReflect.Descriptor instead.
func (*DockerImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{56}
}

func (x *DockerImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DockerImage) GetRepoDigests() []string {
	if x != nil {
		return x.RepoDigests
	}
	return nil
}

type AMI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AMI) Reset() {
	*x = AMI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMI) ProtoMessage() {}

func (x *AMI) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMI.ProtoReflect.Descriptor instead.
func (*AMI) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{57}
}

func (x *AMI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AMI) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type: Docker | OCI | AMI | ...
	//
	// Types that are assignable to Kind:
	//
	//	*Image_Generic
	//	*Image_Docker
	//	*Image_Ami
	Kind isImage_Kind `protobuf_oneof:"kind"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{58}
}

func (m *Image) GetKind() isImage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Image) GetGeneric() *GenericImage {
	if x, ok := x.GetKind().(*Image_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *Image) GetDocker() *DockerImage {
	if x, ok := x.GetKind().(*Image_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *Image) GetAmi() *AMI {
	if x, ok := x.GetKind().(*Image_Ami); ok {
		return x.Ami
	}
	return nil
}

type isImage_Kind interface {
	isImage_Kind()
}

type Image_Generic struct {
	Generic *GenericImage `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type Image_Docker struct {
	Docker *DockerImage `protobuf:"bytes,2,opt,name=docker,proto3,oneof"`
}

type Image_Ami struct {
	Ami *AMI `protobuf:"bytes,3,opt,name=ami,proto3,oneof"`
}

func (*Image_Generic) isImage_Kind() {}

func (*Image_Docker) isImage_Kind() {}

func (*Image_Ami) isImage_Kind() {}

type UploadSBOMHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat        `protobuf:"varint,2,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string            `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image            `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string            `protobuf:"bytes,6,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string            `protobuf:"bytes,7,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	ComponentName  string            `protobuf:"bytes,8,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	Tags           []string          `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Size           uint64            `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	PullRequest    string            `protobuf:"bytes,11,opt,name=pull_request,json=pullRequest,proto3" json:"pull_request,omitempty"`
}

func (x *UploadSBOMHeader) Reset() {
	*x = UploadSBOMHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMHeader) ProtoMessage() {}

func (x *UploadSBOMHeader) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMHeader.ProtoReflect.Descriptor instead.
func (*UploadSBOMHeader) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{59}
}

func (x *UploadSBOMHeader) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UploadSBOMHeader) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *UploadSBOMHeader) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UploadSBOMHeader) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *UploadSBOMHeader) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UploadSBOMHeader) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *UploadSBOMHeader) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *UploadSBOMHeader) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *UploadSBOMHeader) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UploadSBOMHeader) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadSBOMHeader) GetPullRequest() string {
	if x != nil {
		return x.PullRequest
	}
	return ""
}

type UploadSBOMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*UploadSBOMRequest_Header
	//	*UploadSBOMRequest_Data
	Kind isUploadSBOMRequest_Kind `protobuf_oneof:"kind"`
}

func (x *UploadSBOMRequest) Reset() {
	*x = UploadSBOMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMRequest) ProtoMessage() {}

func (x *UploadSBOMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMRequest.ProtoReflect.Descriptor instead.
func (*UploadSBOMRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{60}
}

func (m *UploadSBOMRequest) GetKind() isUploadSBOMRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *UploadSBOMRequest) GetHeader() *UploadSBOMHeader {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (x *UploadSBOMRequest) GetData() []byte {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isUploadSBOMRequest_Kind interface {
	isUploadSBOMRequest_Kind()
}

type UploadSBOMRequest_Header struct {
	Header *UploadSBOMHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type UploadSBOMRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*UploadSBOMRequest_Header) isUploadSBOMRequest_Kind() {}

func (*UploadSBOMRequest_Data) isUploadSBOMRequest_Kind() {}

type UploadSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UploadSBOMResponse) Reset() {
	*x = UploadSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMResponse) ProtoMessage() {}

func (x *UploadSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMResponse.ProtoReflect.Descriptor instead.
func (*UploadSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{61}
}

func (x *UploadSBOMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SBOMListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat             `protobuf:"varint,3,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string                 `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string                 `protobuf:"bytes,7,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string                 `protobuf:"bytes,8,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MachineId      string                 `protobuf:"bytes,10,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	ComponentId    string                 `protobuf:"bytes,11,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Deprecated
	ComponentRef   *ComponentRef          `protobuf:"bytes,12,opt,name=component_ref,json=componentRef,proto3" json:"component_ref,omitempty"`
	MachineRef     *MachineRef            `protobuf:"bytes,13,opt,name=machine_ref,json=machineRef,proto3" json:"machine_ref,omitempty"`
}

func (x *SBOMListItem) Reset() {
	*x = SBOMListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMListItem) ProtoMessage() {}

func (x *SBOMListItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMListItem.ProtoReflect.Descriptor instead.
func (*SBOMListItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{62}
}

func (x *SBOMListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SBOMListItem) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SBOMListItem) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *SBOMListItem) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SBOMListItem) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *SBOMListItem) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SBOMListItem) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *SBOMListItem) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *SBOMListItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SBOMListItem) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *SBOMListItem) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *SBOMListItem) GetComponentRef() *ComponentRef {
	if x != nil {
		return x.ComponentRef
	}
	return nil
}

func (x *SBOMListItem) GetMachineRef() *MachineRef {
	if x != nil {
		return x.MachineRef
	}
	return nil
}

type ListSBOMsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *ListSBOMsRequest) Reset() {
	*x = ListSBOMsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSBOMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSBOMsRequest) ProtoMessage() {}

func (x *ListSBOMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSBOMsRequest.ProtoReflect.Descriptor instead.
func (*ListSBOMsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{63}
}

func (x *ListSBOMsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListSBOMsRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type ListSBOMsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SBOMListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListSBOMsResponse) Reset() {
	*x = ListSBOMsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSBOMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSBOMsResponse) ProtoMessage() {}

func (x *ListSBOMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSBOMsResponse.ProtoReflect.Descriptor instead.
func (*ListSBOMsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{64}
}

func (x *ListSBOMsResponse) GetItems() []*SBOMListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetSBOMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSBOMRequest) Reset() {
	*x = GetSBOMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMRequest) ProtoMessage() {}

func (x *GetSBOMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{65}
}

func (x *GetSBOMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat             `protobuf:"varint,3,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string                 `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string                 `protobuf:"bytes,7,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string                 `protobuf:"bytes,8,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MachineId      string                 `protobuf:"bytes,10,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	ComponentRef   *ComponentRef          `protobuf:"bytes,11,opt,name=component_ref,json=componentRef,proto3,oneof" json:"component_ref,omitempty"`
	MachineRef     *MachineRef            `protobuf:"bytes,12,opt,name=machine_ref,json=machineRef,proto3" json:"machine_ref,omitempty"`
	PullRequest    string                 `protobuf:"bytes,13,opt,name=pull_request,json=pullRequest,proto3" json:"pull_request,omitempty"`
}

func (x *GetSBOMResponse) Reset() {
	*x = GetSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMResponse) ProtoMessage() {}

func (x *GetSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{66}
}

func (x *GetSBOMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSBOMResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMResponse) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *GetSBOMResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetSBOMResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *GetSBOMResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *GetSBOMResponse) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *GetSBOMResponse) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *GetSBOMResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSBOMResponse) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *GetSBOMResponse) GetComponentRef() *ComponentRef {
	if x != nil {
		return x.ComponentRef
	}
	return nil
}

func (x *GetSBOMResponse) GetMachineRef() *MachineRef {
	if x != nil {
		return x.MachineRef
	}
	return nil
}

func (x *GetSBOMResponse) GetPullRequest() string {
	if x != nil {
		return x.PullRequest
	}
	return ""
}

type GetSBOMInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSBOMInventoryRequest) Reset() {
	*x = GetSBOMInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMInventoryRequest) ProtoMessage() {}

func (x *GetSBOMInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMInventoryRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{67}
}

func (x *GetSBOMInventoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMInventoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSBOMInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages      []*SBOMInventoryPackage `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	Relationships []*GraphRelationship    `protobuf:"bytes,2,rep,name=relationships,proto3" json:"relationships,omitempty"`
}

func (x *GetSBOMInventoryResponse) Reset() {
	*x = GetSBOMInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMInventoryResponse) ProtoMessage() {}

func (x *GetSBOMInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMInventoryResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{68}
}

func (x *GetSBOMInventoryResponse) GetPackages() []*SBOMInventoryPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetSBOMInventoryResponse) GetRelationships() []*GraphRelationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

type InstallationEvidence struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The metadata files that the cataloger used to locate the package
	EvidentBy []string `protobuf:"bytes,1,rep,name=evident_by,json=evidentBy,proto3" json:"evident_by,omitempty"`
	// Suppose pyfoo was installed in via Dockfile and a requirements.txt
	// Then "installed_by" would look like ["/app/Dockerfile:25: RUN pip install requirements.txt", "/app/requirements.txt:10: pyfoo==1.2.3"]
	InstalledBy []string `protobuf:"bytes,2,rep,name=installed_by,json=installedBy,proto3" json:"installed_by,omitempty"`
}

func (x *InstallationEvidence) Reset() {
	*x = InstallationEvidence{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallationEvidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallationEvidence) ProtoMessage() {}

func (x *InstallationEvidence) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallationEvidence.ProtoReflect.Descriptor instead.
func (*InstallationEvidence) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{69}
}

func (x *InstallationEvidence) GetEvidentBy() []string {
	if x != nil {
		return x.EvidentBy
	}
	return nil
}

func (x *InstallationEvidence) GetInstalledBy() []string {
	if x != nil {
		return x.InstalledBy
	}
	return nil
}

// Multiple licenses can be combined via AND or OR. For example:
// libfoo is licensed under Apache-2 OR MIT
// libbar is licensed under GPLv2
// A compoenent using both licenses would need to abide by "(Apache-2 OR MIT) AND GPLv2"
// A license set is a conjunctive list of disjunctive clauses, i.e. inner licenses are OR'ed
// and those are AND'ed.
type LicenseExpr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These are AND'ed together
	Clauses []*LicenseClause `protobuf:"bytes,1,rep,name=clauses,proto3" json:"clauses,omitempty"`
}

func (x *LicenseExpr) Reset() {
	*x = LicenseExpr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseExpr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseExpr) ProtoMessage() {}

func (x *LicenseExpr) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseExpr.ProtoReflect.Descriptor instead.
func (*LicenseExpr) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{70}
}

func (x *LicenseExpr) GetClauses() []*LicenseClause {
	if x != nil {
		return x.Clauses
	}
	return nil
}

type LicenseClause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// These are OR'ed together
	Terms []string `protobuf:"bytes,1,rep,name=terms,proto3" json:"terms,omitempty"`
}

func (x *LicenseClause) Reset() {
	*x = LicenseClause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LicenseClause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LicenseClause) ProtoMessage() {}

func (x *LicenseClause) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LicenseClause.ProtoReflect.Descriptor instead.
func (*LicenseClause) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{71}
}

func (x *LicenseClause) GetTerms() []string {
	if x != nil {
		return x.Terms
	}
	return nil
}

type SBOMInventoryPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId      string                `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	PackageName    string                `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageType    string                `protobuf:"bytes,3,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	PackageVersion string                `protobuf:"bytes,4,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	Vulns          []*SBOMInventoryVuln  `protobuf:"bytes,5,rep,name=vulns,proto3" json:"vulns,omitempty"`
	Evidence       *InstallationEvidence `protobuf:"bytes,6,opt,name=evidence,proto3" json:"evidence,omitempty"`
	License        *LicenseExpr          `protobuf:"bytes,7,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *SBOMInventoryPackage) Reset() {
	*x = SBOMInventoryPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMInventoryPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMInventoryPackage) ProtoMessage() {}

func (x *SBOMInventoryPackage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMInventoryPackage.ProtoReflect.Descriptor instead.
func (*SBOMInventoryPackage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{72}
}

func (x *SBOMInventoryPackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *SBOMInventoryPackage) GetVulns() []*SBOMInventoryVuln {
	if x != nil {
		return x.Vulns
	}
	return nil
}

func (x *SBOMInventoryPackage) GetEvidence() *InstallationEvidence {
	if x != nil {
		return x.Evidence
	}
	return nil
}

func (x *SBOMInventoryPackage) GetLicense() *LicenseExpr {
	if x != nil {
		return x.License
	}
	return nil
}

type SBOMInventoryVuln struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VulnerabilityId string           `protobuf:"bytes,1,opt,name=vulnerability_id,json=vulnerabilityId,proto3" json:"vulnerability_id,omitempty"`
	Summary         string           `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Severity        VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References      []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState        VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions     []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *SBOMInventoryVuln) Reset() {
	*x = SBOMInventoryVuln{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMInventoryVuln) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMInventoryVuln) ProtoMessage() {}

func (x *SBOMInventoryVuln) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMInventoryVuln.ProtoReflect.Descriptor instead.
func (*SBOMInventoryVuln) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{73}
}

func (x *SBOMInventoryVuln) GetVulnerabilityId() string {
	if x != nil {
		return x.VulnerabilityId
	}
	return ""
}

func (x *SBOMInventoryVuln) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SBOMInventoryVuln) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *SBOMInventoryVuln) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *SBOMInventoryVuln) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *SBOMInventoryVuln) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type DebugWorkloadPackageInUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorkloadId string `protobuf:"bytes,2,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	PackageId  string `protobuf:"bytes,3,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
}

func (x *DebugWorkloadPackageInUseRequest) Reset() {
	*x = DebugWorkloadPackageInUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugWorkloadPackageInUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugWorkloadPackageInUseRequest) ProtoMessage() {}

func (x *DebugWorkloadPackageInUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugWorkloadPackageInUseRequest.ProtoReflect.Descriptor instead.
func (*DebugWorkloadPackageInUseRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{74}
}

func (x *DebugWorkloadPackageInUseRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DebugWorkloadPackageInUseRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *DebugWorkloadPackageInUseRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type DebugWorkloadPackageInUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId                   string                                                      `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	PackageName                 string                                                      `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageType                 string                                                      `protobuf:"bytes,3,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	PackageVersion              string                                                      `protobuf:"bytes,4,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	SupportsInUseDetection      bool                                                        `protobuf:"varint,5,opt,name=supports_in_use_detection,json=supportsInUseDetection,proto3" json:"supports_in_use_detection,omitempty"`
	InUseLocations              []*DebugWorkloadPackageInUseResponse_InUseDetectionLocation `protobuf:"bytes,6,rep,name=in_use_locations,json=inUseLocations,proto3" json:"in_use_locations,omitempty"`
	OtherWorkloadInUseFilePaths []string                                                    `protobuf:"bytes,7,rep,name=other_workload_in_use_file_paths,json=otherWorkloadInUseFilePaths,proto3" json:"other_workload_in_use_file_paths,omitempty"`
}

func (x *DebugWorkloadPackageInUseResponse) Reset() {
	*x = DebugWorkloadPackageInUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugWorkloadPackageInUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugWorkloadPackageInUseResponse) ProtoMessage() {}

func (x *DebugWorkloadPackageInUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugWorkloadPackageInUseResponse.ProtoReflect.Descriptor instead.
func (*DebugWorkloadPackageInUseResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{75}
}

func (x *DebugWorkloadPackageInUseResponse) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *DebugWorkloadPackageInUseResponse) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *DebugWorkloadPackageInUseResponse) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *DebugWorkloadPackageInUseResponse) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *DebugWorkloadPackageInUseResponse) GetSupportsInUseDetection() bool {
	if x != nil {
		return x.SupportsInUseDetection
	}
	return false
}

func (x *DebugWorkloadPackageInUseResponse) GetInUseLocations() []*DebugWorkloadPackageInUseResponse_InUseDetectionLocation {
	if x != nil {
		return x.InUseLocations
	}
	return nil
}

func (x *DebugWorkloadPackageInUseResponse) GetOtherWorkloadInUseFilePaths() []string {
	if x != nil {
		return x.OtherWorkloadInUseFilePaths
	}
	return nil
}

type ListComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListComponentsRequest) Reset() {
	*x = ListComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsRequest) ProtoMessage() {}

func (x *ListComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{76}
}

func (x *ListComponentsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []*Component `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *ListComponentsResponse) Reset() {
	*x = ListComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsResponse) ProtoMessage() {}

func (x *ListComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{77}
}

func (x *ListComponentsResponse) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type GetComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetComponentRequest) Reset() {
	*x = GetComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentRequest) ProtoMessage() {}

func (x *GetComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentRequest.ProtoReflect.Descriptor instead.
func (*GetComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{78}
}

func (x *GetComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *GetComponentResponse) Reset() {
	*x = GetComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentResponse) ProtoMessage() {}

func (x *GetComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentResponse.ProtoReflect.Descriptor instead.
func (*GetComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{79}
}

func (x *GetComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type VCSImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*VCSImport_Github
	Kind isVCSImport_Kind `protobuf_oneof:"kind"`
}

func (x *VCSImport) Reset() {
	*x = VCSImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCSImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCSImport) ProtoMessage() {}

func (x *VCSImport) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCSImport.ProtoReflect.Descriptor instead.
func (*VCSImport) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{80}
}

func (m *VCSImport) GetKind() isVCSImport_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *VCSImport) GetGithub() *GitHubRepoToImport {
	if x, ok := x.GetKind().(*VCSImport_Github); ok {
		return x.Github
	}
	return nil
}

type isVCSImport_Kind interface {
	isVCSImport_Kind()
}

type VCSImport_Github struct {
	Github *GitHubRepoToImport `protobuf:"bytes,1,opt,name=github,proto3,oneof"`
}

func (*VCSImport_Github) isVCSImport_Kind() {}

type CreateComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId                     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName                   string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Type                          ComponentType          `protobuf:"varint,4,opt,name=type,proto3,enum=edgebit.platform.v1alpha.ComponentType" json:"type,omitempty"`
	Labels                        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository              string                 `protobuf:"bytes,6,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector               string                 `protobuf:"bytes,7,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName                string                 `protobuf:"bytes,8,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
	PolicyIgnoreSeverityThreshold ComponentIssueSeverity `protobuf:"varint,9,opt,name=policy_ignore_severity_threshold,json=policyIgnoreSeverityThreshold,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"policy_ignore_severity_threshold,omitempty"`
	PolicyDormantPackage          DormantPackagePolicy   `protobuf:"varint,10,opt,name=policy_dormant_package,json=policyDormantPackage,proto3,enum=edgebit.platform.v1alpha.DormantPackagePolicy" json:"policy_dormant_package,omitempty"`
	VcsImport                     *VCSImport             `protobuf:"bytes,11,opt,name=vcs_import,json=vcsImport,proto3" json:"vcs_import,omitempty"`
}

func (x *CreateComponentRequest) Reset() {
	*x = CreateComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComponentRequest) ProtoMessage() {}

func (x *CreateComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComponentRequest.ProtoReflect.Descriptor instead.
func (*CreateComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{81}
}

func (x *CreateComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateComponentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateComponentRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateComponentRequest) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (x *CreateComponentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateComponentRequest) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *CreateComponentRequest) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *CreateComponentRequest) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

func (x *CreateComponentRequest) GetPolicyIgnoreSeverityThreshold() ComponentIssueSeverity {
	if x != nil {
		return x.PolicyIgnoreSeverityThreshold
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *CreateComponentRequest) GetPolicyDormantPackage() DormantPackagePolicy {
	if x != nil {
		return x.PolicyDormantPackage
	}
	return DormantPackagePolicy_DORMANT_PACKAGE_POLICY_UNSPECIFIED
}

func (x *CreateComponentRequest) GetVcsImport() *VCSImport {
	if x != nil {
		return x.VcsImport
	}
	return nil
}

type CreateComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *CreateComponentResponse) Reset() {
	*x = CreateComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComponentResponse) ProtoMessage() {}

func (x *CreateComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComponentResponse.ProtoReflect.Descriptor instead.
func (*CreateComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{82}
}

func (x *CreateComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type UpdateComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId                     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id                            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName                   string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Labels                        map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository              string                 `protobuf:"bytes,6,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector               string                 `protobuf:"bytes,7,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName                string                 `protobuf:"bytes,8,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
	PolicyIgnoreSeverityThreshold ComponentIssueSeverity `protobuf:"varint,9,opt,name=policy_ignore_severity_threshold,json=policyIgnoreSeverityThreshold,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"policy_ignore_severity_threshold,omitempty"`
	PolicyDormantPackage          DormantPackagePolicy   `protobuf:"varint,10,opt,name=policy_dormant_package,json=policyDormantPackage,proto3,enum=edgebit.platform.v1alpha.DormantPackagePolicy" json:"policy_dormant_package,omitempty"`
}

func (x *UpdateComponentRequest) Reset() {
	*x = UpdateComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentRequest) ProtoMessage() {}

func (x *UpdateComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentRequest.ProtoReflect.Descriptor instead.
func (*UpdateComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{83}
}

func (x *UpdateComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateComponentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateComponentRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateComponentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateComponentRequest) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *UpdateComponentRequest) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *UpdateComponentRequest) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

func (x *UpdateComponentRequest) GetPolicyIgnoreSeverityThreshold() ComponentIssueSeverity {
	if x != nil {
		return x.PolicyIgnoreSeverityThreshold
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *UpdateComponentRequest) GetPolicyDormantPackage() DormantPackagePolicy {
	if x != nil {
		return x.PolicyDormantPackage
	}
	return DormantPackagePolicy_DORMANT_PACKAGE_POLICY_UNSPECIFIED
}

type UpdateComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *UpdateComponentResponse) Reset() {
	*x = UpdateComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentResponse) ProtoMessage() {}

func (x *UpdateComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentResponse.ProtoReflect.Descriptor instead.
func (*UpdateComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type DeleteComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteComponentRequest) Reset() {
	*x = DeleteComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentRequest) ProtoMessage() {}

func (x *DeleteComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentRequest.ProtoReflect.Descriptor instead.
func (*DeleteComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{85}
}

func (x *DeleteComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteComponentResponse) Reset() {
	*x = DeleteComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentResponse) ProtoMessage() {}

func (x *DeleteComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentResponse.ProtoReflect.Descriptor instead.
func (*DeleteComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{86}
}

type AttestationChain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AttestationChain) Reset() {
	*x = AttestationChain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationChain) ProtoMessage() {}

func (x *AttestationChain) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationChain.ProtoReflect.Descriptor instead.
func (*AttestationChain) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{87}
}

type AttestationChainItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Trust *AttestationChainItemTrust `protobuf:"bytes,2,opt,name=trust,proto3" json:"trust,omitempty"`
	Audit map[string]string          `protobuf:"bytes,3,rep,name=audit,proto3" json:"audit,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AttestationChainItem) Reset() {
	*x = AttestationChainItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationChainItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationChainItem) ProtoMessage() {}

func (x *AttestationChainItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationChainItem.ProtoReflect.Descriptor instead.
func (*AttestationChainItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{88}
}

func (x *AttestationChainItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttestationChainItem) GetTrust() *AttestationChainItemTrust {
	if x != nil {
		return x.Trust
	}
	return nil
}

func (x *AttestationChainItem) GetAudit() map[string]string {
	if x != nil {
		return x.Audit
	}
	return nil
}

type AttestationChainItemTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step       bool `protobuf:"varint,1,opt,name=step,proto3" json:"step,omitempty"`
	Downstream bool `protobuf:"varint,2,opt,name=downstream,proto3" json:"downstream,omitempty"`
}

func (x *AttestationChainItemTrust) Reset() {
	*x = AttestationChainItemTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationChainItemTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationChainItemTrust) ProtoMessage() {}

func (x *AttestationChainItemTrust) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationChainItemTrust.ProtoReflect.Descriptor instead.
func (*AttestationChainItemTrust) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{89}
}

func (x *AttestationChainItemTrust) GetStep() bool {
	if x != nil {
		return x.Step
	}
	return false
}

func (x *AttestationChainItemTrust) GetDownstream() bool {
	if x != nil {
		return x.Downstream
	}
	return false
}

type GetComponentDefaultTagSBOMAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *GetComponentDefaultTagSBOMAttestationRequest) Reset() {
	*x = GetComponentDefaultTagSBOMAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentDefaultTagSBOMAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentDefaultTagSBOMAttestationRequest) ProtoMessage() {}

func (x *GetComponentDefaultTagSBOMAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentDefaultTagSBOMAttestationRequest.ProtoReflect.Descriptor instead.
func (*GetComponentDefaultTagSBOMAttestationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{90}
}

func (x *GetComponentDefaultTagSBOMAttestationRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentDefaultTagSBOMAttestationRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type GetComponentDefaultTagSBOMAttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainItems []*AttestationChainItem `protobuf:"bytes,1,rep,name=chain_items,json=chainItems,proto3" json:"chain_items,omitempty"`
}

func (x *GetComponentDefaultTagSBOMAttestationResponse) Reset() {
	*x = GetComponentDefaultTagSBOMAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentDefaultTagSBOMAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentDefaultTagSBOMAttestationResponse) ProtoMessage() {}

func (x *GetComponentDefaultTagSBOMAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentDefaultTagSBOMAttestationResponse.ProtoReflect.Descriptor instead.
func (*GetComponentDefaultTagSBOMAttestationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{91}
}

func (x *GetComponentDefaultTagSBOMAttestationResponse) GetChainItems() []*AttestationChainItem {
	if x != nil {
		return x.ChainItems
	}
	return nil
}

type GetSBOMAttestationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomId    string `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *GetSBOMAttestationRequest) Reset() {
	*x = GetSBOMAttestationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMAttestationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMAttestationRequest) ProtoMessage() {}

func (x *GetSBOMAttestationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMAttestationRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMAttestationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{92}
}

func (x *GetSBOMAttestationRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMAttestationRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type GetSBOMAttestationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainItems []*AttestationChainItem `protobuf:"bytes,1,rep,name=chain_items,json=chainItems,proto3" json:"chain_items,omitempty"`
}

func (x *GetSBOMAttestationResponse) Reset() {
	*x = GetSBOMAttestationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMAttestationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMAttestationResponse) ProtoMessage() {}

func (x *GetSBOMAttestationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMAttestationResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMAttestationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{93}
}

func (x *GetSBOMAttestationResponse) GetChainItems() []*AttestationChainItem {
	if x != nil {
		return x.ChainItems
	}
	return nil
}

type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName                   string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CreatedAt                     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type                          ComponentType          `protobuf:"varint,7,opt,name=type,proto3,enum=edgebit.platform.v1alpha.ComponentType" json:"type,omitempty"`
	Labels                        map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository              string                 `protobuf:"bytes,9,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector               string                 `protobuf:"bytes,10,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName                string                 `protobuf:"bytes,11,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
	PolicyIgnoreSeverityThreshold ComponentIssueSeverity `protobuf:"varint,12,opt,name=policy_ignore_severity_threshold,json=policyIgnoreSeverityThreshold,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"policy_ignore_severity_threshold,omitempty"`
	PolicyDormantPackage          DormantPackagePolicy   `protobuf:"varint,13,opt,name=policy_dormant_package,json=policyDormantPackage,proto3,enum=edgebit.platform.v1alpha.DormantPackagePolicy" json:"policy_dormant_package,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{94}
}

func (x *Component) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Component) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Component) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Component) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Component) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Component) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (x *Component) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Component) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *Component) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *Component) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

func (x *Component) GetPolicyIgnoreSeverityThreshold() ComponentIssueSeverity {
	if x != nil {
		return x.PolicyIgnoreSeverityThreshold
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *Component) GetPolicyDormantPackage() DormantPackagePolicy {
	if x != nil {
		return x.PolicyDormantPackage
	}
	return DormantPackagePolicy_DORMANT_PACKAGE_POLICY_UNSPECIFIED
}

type ListComponentsWithMetricsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListComponentsWithMetricsRequest) Reset() {
	*x = ListComponentsWithMetricsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsWithMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsWithMetricsRequest) ProtoMessage() {}

func (x *ListComponentsWithMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsWithMetricsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentsWithMetricsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{95}
}

func (x *ListComponentsWithMetricsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListComponentsWithMetricsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentsWithMetrics []*ComponentWithMetrics `protobuf:"bytes,1,rep,name=components_with_metrics,json=componentsWithMetrics,proto3" json:"components_with_metrics,omitempty"`
}

func (x *ListComponentsWithMetricsResponse) Reset() {
	*x = ListComponentsWithMetricsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsWithMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsWithMetricsResponse) ProtoMessage() {}

func (x *ListComponentsWithMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsWithMetricsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentsWithMetricsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{96}
}

func (x *ListComponentsWithMetricsResponse) GetComponentsWithMetrics() []*ComponentWithMetrics {
	if x != nil {
		return x.ComponentsWithMetrics
	}
	return nil
}

type ComponentWithMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component               *Component               `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	ComponentIssueTrendItem *ComponentIssueTrendItem `protobuf:"bytes,2,opt,name=component_issue_trend_item,json=componentIssueTrendItem,proto3,oneof" json:"component_issue_trend_item,omitempty"`
}

func (x *ComponentWithMetrics) Reset() {
	*x = ComponentWithMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentWithMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentWithMetrics) ProtoMessage() {}

func (x *ComponentWithMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentWithMetrics.ProtoReflect.Descriptor instead.
func (*ComponentWithMetrics) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{97}
}

func (x *ComponentWithMetrics) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

func (x *ComponentWithMetrics) GetComponentIssueTrendItem() *ComponentIssueTrendItem {
	if x != nil {
		return x.ComponentIssueTrendItem
	}
	return nil
}

type SetComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SbomId      string `protobuf:"bytes,4,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *SetComponentTagRequest) Reset() {
	*x = SetComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComponentTagRequest) ProtoMessage() {}

func (x *SetComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComponentTagRequest.ProtoReflect.Descriptor instead.
func (*SetComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{98}
}

func (x *SetComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SetComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *SetComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetComponentTagRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type SetComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *ComponentTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *SetComponentTagResponse) Reset() {
	*x = SetComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComponentTagResponse) ProtoMessage() {}

func (x *SetComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComponentTagResponse.ProtoReflect.Descriptor instead.
func (*SetComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{99}
}

func (x *SetComponentTagResponse) GetTag() *ComponentTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type GetComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetComponentTagRequest) Reset() {
	*x = GetComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagRequest) ProtoMessage() {}

func (x *GetComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagRequest.ProtoReflect.Descriptor instead.
func (*GetComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{100}
}

func (x *GetComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *GetComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *ComponentTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetComponentTagResponse) Reset() {
	*x = GetComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagResponse) ProtoMessage() {}

func (x *GetComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagResponse.ProtoReflect.Descriptor instead.
func (*GetComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{101}
}

func (x *GetComponentTagResponse) GetTag() *ComponentTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListComponentTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *ListComponentTagsRequest) Reset() {
	*x = ListComponentTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentTagsRequest) ProtoMessage() {}

func (x *ListComponentTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentTagsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentTagsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{102}
}

func (x *ListComponentTagsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComponentTagsRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type ListComponentTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*ComponentTag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ListComponentTagsResponse) Reset() {
	*x = ListComponentTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentTagsResponse) ProtoMessage() {}

func (x *ListComponentTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentTagsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentTagsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{103}
}

func (x *ListComponentTagsResponse) GetTags() []*ComponentTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteComponentTagRequest) Reset() {
	*x = DeleteComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentTagRequest) ProtoMessage() {}

func (x *DeleteComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{104}
}

func (x *DeleteComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *DeleteComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteComponentTagResponse) Reset() {
	*x = DeleteComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentTagResponse) ProtoMessage() {}

func (x *DeleteComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{105}
}

type ComponentTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SbomId    string                 `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ComponentTag) Reset() {
	*x = ComponentTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentTag) ProtoMessage() {}

func (x *ComponentTag) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentTag.ProtoReflect.Descriptor instead.
func (*ComponentTag) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{106}
}

func (x *ComponentTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentTag) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *ComponentTag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComponentTag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetComponentTagsOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId     string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	SelectedTagName string `protobuf:"bytes,3,opt,name=selected_tag_name,json=selectedTagName,proto3" json:"selected_tag_name,omitempty"`
}

func (x *GetComponentTagsOverviewRequest) Reset() {
	*x = GetComponentTagsOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagsOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagsOverviewRequest) ProtoMessage() {}

func (x *GetComponentTagsOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagsOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetComponentTagsOverviewRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{107}
}

func (x *GetComponentTagsOverviewRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentTagsOverviewRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *GetComponentTagsOverviewRequest) GetSelectedTagName() string {
	if x != nil {
		return x.SelectedTagName
	}
	return ""
}

type GetComponentTagsOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultSbom         *ComponentEnrichedSBOMSummary   `protobuf:"bytes,1,opt,name=default_sbom,json=defaultSbom,proto3" json:"default_sbom,omitempty"`
	OtherActiveSboms    []*ComponentEnrichedSBOMSummary `protobuf:"bytes,2,rep,name=other_active_sboms,json=otherActiveSboms,proto3" json:"other_active_sboms,omitempty"`
	UndeployedSbomCount int32                           `protobuf:"varint,4,opt,name=undeployed_sbom_count,json=undeployedSbomCount,proto3" json:"undeployed_sbom_count,omitempty"`
	RetiredSbomCount    int32                           `protobuf:"varint,5,opt,name=retired_sbom_count,json=retiredSbomCount,proto3" json:"retired_sbom_count,omitempty"`
	DefaultTagName      string                          `protobuf:"bytes,6,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
	SelectedTagName     string                          `protobuf:"bytes,7,opt,name=selected_tag_name,json=selectedTagName,proto3" json:"selected_tag_name,omitempty"`
}

func (x *GetComponentTagsOverviewResponse) Reset() {
	*x = GetComponentTagsOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagsOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagsOverviewResponse) ProtoMessage() {}

func (x *GetComponentTagsOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagsOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetComponentTagsOverviewResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{108}
}

func (x *GetComponentTagsOverviewResponse) GetDefaultSbom() *ComponentEnrichedSBOMSummary {
	if x != nil {
		return x.DefaultSbom
	}
	return nil
}

func (x *GetComponentTagsOverviewResponse) GetOtherActiveSboms() []*ComponentEnrichedSBOMSummary {
	if x != nil {
		return x.OtherActiveSboms
	}
	return nil
}

func (x *GetComponentTagsOverviewResponse) GetUndeployedSbomCount() int32 {
	if x != nil {
		return x.UndeployedSbomCount
	}
	return 0
}

func (x *GetComponentTagsOverviewResponse) GetRetiredSbomCount() int32 {
	if x != nil {
		return x.RetiredSbomCount
	}
	return 0
}

func (x *GetComponentTagsOverviewResponse) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

func (x *GetComponentTagsOverviewResponse) GetSelectedTagName() string {
	if x != nil {
		return x.SelectedTagName
	}
	return ""
}

type ListComponentIssuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string                `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	States      []ComponentIssueState `protobuf:"varint,3,rep,packed,name=states,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState" json:"states,omitempty"`
}

func (x *ListComponentIssuesRequest) Reset() {
	*x = ListComponentIssuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssuesRequest) ProtoMessage() {}

func (x *ListComponentIssuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssuesRequest.ProtoReflect.Descriptor instead.
func (*ListComponentIssuesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{109}
}

func (x *ListComponentIssuesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComponentIssuesRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ListComponentIssuesRequest) GetStates() []ComponentIssueState {
	if x != nil {
		return x.States
	}
	return nil
}

type ListComponentIssuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ComponentIssue `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListComponentIssuesResponse) Reset() {
	*x = ListComponentIssuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssuesResponse) ProtoMessage() {}

func (x *ListComponentIssuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssuesResponse.ProtoReflect.Descriptor instead.
func (*ListComponentIssuesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{110}
}

func (x *ListComponentIssuesResponse) GetItems() []*ComponentIssue {
	if x != nil {
		return x.Items
	}
	return nil
}

type ListComponentIssuesByStateForProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	States    []ComponentIssueState `protobuf:"varint,2,rep,packed,name=states,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState" json:"states,omitempty"`
}

func (x *ListComponentIssuesByStateForProjectRequest) Reset() {
	*x = ListComponentIssuesByStateForProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssuesByStateForProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssuesByStateForProjectRequest) ProtoMessage() {}

func (x *ListComponentIssuesByStateForProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssuesByStateForProjectRequest.ProtoReflect.Descriptor instead.
func (*ListComponentIssuesByStateForProjectRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{111}
}

func (x *ListComponentIssuesByStateForProjectRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComponentIssuesByStateForProjectRequest) GetStates() []ComponentIssueState {
	if x != nil {
		return x.States
	}
	return nil
}

type ListComponentIssuesByStateForProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ComponentIssue `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListComponentIssuesByStateForProjectResponse) Reset() {
	*x = ListComponentIssuesByStateForProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssuesByStateForProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssuesByStateForProjectResponse) ProtoMessage() {}

func (x *ListComponentIssuesByStateForProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssuesByStateForProjectResponse.ProtoReflect.Descriptor instead.
func (*ListComponentIssuesByStateForProjectResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{112}
}

func (x *ListComponentIssuesByStateForProjectResponse) GetItems() []*ComponentIssue {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetComponentIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Id          string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetComponentIssueRequest) Reset() {
	*x = GetComponentIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssueRequest) ProtoMessage() {}

func (x *GetComponentIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssueRequest.ProtoReflect.Descriptor instead.
func (*GetComponentIssueRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{113}
}

func (x *GetComponentIssueRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentIssueRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *GetComponentIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetComponentIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issue *ComponentIssue `protobuf:"bytes,1,opt,name=issue,proto3" json:"issue,omitempty"`
}

func (x *GetComponentIssueResponse) Reset() {
	*x = GetComponentIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssueResponse) ProtoMessage() {}

func (x *GetComponentIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssueResponse.ProtoReflect.Descriptor instead.
func (*GetComponentIssueResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{114}
}

func (x *GetComponentIssueResponse) GetIssue() *ComponentIssue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type UpdateComponentIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string                 `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Id          string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	State       ComponentIssueState    `protobuf:"varint,4,opt,name=state,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState" json:"state,omitempty"`
	Severity    ComponentIssueSeverity `protobuf:"varint,5,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"severity,omitempty"`
	Comment     string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *UpdateComponentIssueRequest) Reset() {
	*x = UpdateComponentIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentIssueRequest) ProtoMessage() {}

func (x *UpdateComponentIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentIssueRequest.ProtoReflect.Descriptor instead.
func (*UpdateComponentIssueRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{115}
}

func (x *UpdateComponentIssueRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateComponentIssueRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *UpdateComponentIssueRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateComponentIssueRequest) GetState() ComponentIssueState {
	if x != nil {
		return x.State
	}
	return ComponentIssueState_COMPONENT_ISSUE_STATE_UNSPECIFIED
}

func (x *UpdateComponentIssueRequest) GetSeverity() ComponentIssueSeverity {
	if x != nil {
		return x.Severity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *UpdateComponentIssueRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type UpdateComponentIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateComponentIssueResponse) Reset() {
	*x = UpdateComponentIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentIssueResponse) ProtoMessage() {}

func (x *UpdateComponentIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentIssueResponse.ProtoReflect.Descriptor instead.
func (*UpdateComponentIssueResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{116}
}

type VulnIssueDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	References  []*VulnReference `protobuf:"bytes,3,rep,name=references,proto3" json:"references,omitempty"`
	FixState    VulnFixState     `protobuf:"varint,4,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *VulnIssueDetails) Reset() {
	*x = VulnIssueDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnIssueDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnIssueDetails) ProtoMessage() {}

func (x *VulnIssueDetails) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnIssueDetails.ProtoReflect.Descriptor instead.
func (*VulnIssueDetails) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{117}
}

func (x *VulnIssueDetails) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VulnIssueDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VulnIssueDetails) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *VulnIssueDetails) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *VulnIssueDetails) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type ComponentIssue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ComponentId         string                 `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"` // Deprecated
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PackageType         string                 `protobuf:"bytes,5,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	PackageName         string                 `protobuf:"bytes,6,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	UpstreamSeverity    ComponentIssueSeverity `protobuf:"varint,7,opt,name=upstream_severity,json=upstreamSeverity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"upstream_severity,omitempty"`
	State               ComponentIssueState    `protobuf:"varint,8,opt,name=state,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState" json:"state,omitempty"`
	Severity            ComponentIssueSeverity `protobuf:"varint,9,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"severity,omitempty"`
	AffectedPackageUrls []string               `protobuf:"bytes,10,rep,name=affected_package_urls,json=affectedPackageUrls,proto3" json:"affected_package_urls,omitempty"`
	// Types that are assignable to Details:
	//
	//	*ComponentIssue_VulnDetails
	Details      isComponentIssue_Details `protobuf_oneof:"details"`
	Labels       map[string]string        `protobuf:"bytes,12,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ComponentRef *ComponentRef            `protobuf:"bytes,13,opt,name=component_ref,json=componentRef,proto3" json:"component_ref,omitempty"`
	DueAt        *timestamppb.Timestamp   `protobuf:"bytes,14,opt,name=due_at,json=dueAt,proto3,oneof" json:"due_at,omitempty"`
}

func (x *ComponentIssue) Reset() {
	*x = ComponentIssue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentIssue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentIssue) ProtoMessage() {}

func (x *ComponentIssue) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentIssue.ProtoReflect.Descriptor instead.
func (*ComponentIssue) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{118}
}

func (x *ComponentIssue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentIssue) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ComponentIssue) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComponentIssue) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ComponentIssue) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *ComponentIssue) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *ComponentIssue) GetUpstreamSeverity() ComponentIssueSeverity {
	if x != nil {
		return x.UpstreamSeverity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *ComponentIssue) GetState() ComponentIssueState {
	if x != nil {
		return x.State
	}
	return ComponentIssueState_COMPONENT_ISSUE_STATE_UNSPECIFIED
}

func (x *ComponentIssue) GetSeverity() ComponentIssueSeverity {
	if x != nil {
		return x.Severity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *ComponentIssue) GetAffectedPackageUrls() []string {
	if x != nil {
		return x.AffectedPackageUrls
	}
	return nil
}

func (m *ComponentIssue) GetDetails() isComponentIssue_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *ComponentIssue) GetVulnDetails() *VulnIssueDetails {
	if x, ok := x.GetDetails().(*ComponentIssue_VulnDetails); ok {
		return x.VulnDetails
	}
	return nil
}

func (x *ComponentIssue) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ComponentIssue) GetComponentRef() *ComponentRef {
	if x != nil {
		return x.ComponentRef
	}
	return nil
}

func (x *ComponentIssue) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

type isComponentIssue_Details interface {
	isComponentIssue_Details()
}

type ComponentIssue_VulnDetails struct {
	VulnDetails *VulnIssueDetails `protobuf:"bytes,11,opt,name=vuln_details,json=vulnDetails,proto3,oneof"`
}

func (*ComponentIssue_VulnDetails) isComponentIssue_Details() {}

type GetProjectIssueTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectIssueTrendRequest) Reset() {
	*x = GetProjectIssueTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectIssueTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectIssueTrendRequest) ProtoMessage() {}

func (x *GetProjectIssueTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectIssueTrendRequest.ProtoReflect.Descriptor instead.
func (*GetProjectIssueTrendRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{119}
}

func (x *GetProjectIssueTrendRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectIssueTrendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items                      []*ComponentIssueTrendItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalUnresolvedIssues      int32                      `protobuf:"varint,2,opt,name=total_unresolved_issues,json=totalUnresolvedIssues,proto3" json:"total_unresolved_issues,omitempty"`
	SuppressedUnresolvedIssues int32                      `protobuf:"varint,3,opt,name=suppressed_unresolved_issues,json=suppressedUnresolvedIssues,proto3" json:"suppressed_unresolved_issues,omitempty"`
	SuppressedIssuesByPolicy   map[string]int32           `protobuf:"bytes,4,rep,name=suppressed_issues_by_policy,json=suppressedIssuesByPolicy,proto3" json:"suppressed_issues_by_policy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetProjectIssueTrendResponse) Reset() {
	*x = GetProjectIssueTrendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectIssueTrendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectIssueTrendResponse) ProtoMessage() {}

func (x *GetProjectIssueTrendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectIssueTrendResponse.ProtoReflect.Descriptor instead.
func (*GetProjectIssueTrendResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{120}
}

func (x *GetProjectIssueTrendResponse) GetItems() []*ComponentIssueTrendItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetProjectIssueTrendResponse) GetTotalUnresolvedIssues() int32 {
	if x != nil {
		return x.TotalUnresolvedIssues
	}
	return 0
}

func (x *GetProjectIssueTrendResponse) GetSuppressedUnresolvedIssues() int32 {
	if x != nil {
		return x.SuppressedUnresolvedIssues
	}
	return 0
}

func (x *GetProjectIssueTrendResponse) GetSuppressedIssuesByPolicy() map[string]int32 {
	if x != nil {
		return x.SuppressedIssuesByPolicy
	}
	return nil
}

type GetComponentIssueTrendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *GetComponentIssueTrendRequest) Reset() {
	*x = GetComponentIssueTrendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssueTrendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssueTrendRequest) ProtoMessage() {}

func (x *GetComponentIssueTrendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssueTrendRequest.ProtoReflect.Descriptor instead.
func (*GetComponentIssueTrendRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{121}
}

func (x *GetComponentIssueTrendRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentIssueTrendRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type GetComponentIssueTrendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items                      []*ComponentIssueTrendItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	TotalUnresolvedIssues      int32                      `protobuf:"varint,2,opt,name=total_unresolved_issues,json=totalUnresolvedIssues,proto3" json:"total_unresolved_issues,omitempty"`
	SuppressedUnresolvedIssues int32                      `protobuf:"varint,3,opt,name=suppressed_unresolved_issues,json=suppressedUnresolvedIssues,proto3" json:"suppressed_unresolved_issues,omitempty"`
	SuppressedIssuesByPolicy   map[string]int32           `protobuf:"bytes,4,rep,name=suppressed_issues_by_policy,json=suppressedIssuesByPolicy,proto3" json:"suppressed_issues_by_policy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetComponentIssueTrendResponse) Reset() {
	*x = GetComponentIssueTrendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssueTrendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssueTrendResponse) ProtoMessage() {}

func (x *GetComponentIssueTrendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssueTrendResponse.ProtoReflect.Descriptor instead.
func (*GetComponentIssueTrendResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{122}
}

func (x *GetComponentIssueTrendResponse) GetItems() []*ComponentIssueTrendItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetComponentIssueTrendResponse) GetTotalUnresolvedIssues() int32 {
	if x != nil {
		return x.TotalUnresolvedIssues
	}
	return 0
}

func (x *GetComponentIssueTrendResponse) GetSuppressedUnresolvedIssues() int32 {
	if x != nil {
		return x.SuppressedUnresolvedIssues
	}
	return 0
}

func (x *GetComponentIssueTrendResponse) GetSuppressedIssuesByPolicy() map[string]int32 {
	if x != nil {
		return x.SuppressedIssuesByPolicy
	}
	return nil
}

type ComponentIssueTrendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	CriticalVulns   int32                  `protobuf:"varint,2,opt,name=critical_vulns,json=criticalVulns,proto3" json:"critical_vulns,omitempty"`
	HighVulns       int32                  `protobuf:"varint,3,opt,name=high_vulns,json=highVulns,proto3" json:"high_vulns,omitempty"`
	MediumVulns     int32                  `protobuf:"varint,4,opt,name=medium_vulns,json=mediumVulns,proto3" json:"medium_vulns,omitempty"`
	LowVulns        int32                  `protobuf:"varint,5,opt,name=low_vulns,json=lowVulns,proto3" json:"low_vulns,omitempty"`
	NegligibleVulns int32                  `protobuf:"varint,6,opt,name=negligible_vulns,json=negligibleVulns,proto3" json:"negligible_vulns,omitempty"`
}

func (x *ComponentIssueTrendItem) Reset() {
	*x = ComponentIssueTrendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentIssueTrendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentIssueTrendItem) ProtoMessage() {}

func (x *ComponentIssueTrendItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentIssueTrendItem.ProtoReflect.Descriptor instead.
func (*ComponentIssueTrendItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{123}
}

func (x *ComponentIssueTrendItem) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ComponentIssueTrendItem) GetCriticalVulns() int32 {
	if x != nil {
		return x.CriticalVulns
	}
	return 0
}

func (x *ComponentIssueTrendItem) GetHighVulns() int32 {
	if x != nil {
		return x.HighVulns
	}
	return 0
}

func (x *ComponentIssueTrendItem) GetMediumVulns() int32 {
	if x != nil {
		return x.MediumVulns
	}
	return 0
}

func (x *ComponentIssueTrendItem) GetLowVulns() int32 {
	if x != nil {
		return x.LowVulns
	}
	return 0
}

func (x *ComponentIssueTrendItem) GetNegligibleVulns() int32 {
	if x != nil {
		return x.NegligibleVulns
	}
	return 0
}

type ComponentEnrichedSBOMSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sbom            *SBOMListItem `protobuf:"bytes,1,opt,name=sbom,proto3" json:"sbom,omitempty"`
	Tags            []string      `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	ActiveWorkloads int32         `protobuf:"varint,3,opt,name=active_workloads,json=activeWorkloads,proto3" json:"active_workloads,omitempty"`
}

func (x *ComponentEnrichedSBOMSummary) Reset() {
	*x = ComponentEnrichedSBOMSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentEnrichedSBOMSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentEnrichedSBOMSummary) ProtoMessage() {}

func (x *ComponentEnrichedSBOMSummary) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentEnrichedSBOMSummary.ProtoReflect.Descriptor instead.
func (*ComponentEnrichedSBOMSummary) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{124}
}

func (x *ComponentEnrichedSBOMSummary) GetSbom() *SBOMListItem {
	if x != nil {
		return x.Sbom
	}
	return nil
}

func (x *ComponentEnrichedSBOMSummary) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ComponentEnrichedSBOMSummary) GetActiveWorkloads() int32 {
	if x != nil {
		return x.ActiveWorkloads
	}
	return 0
}

type GetCIBotCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    string             `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomId       string             `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	CommitId     string             `protobuf:"bytes,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	BaseCommitId string             `protobuf:"bytes,4,opt,name=base_commit_id,json=baseCommitId,proto3" json:"base_commit_id,omitempty"`
	Flavor       CIBotCommentFlavor `protobuf:"varint,5,opt,name=flavor,proto3,enum=edgebit.platform.v1alpha.CIBotCommentFlavor" json:"flavor,omitempty"`
}

func (x *GetCIBotCommentRequest) Reset() {
	*x = GetCIBotCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCIBotCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCIBotCommentRequest) ProtoMessage() {}

func (x *GetCIBotCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCIBotCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCIBotCommentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{125}
}

func (x *GetCIBotCommentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetBaseCommitId() string {
	if x != nil {
		return x.BaseCommitId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetFlavor() CIBotCommentFlavor {
	if x != nil {
		return x.Flavor
	}
	return CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_UNSPECIFIED
}

type GetCIBotCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentBody string `protobuf:"bytes,1,opt,name=comment_body,json=commentBody,proto3" json:"comment_body,omitempty"`
	SkipComment bool   `protobuf:"varint,2,opt,name=skip_comment,json=skipComment,proto3" json:"skip_comment,omitempty"`
}

func (x *GetCIBotCommentResponse) Reset() {
	*x = GetCIBotCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCIBotCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCIBotCommentResponse) ProtoMessage() {}

func (x *GetCIBotCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCIBotCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCIBotCommentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{126}
}

func (x *GetCIBotCommentResponse) GetCommentBody() string {
	if x != nil {
		return x.CommentBody
	}
	return ""
}

func (x *GetCIBotCommentResponse) GetSkipComment() bool {
	if x != nil {
		return x.SkipComment
	}
	return false
}

type ListWorkloadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListWorkloadsRequest) Reset() {
	*x = ListWorkloadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsRequest) ProtoMessage() {}

func (x *ListWorkloadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{127}
}

func (x *ListWorkloadsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListWorkloadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*WorkloadItem `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListWorkloadsResponse) Reset() {
	*x = ListWorkloadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsResponse) ProtoMessage() {}

func (x *ListWorkloadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{128}
}

func (x *ListWorkloadsResponse) GetWorkloads() []*WorkloadItem {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type ListWorkloadItemsForMachineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *ListWorkloadItemsForMachineRequest) Reset() {
	*x = ListWorkloadItemsForMachineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadItemsForMachineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadItemsForMachineRequest) ProtoMessage() {}

func (x *ListWorkloadItemsForMachineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadItemsForMachineRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadItemsForMachineRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{129}
}

func (x *ListWorkloadItemsForMachineRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListWorkloadItemsForMachineRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type ListWorkloadItemsForMachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkloadItems []*WorkloadItem `protobuf:"bytes,1,rep,name=workload_items,json=workloadItems,proto3" json:"workload_items,omitempty"`
}

func (x *ListWorkloadItemsForMachineResponse) Reset() {
	*x = ListWorkloadItemsForMachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadItemsForMachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadItemsForMachineResponse) ProtoMessage() {}

func (x *ListWorkloadItemsForMachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadItemsForMachineResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadItemsForMachineResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{130}
}

func (x *ListWorkloadItemsForMachineResponse) GetWorkloadItems() []*WorkloadItem {
	if x != nil {
		return x.WorkloadItems
	}
	return nil
}

type GetWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorkloadId string `protobuf:"bytes,2,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
}

func (x *GetWorkloadRequest) Reset() {
	*x = GetWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadRequest) ProtoMessage() {}

func (x *GetWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadRequest.ProtoReflect.Descriptor instead.
func (*GetWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{131}
}

func (x *GetWorkloadRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetWorkloadRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

type GetWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workload *WorkloadItem `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
}

func (x *GetWorkloadResponse) Reset() {
	*x = GetWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadResponse) ProtoMessage() {}

func (x *GetWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadResponse.ProtoReflect.Descriptor instead.
func (*GetWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{132}
}

func (x *GetWorkloadResponse) GetWorkload() *WorkloadItem {
	if x != nil {
		return x.Workload
	}
	return nil
}

type WorkloadItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                 string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TotalVulnerabilities int32                  `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	SbomId               string                 `protobuf:"bytes,6,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	ImageName            string                 `protobuf:"bytes,7,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	StartedAt            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt              *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	Labels               map[string]string      `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ComponentRef         *ComponentRef          `protobuf:"bytes,11,opt,name=component_ref,json=componentRef,proto3,oneof" json:"component_ref,omitempty"`
	MachineRef           *MachineRef            `protobuf:"bytes,12,opt,name=machine_ref,json=machineRef,proto3" json:"machine_ref,omitempty"`
	ImageExternalId      *string                `protobuf:"bytes,13,opt,name=image_external_id,json=imageExternalId,proto3,oneof" json:"image_external_id,omitempty"`
	ExternalId           *string                `protobuf:"bytes,14,opt,name=external_id,json=externalId,proto3,oneof" json:"external_id,omitempty"`
}

func (x *WorkloadItem) Reset() {
	*x = WorkloadItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadItem) ProtoMessage() {}

func (x *WorkloadItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadItem.ProtoReflect.Descriptor instead.
func (*WorkloadItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{133}
}

func (x *WorkloadItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkloadItem) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkloadItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkloadItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkloadItem) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *WorkloadItem) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *WorkloadItem) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *WorkloadItem) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *WorkloadItem) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *WorkloadItem) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *WorkloadItem) GetComponentRef() *ComponentRef {
	if x != nil {
		return x.ComponentRef
	}
	return nil
}

func (x *WorkloadItem) GetMachineRef() *MachineRef {
	if x != nil {
		return x.MachineRef
	}
	return nil
}

func (x *WorkloadItem) GetImageExternalId() string {
	if x != nil && x.ImageExternalId != nil {
		return *x.ImageExternalId
	}
	return ""
}

func (x *WorkloadItem) GetExternalId() string {
	if x != nil && x.ExternalId != nil {
		return *x.ExternalId
	}
	return ""
}

type GetSBOMDownloadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomId    string `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *GetSBOMDownloadUrlRequest) Reset() {
	*x = GetSBOMDownloadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMDownloadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMDownloadUrlRequest) ProtoMessage() {}

func (x *GetSBOMDownloadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMDownloadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMDownloadUrlRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{134}
}

func (x *GetSBOMDownloadUrlRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMDownloadUrlRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type GetSBOMDownloadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SbomDownloadPath string `protobuf:"bytes,1,opt,name=sbom_download_path,json=sbomDownloadPath,proto3" json:"sbom_download_path,omitempty"`
}

func (x *GetSBOMDownloadUrlResponse) Reset() {
	*x = GetSBOMDownloadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMDownloadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMDownloadUrlResponse) ProtoMessage() {}

func (x *GetSBOMDownloadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMDownloadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMDownloadUrlResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{135}
}

func (x *GetSBOMDownloadUrlResponse) GetSbomDownloadPath() string {
	if x != nil {
		return x.SbomDownloadPath
	}
	return ""
}

type GetVexDownloadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *GetVexDownloadUrlRequest) Reset() {
	*x = GetVexDownloadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVexDownloadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVexDownloadUrlRequest) ProtoMessage() {}

func (x *GetVexDownloadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVexDownloadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetVexDownloadUrlRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{136}
}

func (x *GetVexDownloadUrlRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetVexDownloadUrlRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type GetVexDownloadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VexDownloadPath string `protobuf:"bytes,1,opt,name=vex_download_path,json=vexDownloadPath,proto3" json:"vex_download_path,omitempty"`
}

func (x *GetVexDownloadUrlResponse) Reset() {
	*x = GetVexDownloadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVexDownloadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVexDownloadUrlResponse) ProtoMessage() {}

func (x *GetVexDownloadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVexDownloadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetVexDownloadUrlResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{137}
}

func (x *GetVexDownloadUrlResponse) GetVexDownloadPath() string {
	if x != nil {
		return x.VexDownloadPath
	}
	return ""
}

type GetComponentIssuesReportDownloadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetComponentIssuesReportDownloadUrlRequest) Reset() {
	*x = GetComponentIssuesReportDownloadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssuesReportDownloadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssuesReportDownloadUrlRequest) ProtoMessage() {}

func (x *GetComponentIssuesReportDownloadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssuesReportDownloadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetComponentIssuesReportDownloadUrlRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{138}
}

func (x *GetComponentIssuesReportDownloadUrlRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentIssuesReportDownloadUrlRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetComponentIssuesReportDownloadUrlRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

type GetComponentIssuesReportDownloadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportDownloadPath string `protobuf:"bytes,1,opt,name=report_download_path,json=reportDownloadPath,proto3" json:"report_download_path,omitempty"`
}

func (x *GetComponentIssuesReportDownloadUrlResponse) Reset() {
	*x = GetComponentIssuesReportDownloadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentIssuesReportDownloadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentIssuesReportDownloadUrlResponse) ProtoMessage() {}

func (x *GetComponentIssuesReportDownloadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentIssuesReportDownloadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetComponentIssuesReportDownloadUrlResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{139}
}

func (x *GetComponentIssuesReportDownloadUrlResponse) GetReportDownloadPath() string {
	if x != nil {
		return x.ReportDownloadPath
	}
	return ""
}

type GraphRelationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RelatedId        string `protobuf:"bytes,2,opt,name=related_id,json=relatedId,proto3" json:"related_id,omitempty"`
	RelationshipType string `protobuf:"bytes,3,opt,name=relationship_type,json=relationshipType,proto3" json:"relationship_type,omitempty"`
}

func (x *GraphRelationship) Reset() {
	*x = GraphRelationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphRelationship) ProtoMessage() {}

func (x *GraphRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphRelationship.ProtoReflect.Descriptor instead.
func (*GraphRelationship) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{140}
}

func (x *GraphRelationship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GraphRelationship) GetRelatedId() string {
	if x != nil {
		return x.RelatedId
	}
	return ""
}

func (x *GraphRelationship) GetRelationshipType() string {
	if x != nil {
		return x.RelationshipType
	}
	return ""
}

type ComponentRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *ComponentRef) Reset() {
	*x = ComponentRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentRef) ProtoMessage() {}

func (x *ComponentRef) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentRef.ProtoReflect.Descriptor instead.
func (*ComponentRef) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{141}
}

func (x *ComponentRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ComponentRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentRef) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type MachineRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *MachineRef) Reset() {
	*x = MachineRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineRef) ProtoMessage() {}

func (x *MachineRef) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineRef.ProtoReflect.Descriptor instead.
func (*MachineRef) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{142}
}

func (x *MachineRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MachineRef) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type VCSRepository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                 `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Owner         string                 `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Private       bool                   `protobuf:"varint,5,opt,name=private,proto3" json:"private,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	LastActivity  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_activity,json=lastActivity,proto3" json:"last_activity,omitempty"`
}

func (x *VCSRepository) Reset() {
	*x = VCSRepository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCSRepository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCSRepository) ProtoMessage() {}

func (x *VCSRepository) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCSRepository.ProtoReflect.Descriptor instead.
func (*VCSRepository) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{143}
}

func (x *VCSRepository) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *VCSRepository) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *VCSRepository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VCSRepository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VCSRepository) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *VCSRepository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VCSRepository) GetLastActivity() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActivity
	}
	return nil
}

type GitHubIntegrationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomSrcOrder []SBOMGenerationSource `protobuf:"varint,3,rep,packed,name=sbom_src_order,json=sbomSrcOrder,proto3,enum=edgebit.platform.v1alpha.SBOMGenerationSource" json:"sbom_src_order,omitempty"`
}

func (x *GitHubIntegrationSettings) Reset() {
	*x = GitHubIntegrationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitHubIntegrationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubIntegrationSettings) ProtoMessage() {}

func (x *GitHubIntegrationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubIntegrationSettings.ProtoReflect.Descriptor instead.
func (*GitHubIntegrationSettings) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{144}
}

func (x *GitHubIntegrationSettings) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GitHubIntegrationSettings) GetSbomSrcOrder() []SBOMGenerationSource {
	if x != nil {
		return x.SbomSrcOrder
	}
	return nil
}

type GetGitHubIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *GetGitHubIntegrationRequest) Reset() {
	*x = GetGitHubIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGitHubIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGitHubIntegrationRequest) ProtoMessage() {}

func (x *GetGitHubIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGitHubIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetGitHubIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{145}
}

func (x *GetGitHubIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type GetGitHubIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhAcct     string                       `protobuf:"bytes,1,opt,name=gh_acct,json=ghAcct,proto3" json:"gh_acct,omitempty"`
	GhAcctType string                       `protobuf:"bytes,2,opt,name=gh_acct_type,json=ghAcctType,proto3" json:"gh_acct_type,omitempty"`
	Settings   []*GitHubIntegrationSettings `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetGitHubIntegrationResponse) Reset() {
	*x = GetGitHubIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGitHubIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGitHubIntegrationResponse) ProtoMessage() {}

func (x *GetGitHubIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGitHubIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetGitHubIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{146}
}

func (x *GetGitHubIntegrationResponse) GetGhAcct() string {
	if x != nil {
		return x.GhAcct
	}
	return ""
}

func (x *GetGitHubIntegrationResponse) GetGhAcctType() string {
	if x != nil {
		return x.GhAcctType
	}
	return ""
}

func (x *GetGitHubIntegrationResponse) GetSettings() []*GitHubIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type HasGitHubIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *HasGitHubIntegrationRequest) Reset() {
	*x = HasGitHubIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasGitHubIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasGitHubIntegrationRequest) ProtoMessage() {}

func (x *HasGitHubIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasGitHubIntegrationRequest.ProtoReflect.Descriptor instead.
func (*HasGitHubIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{147}
}

func (x *HasGitHubIntegrationRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type HasGitHubIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Present bool `protobuf:"varint,1,opt,name=present,proto3" json:"present,omitempty"`
}

func (x *HasGitHubIntegrationResponse) Reset() {
	*x = HasGitHubIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasGitHubIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasGitHubIntegrationResponse) ProtoMessage() {}

func (x *HasGitHubIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasGitHubIntegrationResponse.ProtoReflect.Descriptor instead.
func (*HasGitHubIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{148}
}

func (x *HasGitHubIntegrationResponse) GetPresent() bool {
	if x != nil {
		return x.Present
	}
	return false
}

type UpdateGitHubIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                       `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Settings      []*GitHubIntegrationSettings `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateGitHubIntegrationRequest) Reset() {
	*x = UpdateGitHubIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGitHubIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGitHubIntegrationRequest) ProtoMessage() {}

func (x *UpdateGitHubIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGitHubIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateGitHubIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{149}
}

func (x *UpdateGitHubIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateGitHubIntegrationRequest) GetSettings() []*GitHubIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateGitHubIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGitHubIntegrationResponse) Reset() {
	*x = UpdateGitHubIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGitHubIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGitHubIntegrationResponse) ProtoMessage() {}

func (x *UpdateGitHubIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGitHubIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateGitHubIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{150}
}

type ListGitHubRepositoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId         string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	IncludeConfigured bool   `protobuf:"varint,3,opt,name=include_configured,json=includeConfigured,proto3" json:"include_configured,omitempty"`
}

func (x *ListGitHubRepositoriesRequest) Reset() {
	*x = ListGitHubRepositoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitHubRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitHubRepositoriesRequest) ProtoMessage() {}

func (x *ListGitHubRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitHubRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListGitHubRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{151}
}

func (x *ListGitHubRepositoriesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListGitHubRepositoriesRequest) GetIncludeConfigured() bool {
	if x != nil {
		return x.IncludeConfigured
	}
	return false
}

type ListGitHubRepositoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Repos []*VCSRepository `protobuf:"bytes,1,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *ListGitHubRepositoriesResponse) Reset() {
	*x = ListGitHubRepositoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitHubRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitHubRepositoriesResponse) ProtoMessage() {}

func (x *ListGitHubRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitHubRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListGitHubRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{152}
}

func (x *ListGitHubRepositoriesResponse) GetRepos() []*VCSRepository {
	if x != nil {
		return x.Repos
	}
	return nil
}

type CompleteGitHubAppInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CompleteGitHubAppInstallRequest) Reset() {
	*x = CompleteGitHubAppInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteGitHubAppInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteGitHubAppInstallRequest) ProtoMessage() {}

func (x *CompleteGitHubAppInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteGitHubAppInstallRequest.ProtoReflect.Descriptor instead.
func (*CompleteGitHubAppInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{153}
}

func (x *CompleteGitHubAppInstallRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteGitHubAppInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CompleteGitHubAppInstallResponse) Reset() {
	*x = CompleteGitHubAppInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteGitHubAppInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteGitHubAppInstallResponse) ProtoMessage() {}

func (x *CompleteGitHubAppInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteGitHubAppInstallResponse.ProtoReflect.Descriptor instead.
func (*CompleteGitHubAppInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{154}
}

func (x *CompleteGitHubAppInstallResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AnalyzeGitHubRepoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	IntegrationId string `protobuf:"bytes,2,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Owner         string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AnalyzeGitHubRepoRequest) Reset() {
	*x = AnalyzeGitHubRepoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeGitHubRepoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeGitHubRepoRequest) ProtoMessage() {}

func (x *AnalyzeGitHubRepoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeGitHubRepoRequest.ProtoReflect.Descriptor instead.
func (*AnalyzeGitHubRepoRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{155}
}

func (x *AnalyzeGitHubRepoRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AnalyzeGitHubRepoRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *AnalyzeGitHubRepoRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *AnalyzeGitHubRepoRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AnalyzeGitHubRepoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildActionPresent bool `protobuf:"varint,1,opt,name=build_action_present,json=buildActionPresent,proto3" json:"build_action_present,omitempty"`
}

func (x *AnalyzeGitHubRepoResponse) Reset() {
	*x = AnalyzeGitHubRepoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyzeGitHubRepoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyzeGitHubRepoResponse) ProtoMessage() {}

func (x *AnalyzeGitHubRepoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyzeGitHubRepoResponse.ProtoReflect.Descriptor instead.
func (*AnalyzeGitHubRepoResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{156}
}

func (x *AnalyzeGitHubRepoResponse) GetBuildActionPresent() bool {
	if x != nil {
		return x.BuildActionPresent
	}
	return false
}

type ListGitHubIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListGitHubIntegrationsRequest) Reset() {
	*x = ListGitHubIntegrationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitHubIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitHubIntegrationsRequest) ProtoMessage() {}

func (x *ListGitHubIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitHubIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListGitHubIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{157}
}

type GitHubIntegrationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GhAcct     string `protobuf:"bytes,2,opt,name=gh_acct,json=ghAcct,proto3" json:"gh_acct,omitempty"`
	GhAcctType string `protobuf:"bytes,3,opt,name=gh_acct_type,json=ghAcctType,proto3" json:"gh_acct_type,omitempty"`
}

func (x *GitHubIntegrationSummary) Reset() {
	*x = GitHubIntegrationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitHubIntegrationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubIntegrationSummary) ProtoMessage() {}

func (x *GitHubIntegrationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubIntegrationSummary.ProtoReflect.Descriptor instead.
func (*GitHubIntegrationSummary) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{158}
}

func (x *GitHubIntegrationSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GitHubIntegrationSummary) GetGhAcct() string {
	if x != nil {
		return x.GhAcct
	}
	return ""
}

func (x *GitHubIntegrationSummary) GetGhAcctType() string {
	if x != nil {
		return x.GhAcctType
	}
	return ""
}

type ListGitHubIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*GitHubIntegrationSummary `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *ListGitHubIntegrationsResponse) Reset() {
	*x = ListGitHubIntegrationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListGitHubIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGitHubIntegrationsResponse) ProtoMessage() {}

func (x *ListGitHubIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGitHubIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListGitHubIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{159}
}

func (x *ListGitHubIntegrationsResponse) GetIntegrations() []*GitHubIntegrationSummary {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type GitHubRepoToImport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string               `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Owner         string               `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Name          string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Url           string               `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	SbomSource    SBOMGenerationSource `protobuf:"varint,5,opt,name=sbom_source,json=sbomSource,proto3,enum=edgebit.platform.v1alpha.SBOMGenerationSource" json:"sbom_source,omitempty"`
}

func (x *GitHubRepoToImport) Reset() {
	*x = GitHubRepoToImport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GitHubRepoToImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitHubRepoToImport) ProtoMessage() {}

func (x *GitHubRepoToImport) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitHubRepoToImport.ProtoReflect.Descriptor instead.
func (*GitHubRepoToImport) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{160}
}

func (x *GitHubRepoToImport) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *GitHubRepoToImport) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GitHubRepoToImport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitHubRepoToImport) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GitHubRepoToImport) GetSbomSource() SBOMGenerationSource {
	if x != nil {
		return x.SbomSource
	}
	return SBOMGenerationSource_SBOM_GENERATION_SOURCE_UNSPECIFIED
}

type ImportGitHubReposRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string                `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Repos     []*GitHubRepoToImport `protobuf:"bytes,2,rep,name=repos,proto3" json:"repos,omitempty"`
}

func (x *ImportGitHubReposRequest) Reset() {
	*x = ImportGitHubReposRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGitHubReposRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGitHubReposRequest) ProtoMessage() {}

func (x *ImportGitHubReposRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGitHubReposRequest.ProtoReflect.Descriptor instead.
func (*ImportGitHubReposRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{161}
}

func (x *ImportGitHubReposRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ImportGitHubReposRequest) GetRepos() []*GitHubRepoToImport {
	if x != nil {
		return x.Repos
	}
	return nil
}

type ImportGitHubReposResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Errors []string `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ImportGitHubReposResponse) Reset() {
	*x = ImportGitHubReposResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGitHubReposResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGitHubReposResponse) ProtoMessage() {}

func (x *ImportGitHubReposResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGitHubReposResponse.ProtoReflect.Descriptor instead.
func (*ImportGitHubReposResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{162}
}

func (x *ImportGitHubReposResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type IgnoreIssueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId     string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId   string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	IssueId       string `protobuf:"bytes,3,opt,name=issue_id,json=issueId,proto3" json:"issue_id,omitempty"`
	Comment       string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	Justification string `protobuf:"bytes,5,opt,name=justification,proto3" json:"justification,omitempty"`
}

func (x *IgnoreIssueRequest) Reset() {
	*x = IgnoreIssueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgnoreIssueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreIssueRequest) ProtoMessage() {}

func (x *IgnoreIssueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreIssueRequest.ProtoReflect.Descriptor instead.
func (*IgnoreIssueRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{163}
}

func (x *IgnoreIssueRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *IgnoreIssueRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *IgnoreIssueRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *IgnoreIssueRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *IgnoreIssueRequest) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

type IgnoreIssueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IgnoreIssueResponse) Reset() {
	*x = IgnoreIssueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IgnoreIssueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IgnoreIssueResponse) ProtoMessage() {}

func (x *IgnoreIssueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IgnoreIssueResponse.ProtoReflect.Descriptor instead.
func (*IgnoreIssueResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{164}
}

type VantaIntegrationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *VantaIntegrationSettings) Reset() {
	*x = VantaIntegrationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VantaIntegrationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VantaIntegrationSettings) ProtoMessage() {}

func (x *VantaIntegrationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VantaIntegrationSettings.ProtoReflect.Descriptor instead.
func (*VantaIntegrationSettings) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{165}
}

func (x *VantaIntegrationSettings) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetVantaIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *GetVantaIntegrationRequest) Reset() {
	*x = GetVantaIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVantaIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVantaIntegrationRequest) ProtoMessage() {}

func (x *GetVantaIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVantaIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetVantaIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{166}
}

func (x *GetVantaIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type GetVantaIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VantaAcct string                      `protobuf:"bytes,1,opt,name=vanta_acct,json=vantaAcct,proto3" json:"vanta_acct,omitempty"`
	Settings  []*VantaIntegrationSettings `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetVantaIntegrationResponse) Reset() {
	*x = GetVantaIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVantaIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVantaIntegrationResponse) ProtoMessage() {}

func (x *GetVantaIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVantaIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetVantaIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{167}
}

func (x *GetVantaIntegrationResponse) GetVantaAcct() string {
	if x != nil {
		return x.VantaAcct
	}
	return ""
}

func (x *GetVantaIntegrationResponse) GetSettings() []*VantaIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type BeginVantaInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginVantaInstallRequest) Reset() {
	*x = BeginVantaInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginVantaInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginVantaInstallRequest) ProtoMessage() {}

func (x *BeginVantaInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginVantaInstallRequest.ProtoReflect.Descriptor instead.
func (*BeginVantaInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{168}
}

type BeginVantaInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *BeginVantaInstallResponse) Reset() {
	*x = BeginVantaInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[169]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginVantaInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginVantaInstallResponse) ProtoMessage() {}

func (x *BeginVantaInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[169]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginVantaInstallResponse.ProtoReflect.Descriptor instead.
func (*BeginVantaInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{169}
}

func (x *BeginVantaInstallResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteVantaInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CompleteVantaInstallRequest) Reset() {
	*x = CompleteVantaInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[170]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteVantaInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteVantaInstallRequest) ProtoMessage() {}

func (x *CompleteVantaInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[170]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteVantaInstallRequest.ProtoReflect.Descriptor instead.
func (*CompleteVantaInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{170}
}

func (x *CompleteVantaInstallRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteVantaInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CompleteVantaInstallResponse) Reset() {
	*x = CompleteVantaInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[171]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteVantaInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteVantaInstallResponse) ProtoMessage() {}

func (x *CompleteVantaInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[171]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteVantaInstallResponse.ProtoReflect.Descriptor instead.
func (*CompleteVantaInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{171}
}

func (x *CompleteVantaInstallResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateVantaIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                      `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Settings      []*VantaIntegrationSettings `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateVantaIntegrationRequest) Reset() {
	*x = UpdateVantaIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[172]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVantaIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVantaIntegrationRequest) ProtoMessage() {}

func (x *UpdateVantaIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[172]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVantaIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateVantaIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{172}
}

func (x *UpdateVantaIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateVantaIntegrationRequest) GetSettings() []*VantaIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateVantaIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateVantaIntegrationResponse) Reset() {
	*x = UpdateVantaIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[173]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVantaIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVantaIntegrationResponse) ProtoMessage() {}

func (x *UpdateVantaIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[173]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVantaIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateVantaIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{173}
}

type SlackIntegrationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *SlackIntegrationSettings) Reset() {
	*x = SlackIntegrationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[174]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackIntegrationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackIntegrationSettings) ProtoMessage() {}

func (x *SlackIntegrationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[174]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackIntegrationSettings.ProtoReflect.Descriptor instead.
func (*SlackIntegrationSettings) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{174}
}

func (x *SlackIntegrationSettings) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetSlackIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *GetSlackIntegrationRequest) Reset() {
	*x = GetSlackIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[175]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlackIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlackIntegrationRequest) ProtoMessage() {}

func (x *GetSlackIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[175]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlackIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetSlackIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{175}
}

func (x *GetSlackIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type GetSlackIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlackAcct string                      `protobuf:"bytes,1,opt,name=slack_acct,json=slackAcct,proto3" json:"slack_acct,omitempty"`
	Settings  []*SlackIntegrationSettings `protobuf:"bytes,3,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *GetSlackIntegrationResponse) Reset() {
	*x = GetSlackIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[176]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSlackIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSlackIntegrationResponse) ProtoMessage() {}

func (x *GetSlackIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[176]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSlackIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetSlackIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{176}
}

func (x *GetSlackIntegrationResponse) GetSlackAcct() string {
	if x != nil {
		return x.SlackAcct
	}
	return ""
}

func (x *GetSlackIntegrationResponse) GetSettings() []*SlackIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type BeginSlackInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginSlackInstallRequest) Reset() {
	*x = BeginSlackInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[177]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginSlackInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginSlackInstallRequest) ProtoMessage() {}

func (x *BeginSlackInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[177]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginSlackInstallRequest.ProtoReflect.Descriptor instead.
func (*BeginSlackInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{177}
}

type BeginSlackInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *BeginSlackInstallResponse) Reset() {
	*x = BeginSlackInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[178]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginSlackInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginSlackInstallResponse) ProtoMessage() {}

func (x *BeginSlackInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[178]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginSlackInstallResponse.ProtoReflect.Descriptor instead.
func (*BeginSlackInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{178}
}

func (x *BeginSlackInstallResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteSlackInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CompleteSlackInstallRequest) Reset() {
	*x = CompleteSlackInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[179]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSlackInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSlackInstallRequest) ProtoMessage() {}

func (x *CompleteSlackInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[179]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSlackInstallRequest.ProtoReflect.Descriptor instead.
func (*CompleteSlackInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{179}
}

func (x *CompleteSlackInstallRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteSlackInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CompleteSlackInstallResponse) Reset() {
	*x = CompleteSlackInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[180]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteSlackInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteSlackInstallResponse) ProtoMessage() {}

func (x *CompleteSlackInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[180]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteSlackInstallResponse.ProtoReflect.Descriptor instead.
func (*CompleteSlackInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{180}
}

func (x *CompleteSlackInstallResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateSlackIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                      `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Settings      []*SlackIntegrationSettings `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateSlackIntegrationRequest) Reset() {
	*x = UpdateSlackIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[181]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlackIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlackIntegrationRequest) ProtoMessage() {}

func (x *UpdateSlackIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[181]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlackIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateSlackIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{181}
}

func (x *UpdateSlackIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateSlackIntegrationRequest) GetSettings() []*SlackIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateSlackIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSlackIntegrationResponse) Reset() {
	*x = UpdateSlackIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[182]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlackIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlackIntegrationResponse) ProtoMessage() {}

func (x *UpdateSlackIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[182]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlackIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateSlackIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{182}
}

type ListIntegrationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListIntegrationsRequest) Reset() {
	*x = ListIntegrationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[183]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsRequest) ProtoMessage() {}

func (x *ListIntegrationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[183]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsRequest.ProtoReflect.Descriptor instead.
func (*ListIntegrationsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{183}
}

type IntegrationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      IntegrationType `protobuf:"varint,1,opt,name=type,proto3,enum=edgebit.platform.v1alpha.IntegrationType" json:"type,omitempty"`
	Id        string          `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Account   string          `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	AvatarUrl string          `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	LastError string          `protobuf:"bytes,5,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
}

func (x *IntegrationSummary) Reset() {
	*x = IntegrationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[184]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegrationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegrationSummary) ProtoMessage() {}

func (x *IntegrationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[184]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegrationSummary.ProtoReflect.Descriptor instead.
func (*IntegrationSummary) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{184}
}

func (x *IntegrationSummary) GetType() IntegrationType {
	if x != nil {
		return x.Type
	}
	return IntegrationType_INTEGRATION_TYPE_UNSPECIFIED
}

func (x *IntegrationSummary) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IntegrationSummary) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *IntegrationSummary) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *IntegrationSummary) GetLastError() string {
	if x != nil {
		return x.LastError
	}
	return ""
}

type ListIntegrationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*IntegrationSummary `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *ListIntegrationsResponse) Reset() {
	*x = ListIntegrationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[185]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIntegrationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntegrationsResponse) ProtoMessage() {}

func (x *ListIntegrationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[185]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntegrationsResponse.ProtoReflect.Descriptor instead.
func (*ListIntegrationsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{185}
}

func (x *ListIntegrationsResponse) GetIntegrations() []*IntegrationSummary {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type BeginJiraInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeginJiraInstallRequest) Reset() {
	*x = BeginJiraInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[186]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginJiraInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginJiraInstallRequest) ProtoMessage() {}

func (x *BeginJiraInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[186]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginJiraInstallRequest.ProtoReflect.Descriptor instead.
func (*BeginJiraInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{186}
}

type BeginJiraInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *BeginJiraInstallResponse) Reset() {
	*x = BeginJiraInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[187]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginJiraInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginJiraInstallResponse) ProtoMessage() {}

func (x *BeginJiraInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[187]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginJiraInstallResponse.ProtoReflect.Descriptor instead.
func (*BeginJiraInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{187}
}

func (x *BeginJiraInstallResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteJiraInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *CompleteJiraInstallRequest) Reset() {
	*x = CompleteJiraInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[188]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteJiraInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteJiraInstallRequest) ProtoMessage() {}

func (x *CompleteJiraInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[188]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteJiraInstallRequest.ProtoReflect.Descriptor instead.
func (*CompleteJiraInstallRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{188}
}

func (x *CompleteJiraInstallRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CompleteJiraInstallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CompleteJiraInstallResponse) Reset() {
	*x = CompleteJiraInstallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[189]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteJiraInstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteJiraInstallResponse) ProtoMessage() {}

func (x *CompleteJiraInstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[189]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteJiraInstallResponse.ProtoReflect.Descriptor instead.
func (*CompleteJiraInstallResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{189}
}

func (x *CompleteJiraInstallResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type JiraIssueType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	IconUrl     string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
}

func (x *JiraIssueType) Reset() {
	*x = JiraIssueType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[190]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JiraIssueType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JiraIssueType) ProtoMessage() {}

func (x *JiraIssueType) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[190]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JiraIssueType.ProtoReflect.Descriptor instead.
func (*JiraIssueType) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{190}
}

func (x *JiraIssueType) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JiraIssueType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JiraIssueType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *JiraIssueType) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

type JiraProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Key             string           `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name            string           `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AvailIssueTypes []*JiraIssueType `protobuf:"bytes,4,rep,name=avail_issue_types,json=availIssueTypes,proto3" json:"avail_issue_types,omitempty"`
}

func (x *JiraProject) Reset() {
	*x = JiraProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[191]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JiraProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JiraProject) ProtoMessage() {}

func (x *JiraProject) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[191]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JiraProject.ProtoReflect.Descriptor instead.
func (*JiraProject) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{191}
}

func (x *JiraProject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JiraProject) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JiraProject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JiraProject) GetAvailIssueTypes() []*JiraIssueType {
	if x != nil {
		return x.AvailIssueTypes
	}
	return nil
}

type JiraIntegrationSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	JiraProjectId   string `protobuf:"bytes,2,opt,name=jira_project_id,json=jiraProjectId,proto3" json:"jira_project_id,omitempty"`
	JiraIssueTypeId string `protobuf:"bytes,3,opt,name=jira_issue_type_id,json=jiraIssueTypeId,proto3" json:"jira_issue_type_id,omitempty"`
}

func (x *JiraIntegrationSettings) Reset() {
	*x = JiraIntegrationSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[192]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JiraIntegrationSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JiraIntegrationSettings) ProtoMessage() {}

func (x *JiraIntegrationSettings) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[192]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JiraIntegrationSettings.ProtoReflect.Descriptor instead.
func (*JiraIntegrationSettings) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{192}
}

func (x *JiraIntegrationSettings) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *JiraIntegrationSettings) GetJiraProjectId() string {
	if x != nil {
		return x.JiraProjectId
	}
	return ""
}

func (x *JiraIntegrationSettings) GetJiraIssueTypeId() string {
	if x != nil {
		return x.JiraIssueTypeId
	}
	return ""
}

type GetJiraIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *GetJiraIntegrationRequest) Reset() {
	*x = GetJiraIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[193]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJiraIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJiraIntegrationRequest) ProtoMessage() {}

func (x *GetJiraIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[193]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJiraIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetJiraIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{193}
}

func (x *GetJiraIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type GetJiraIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Settings          []*JiraIntegrationSettings `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	AvailJiraProjects []*JiraProject             `protobuf:"bytes,2,rep,name=avail_jira_projects,json=availJiraProjects,proto3" json:"avail_jira_projects,omitempty"`
}

func (x *GetJiraIntegrationResponse) Reset() {
	*x = GetJiraIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[194]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJiraIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJiraIntegrationResponse) ProtoMessage() {}

func (x *GetJiraIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[194]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJiraIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetJiraIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{194}
}

func (x *GetJiraIntegrationResponse) GetSettings() []*JiraIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *GetJiraIntegrationResponse) GetAvailJiraProjects() []*JiraProject {
	if x != nil {
		return x.AvailJiraProjects
	}
	return nil
}

type UpdateJiraIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                     `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Settings      []*JiraIntegrationSettings `protobuf:"bytes,2,rep,name=settings,proto3" json:"settings,omitempty"`
}

func (x *UpdateJiraIntegrationRequest) Reset() {
	*x = UpdateJiraIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[195]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJiraIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJiraIntegrationRequest) ProtoMessage() {}

func (x *UpdateJiraIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[195]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJiraIntegrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateJiraIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{195}
}

func (x *UpdateJiraIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateJiraIntegrationRequest) GetSettings() []*JiraIntegrationSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type UpdateJiraIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJiraIntegrationResponse) Reset() {
	*x = UpdateJiraIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[196]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJiraIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJiraIntegrationResponse) ProtoMessage() {}

func (x *UpdateJiraIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[196]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJiraIntegrationResponse.ProtoReflect.Descriptor instead.
func (*UpdateJiraIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{196}
}

type UserRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrgId     string `protobuf:"bytes,2,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	HumanName string `protobuf:"bytes,3,opt,name=human_name,json=humanName,proto3" json:"human_name,omitempty"`
	Email     string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserRef) Reset() {
	*x = UserRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[197]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRef) ProtoMessage() {}

func (x *UserRef) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[197]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRef.ProtoReflect.Descriptor instead.
func (*UserRef) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{197}
}

func (x *UserRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserRef) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *UserRef) GetHumanName() string {
	if x != nil {
		return x.HumanName
	}
	return ""
}

func (x *UserRef) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ProjectAPIKeyRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProjectAPIKeyRef) Reset() {
	*x = ProjectAPIKeyRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[198]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectAPIKeyRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectAPIKeyRef) ProtoMessage() {}

func (x *ProjectAPIKeyRef) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[198]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectAPIKeyRef.ProtoReflect.Descriptor instead.
func (*ProjectAPIKeyRef) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{198}
}

func (x *ProjectAPIKeyRef) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectAPIKeyRef) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectAPIKeyRef) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AutomatedProcessRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AutomatedProcessRef) Reset() {
	*x = AutomatedProcessRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[199]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutomatedProcessRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutomatedProcessRef) ProtoMessage() {}

func (x *AutomatedProcessRef) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[199]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutomatedProcessRef.ProtoReflect.Descriptor instead.
func (*AutomatedProcessRef) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{199}
}

func (x *AutomatedProcessRef) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Ref:
	//
	//	*Actor_UserRef
	//	*Actor_ProjectApiKeyRef
	//	*Actor_AutomatedProcessRef
	Ref isActor_Ref `protobuf_oneof:"ref"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[200]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[200]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{200}
}

func (x *Actor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Actor) GetRef() isActor_Ref {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (x *Actor) GetUserRef() *UserRef {
	if x, ok := x.GetRef().(*Actor_UserRef); ok {
		return x.UserRef
	}
	return nil
}

func (x *Actor) GetProjectApiKeyRef() *ProjectAPIKeyRef {
	if x, ok := x.GetRef().(*Actor_ProjectApiKeyRef); ok {
		return x.ProjectApiKeyRef
	}
	return nil
}

func (x *Actor) GetAutomatedProcessRef() *AutomatedProcessRef {
	if x, ok := x.GetRef().(*Actor_AutomatedProcessRef); ok {
		return x.AutomatedProcessRef
	}
	return nil
}

type isActor_Ref interface {
	isActor_Ref()
}

type Actor_UserRef struct {
	UserRef *UserRef `protobuf:"bytes,2,opt,name=user_ref,json=userRef,proto3,oneof"`
}

type Actor_ProjectApiKeyRef struct {
	ProjectApiKeyRef *ProjectAPIKeyRef `protobuf:"bytes,3,opt,name=project_api_key_ref,json=projectApiKeyRef,proto3,oneof"`
}

type Actor_AutomatedProcessRef struct {
	AutomatedProcessRef *AutomatedProcessRef `protobuf:"bytes,4,opt,name=automated_process_ref,json=automatedProcessRef,proto3,oneof"`
}

func (*Actor_UserRef) isActor_Ref() {}

func (*Actor_ProjectApiKeyRef) isActor_Ref() {}

func (*Actor_AutomatedProcessRef) isActor_Ref() {}

type ComponentIssueStateChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentId      string                  `protobuf:"bytes,1,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	IssueId          string                  `protobuf:"bytes,2,opt,name=issue_id,json=issueId,proto3" json:"issue_id,omitempty"`
	CreatedAt        *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Actor            *Actor                  `protobuf:"bytes,4,opt,name=actor,proto3" json:"actor,omitempty"`
	State            *ComponentIssueState    `protobuf:"varint,5,opt,name=state,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState,oneof" json:"state,omitempty"`
	Severity         *ComponentIssueSeverity `protobuf:"varint,6,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity,oneof" json:"severity,omitempty"`
	Comment          string                  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	AffectedPackages []string                `protobuf:"bytes,8,rep,name=affected_packages,json=affectedPackages,proto3" json:"affected_packages,omitempty"`
	Justification    string                  `protobuf:"bytes,9,opt,name=justification,proto3" json:"justification,omitempty"`
	DueAt            *timestamppb.Timestamp  `protobuf:"bytes,10,opt,name=due_at,json=dueAt,proto3,oneof" json:"due_at,omitempty"`
	UpstreamSeverity *ComponentIssueSeverity `protobuf:"varint,11,opt,name=upstream_severity,json=upstreamSeverity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity,oneof" json:"upstream_severity,omitempty"`
}

func (x *ComponentIssueStateChange) Reset() {
	*x = ComponentIssueStateChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[201]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentIssueStateChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentIssueStateChange) ProtoMessage() {}

func (x *ComponentIssueStateChange) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[201]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentIssueStateChange.ProtoReflect.Descriptor instead.
func (*ComponentIssueStateChange) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{201}
}

func (x *ComponentIssueStateChange) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ComponentIssueStateChange) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *ComponentIssueStateChange) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComponentIssueStateChange) GetActor() *Actor {
	if x != nil {
		return x.Actor
	}
	return nil
}

func (x *ComponentIssueStateChange) GetState() ComponentIssueState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ComponentIssueState_COMPONENT_ISSUE_STATE_UNSPECIFIED
}

func (x *ComponentIssueStateChange) GetSeverity() ComponentIssueSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *ComponentIssueStateChange) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ComponentIssueStateChange) GetAffectedPackages() []string {
	if x != nil {
		return x.AffectedPackages
	}
	return nil
}

func (x *ComponentIssueStateChange) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

func (x *ComponentIssueStateChange) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *ComponentIssueStateChange) GetUpstreamSeverity() ComponentIssueSeverity {
	if x != nil && x.UpstreamSeverity != nil {
		return *x.UpstreamSeverity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

type ListComponentIssueStateChangesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	IssueId     string `protobuf:"bytes,3,opt,name=issue_id,json=issueId,proto3" json:"issue_id,omitempty"`
}

func (x *ListComponentIssueStateChangesRequest) Reset() {
	*x = ListComponentIssueStateChangesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[202]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssueStateChangesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssueStateChangesRequest) ProtoMessage() {}

func (x *ListComponentIssueStateChangesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[202]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssueStateChangesRequest.ProtoReflect.Descriptor instead.
func (*ListComponentIssueStateChangesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{202}
}

func (x *ListComponentIssueStateChangesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComponentIssueStateChangesRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *ListComponentIssueStateChangesRequest) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

type ListComponentIssueStateChangesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentIssueStateChanges []*ComponentIssueStateChange `protobuf:"bytes,1,rep,name=component_issue_state_changes,json=componentIssueStateChanges,proto3" json:"component_issue_state_changes,omitempty"`
}

func (x *ListComponentIssueStateChangesResponse) Reset() {
	*x = ListComponentIssueStateChangesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[203]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentIssueStateChangesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentIssueStateChangesResponse) ProtoMessage() {}

func (x *ListComponentIssueStateChangesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[203]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentIssueStateChangesResponse.ProtoReflect.Descriptor instead.
func (*ListComponentIssueStateChangesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{203}
}

func (x *ListComponentIssueStateChangesResponse) GetComponentIssueStateChanges() []*ComponentIssueStateChange {
	if x != nil {
		return x.ComponentIssueStateChanges
	}
	return nil
}

type LookupEPSSDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CveIds          []string `protobuf:"bytes,1,rep,name=cve_ids,json=cveIds,proto3" json:"cve_ids,omitempty"`
	EpssGreaterThan float64  `protobuf:"fixed64,2,opt,name=epss_greater_than,json=epssGreaterThan,proto3" json:"epss_greater_than,omitempty"`
}

func (x *LookupEPSSDataRequest) Reset() {
	*x = LookupEPSSDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[204]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupEPSSDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupEPSSDataRequest) ProtoMessage() {}

func (x *LookupEPSSDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[204]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupEPSSDataRequest.ProtoReflect.Descriptor instead.
func (*LookupEPSSDataRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{204}
}

func (x *LookupEPSSDataRequest) GetCveIds() []string {
	if x != nil {
		return x.CveIds
	}
	return nil
}

func (x *LookupEPSSDataRequest) GetEpssGreaterThan() float64 {
	if x != nil {
		return x.EpssGreaterThan
	}
	return 0
}

type LookupEPSSDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Offset int32       `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int32       `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Data   []*EPSSItem `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *LookupEPSSDataResponse) Reset() {
	*x = LookupEPSSDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[205]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LookupEPSSDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LookupEPSSDataResponse) ProtoMessage() {}

func (x *LookupEPSSDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[205]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LookupEPSSDataResponse.ProtoReflect.Descriptor instead.
func (*LookupEPSSDataResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{205}
}

func (x *LookupEPSSDataResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LookupEPSSDataResponse) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *LookupEPSSDataResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *LookupEPSSDataResponse) GetData() []*EPSSItem {
	if x != nil {
		return x.Data
	}
	return nil
}

type GenerateOrgSummaryReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ReportStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=report_start,json=reportStart,proto3" json:"report_start,omitempty"`
	ReportEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=report_end,json=reportEnd,proto3" json:"report_end,omitempty"`
}

func (x *GenerateOrgSummaryReportRequest) Reset() {
	*x = GenerateOrgSummaryReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[206]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrgSummaryReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrgSummaryReportRequest) ProtoMessage() {}

func (x *GenerateOrgSummaryReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[206]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrgSummaryReportRequest.ProtoReflect.Descriptor instead.
func (*GenerateOrgSummaryReportRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{206}
}

func (x *GenerateOrgSummaryReportRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GenerateOrgSummaryReportRequest) GetReportStart() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportStart
	}
	return nil
}

func (x *GenerateOrgSummaryReportRequest) GetReportEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportEnd
	}
	return nil
}

type GenerateOrgSummaryReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReportHtml      string `protobuf:"bytes,1,opt,name=report_html,json=reportHtml,proto3" json:"report_html,omitempty"`
	ReportPlaintext string `protobuf:"bytes,2,opt,name=report_plaintext,json=reportPlaintext,proto3" json:"report_plaintext,omitempty"`
}

func (x *GenerateOrgSummaryReportResponse) Reset() {
	*x = GenerateOrgSummaryReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[207]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateOrgSummaryReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateOrgSummaryReportResponse) ProtoMessage() {}

func (x *GenerateOrgSummaryReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[207]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateOrgSummaryReportResponse.ProtoReflect.Descriptor instead.
func (*GenerateOrgSummaryReportResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{207}
}

func (x *GenerateOrgSummaryReportResponse) GetReportHtml() string {
	if x != nil {
		return x.ReportHtml
	}
	return ""
}

func (x *GenerateOrgSummaryReportResponse) GetReportPlaintext() string {
	if x != nil {
		return x.ReportPlaintext
	}
	return ""
}

type GenerateComponentIssuesReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ReportStart *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=report_start,json=reportStart,proto3" json:"report_start,omitempty"`
	ReportEnd   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=report_end,json=reportEnd,proto3" json:"report_end,omitempty"`
}

func (x *GenerateComponentIssuesReportRequest) Reset() {
	*x = GenerateComponentIssuesReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[208]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateComponentIssuesReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateComponentIssuesReportRequest) ProtoMessage() {}

func (x *GenerateComponentIssuesReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[208]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateComponentIssuesReportRequest.ProtoReflect.Descriptor instead.
func (*GenerateComponentIssuesReportRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{208}
}

func (x *GenerateComponentIssuesReportRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GenerateComponentIssuesReportRequest) GetReportStart() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportStart
	}
	return nil
}

func (x *GenerateComponentIssuesReportRequest) GetReportEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.ReportEnd
	}
	return nil
}

type GenerateComponentIssuesReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GenerateComponentIssuesReportItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GenerateComponentIssuesReportResponse) Reset() {
	*x = GenerateComponentIssuesReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[209]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateComponentIssuesReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateComponentIssuesReportResponse) ProtoMessage() {}

func (x *GenerateComponentIssuesReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[209]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateComponentIssuesReportResponse.ProtoReflect.Descriptor instead.
func (*GenerateComponentIssuesReportResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{209}
}

func (x *GenerateComponentIssuesReportResponse) GetItems() []*GenerateComponentIssuesReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GenerateComponentIssuesReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ComponentRef *ComponentRef          `protobuf:"bytes,1,opt,name=component_ref,json=componentRef,proto3" json:"component_ref,omitempty"`
	IssueId      string                 `protobuf:"bytes,2,opt,name=issue_id,json=issueId,proto3" json:"issue_id,omitempty"`
	State        ComponentIssueState    `protobuf:"varint,3,opt,name=state,proto3,enum=edgebit.platform.v1alpha.ComponentIssueState" json:"state,omitempty"`
	Severity     ComponentIssueSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.ComponentIssueSeverity" json:"severity,omitempty"`
	VulnId       string                 `protobuf:"bytes,5,opt,name=vuln_id,json=vulnId,proto3" json:"vuln_id,omitempty"`
	FixState     string                 `protobuf:"bytes,6,opt,name=fix_state,json=fixState,proto3" json:"fix_state,omitempty"`
	FixVersions  []string               `protobuf:"bytes,7,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
	PackageName  string                 `protobuf:"bytes,8,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DueAt        *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=due_at,json=dueAt,proto3" json:"due_at,omitempty"`
	Links        map[string]string      `protobuf:"bytes,12,rep,name=links,proto3" json:"links,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Notes        string                 `protobuf:"bytes,13,opt,name=notes,proto3" json:"notes,omitempty"`
}

func (x *GenerateComponentIssuesReportItem) Reset() {
	*x = GenerateComponentIssuesReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[210]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateComponentIssuesReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateComponentIssuesReportItem) ProtoMessage() {}

func (x *GenerateComponentIssuesReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[210]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateComponentIssuesReportItem.ProtoReflect.Descriptor instead.
func (*GenerateComponentIssuesReportItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{210}
}

func (x *GenerateComponentIssuesReportItem) GetComponentRef() *ComponentRef {
	if x != nil {
		return x.ComponentRef
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetIssueId() string {
	if x != nil {
		return x.IssueId
	}
	return ""
}

func (x *GenerateComponentIssuesReportItem) GetState() ComponentIssueState {
	if x != nil {
		return x.State
	}
	return ComponentIssueState_COMPONENT_ISSUE_STATE_UNSPECIFIED
}

func (x *GenerateComponentIssuesReportItem) GetSeverity() ComponentIssueSeverity {
	if x != nil {
		return x.Severity
	}
	return ComponentIssueSeverity_COMPONENT_ISSUE_SEVERITY_UNSPECIFIED
}

func (x *GenerateComponentIssuesReportItem) GetVulnId() string {
	if x != nil {
		return x.VulnId
	}
	return ""
}

func (x *GenerateComponentIssuesReportItem) GetFixState() string {
	if x != nil {
		return x.FixState
	}
	return ""
}

func (x *GenerateComponentIssuesReportItem) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *GenerateComponentIssuesReportItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetDueAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DueAt
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetLinks() map[string]string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *GenerateComponentIssuesReportItem) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type EPSSItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cve        string                 `protobuf:"bytes,1,opt,name=cve,proto3" json:"cve,omitempty"`
	Epss       float64                `protobuf:"fixed64,2,opt,name=epss,proto3" json:"epss,omitempty"`
	Percentile float64                `protobuf:"fixed64,3,opt,name=percentile,proto3" json:"percentile,omitempty"`
	Date       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *EPSSItem) Reset() {
	*x = EPSSItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[211]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EPSSItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EPSSItem) ProtoMessage() {}

func (x *EPSSItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[211]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EPSSItem.ProtoReflect.Descriptor instead.
func (*EPSSItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{211}
}

func (x *EPSSItem) GetCve() string {
	if x != nil {
		return x.Cve
	}
	return ""
}

func (x *EPSSItem) GetEpss() float64 {
	if x != nil {
		return x.Epss
	}
	return 0
}

func (x *EPSSItem) GetPercentile() float64 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *EPSSItem) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetSBOMUploadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *GetSBOMUploadUrlRequest) Reset() {
	*x = GetSBOMUploadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[212]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMUploadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMUploadUrlRequest) ProtoMessage() {}

func (x *GetSBOMUploadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[212]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMUploadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMUploadUrlRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{212}
}

func (x *GetSBOMUploadUrlRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMUploadUrlRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type GetSBOMUploadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SbomUploadPath string `protobuf:"bytes,1,opt,name=sbom_upload_path,json=sbomUploadPath,proto3" json:"sbom_upload_path,omitempty"`
}

func (x *GetSBOMUploadUrlResponse) Reset() {
	*x = GetSBOMUploadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[213]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMUploadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMUploadUrlResponse) ProtoMessage() {}

func (x *GetSBOMUploadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[213]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMUploadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMUploadUrlResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{213}
}

func (x *GetSBOMUploadUrlResponse) GetSbomUploadPath() string {
	if x != nil {
		return x.SbomUploadPath
	}
	return ""
}

type UserUploadedMetadataSBOM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string            `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	SbomFormat  SBOMFormat        `protobuf:"varint,3,opt,name=sbom_format,json=sbomFormat,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"sbom_format,omitempty"`
	Labels      map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId     string            `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image       *Image            `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SbomTags    []string          `protobuf:"bytes,7,rep,name=sbom_tags,json=sbomTags,proto3" json:"sbom_tags,omitempty"`
}

func (x *UserUploadedMetadataSBOM) Reset() {
	*x = UserUploadedMetadataSBOM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[214]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUploadedMetadataSBOM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUploadedMetadataSBOM) ProtoMessage() {}

func (x *UserUploadedMetadataSBOM) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[214]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUploadedMetadataSBOM.ProtoReflect.Descriptor instead.
func (*UserUploadedMetadataSBOM) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{214}
}

func (x *UserUploadedMetadataSBOM) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UserUploadedMetadataSBOM) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *UserUploadedMetadataSBOM) GetSbomFormat() SBOMFormat {
	if x != nil {
		return x.SbomFormat
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *UserUploadedMetadataSBOM) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UserUploadedMetadataSBOM) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *UserUploadedMetadataSBOM) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UserUploadedMetadataSBOM) GetSbomTags() []string {
	if x != nil {
		return x.SbomTags
	}
	return nil
}

type UserUploadedSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SbomId string `protobuf:"bytes,1,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *UserUploadedSBOMResponse) Reset() {
	*x = UserUploadedSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[215]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUploadedSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUploadedSBOMResponse) ProtoMessage() {}

func (x *UserUploadedSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[215]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUploadedSBOMResponse.ProtoReflect.Descriptor instead.
func (*UserUploadedSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{215}
}

func (x *UserUploadedSBOMResponse) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type ListEnabledFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListEnabledFeaturesRequest) Reset() {
	*x = ListEnabledFeaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[216]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledFeaturesRequest) ProtoMessage() {}

func (x *ListEnabledFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[216]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledFeaturesRequest.ProtoReflect.Descriptor instead.
func (*ListEnabledFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{216}
}

type ListEnabledFeaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags []string `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *ListEnabledFeaturesResponse) Reset() {
	*x = ListEnabledFeaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[217]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledFeaturesResponse) ProtoMessage() {}

func (x *ListEnabledFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[217]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledFeaturesResponse.ProtoReflect.Descriptor instead.
func (*ListEnabledFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{217}
}

func (x *ListEnabledFeaturesResponse) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type TriggerCodeAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	InstallationId int64  `protobuf:"varint,2,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
	RepoOwner      string `protobuf:"bytes,3,opt,name=repo_owner,json=repoOwner,proto3" json:"repo_owner,omitempty"`
	RepoName       string `protobuf:"bytes,4,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	RepoBranch     string `protobuf:"bytes,5,opt,name=repo_branch,json=repoBranch,proto3" json:"repo_branch,omitempty"`
}

func (x *TriggerCodeAnalysisRequest) Reset() {
	*x = TriggerCodeAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[218]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerCodeAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerCodeAnalysisRequest) ProtoMessage() {}

func (x *TriggerCodeAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[218]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerCodeAnalysisRequest.ProtoReflect.Descriptor instead.
func (*TriggerCodeAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{218}
}

func (x *TriggerCodeAnalysisRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *TriggerCodeAnalysisRequest) GetInstallationId() int64 {
	if x != nil {
		return x.InstallationId
	}
	return 0
}

func (x *TriggerCodeAnalysisRequest) GetRepoOwner() string {
	if x != nil {
		return x.RepoOwner
	}
	return ""
}

func (x *TriggerCodeAnalysisRequest) GetRepoName() string {
	if x != nil {
		return x.RepoName
	}
	return ""
}

func (x *TriggerCodeAnalysisRequest) GetRepoBranch() string {
	if x != nil {
		return x.RepoBranch
	}
	return ""
}

type TriggerCodeAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WorkerJobId string `protobuf:"bytes,2,opt,name=worker_job_id,json=workerJobId,proto3" json:"worker_job_id,omitempty"`
}

func (x *TriggerCodeAnalysisResponse) Reset() {
	*x = TriggerCodeAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[219]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerCodeAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerCodeAnalysisResponse) ProtoMessage() {}

func (x *TriggerCodeAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[219]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerCodeAnalysisResponse.ProtoReflect.Descriptor instead.
func (*TriggerCodeAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{219}
}

func (x *TriggerCodeAnalysisResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TriggerCodeAnalysisResponse) GetWorkerJobId() string {
	if x != nil {
		return x.WorkerJobId
	}
	return ""
}

type DebugWorkloadPackageInUseResponse_InUseDetectionLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	InUse    bool   `protobuf:"varint,2,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
}

func (x *DebugWorkloadPackageInUseResponse_InUseDetectionLocation) Reset() {
	*x = DebugWorkloadPackageInUseResponse_InUseDetectionLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[224]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugWorkloadPackageInUseResponse_InUseDetectionLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugWorkloadPackageInUseResponse_InUseDetectionLocation) ProtoMessage() {}

func (x *DebugWorkloadPackageInUseResponse_InUseDetectionLocation) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[224]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugWorkloadPackageInUseResponse_InUseDetectionLocation.ProtoReflect.Descriptor instead.
func (*DebugWorkloadPackageInUseResponse_InUseDetectionLocation) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{75, 0}
}

func (x *DebugWorkloadPackageInUseResponse_InUseDetectionLocation) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *DebugWorkloadPackageInUseResponse_InUseDetectionLocation) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

var File_edgebit_platform_v1alpha_platform_proto protoreflect.FileDescriptor

var file_edgebit_platform_v1alpha_platform_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x62, 0x0a, 0x17,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x79, 0x0a, 0x0a, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x21, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0x6f, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x22, 0x8e, 0x01, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x62, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x0c, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x62, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe4, 0x02, 0x0a, 0x1f, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c,
	0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x0e, 0x6e, 0x65, 0x67, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x6e, 0x65, 0x67, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x61, 0x12,
	0x32, 0x0a, 0x07, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x6f, 0x77,
	0x53, 0x6c, 0x61, 0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x73, 0x6c,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x6c, 0x61, 0x12, 0x34, 0x0a,
	0x08, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x68, 0x69, 0x67, 0x68,
	0x53, 0x6c, 0x61, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x73, 0x6c, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x6c,
	0x61, 0x22, 0xda, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x6e, 0x65,
	0x67, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e,
	0x65, 0x67, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x53, 0x6c, 0x61, 0x12, 0x32, 0x0a, 0x07,
	0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x6f, 0x77, 0x53, 0x6c, 0x61,
	0x12, 0x38, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x53, 0x6c, 0x61, 0x12, 0x34, 0x0a, 0x08, 0x68, 0x69,
	0x67, 0x68, 0x5f, 0x73, 0x6c, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x68, 0x69, 0x67, 0x68, 0x53, 0x6c, 0x61,
	0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x6c, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x6c, 0x61, 0x22, 0x6b,
	0x0a, 0x20, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x40, 0x0a, 0x1f, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c,
	0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x32, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x22, 0x6b, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x54, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x56, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x45,
	0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x76, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x68, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xed, 0x01, 0x0a, 0x10,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x59, 0x0a, 0x1d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x55,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0xa0, 0x04, 0x0a, 0x07,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x76, 0x69, 0x6f,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x33, 0x0a,
	0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x45, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1,
	0x02, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x56, 0x75,
	0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xb6, 0x02,
	0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x43,
	0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c,
	0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x03, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72,
	0x75, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74,
	0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x5e, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49,
	0x64, 0x22, 0xf0, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x12, 0x51, 0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xa8, 0x03, 0x0a, 0x10, 0x4f, 0x76, 0x65, 0x72, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x27, 0x0a,
	0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x65, 0x6e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x65, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x75, 0x6c,
	0x6e, 0x52, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x22, 0xcf, 0x02, 0x0a, 0x13, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66,
	0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66,
	0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x17, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x2f, 0x0a,
	0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x62, 0x6f, 0x6d, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xd5, 0x01, 0x0a, 0x0e, 0x4f, 0x72,
	0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x64, 0x22, 0x4c, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x42, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x44, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x73, 0x22, 0x2d, 0x0a, 0x03, 0x41, 0x4d, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x07,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x12, 0x3f, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x03, 0x61, 0x6d, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x4d, 0x49, 0x48, 0x00, 0x52,
	0x03, 0x61, 0x6d, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x90, 0x04, 0x0a,
	0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4e,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x77, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb7,
	0x05, 0x0a, 0x0c, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4a, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x54, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x51,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42,
	0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xd4, 0x05, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x12, 0x50, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x48,
	0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x88,
	0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65,
	0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x66, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75, 0x6c,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x22, 0x48, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42,
	0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0d,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22,
	0x58, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x22, 0x50, 0x0a, 0x0b, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x70, 0x72, 0x12, 0x41, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x65, 0x72, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x65, 0x72,
	0x6d, 0x73, 0x22, 0xf4, 0x02, 0x0a, 0x14, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x75, 0x6c,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x12, 0x4a, 0x0a, 0x08,
	0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x08,
	0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x45, 0x78, 0x70, 0x72,
	0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x02, 0x0a, 0x11, 0x53, 0x42,
	0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69,
	0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x20, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xff, 0x03,
	0x0a, 0x21, 0x44, 0x65, 0x62, 0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x19, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x69, 0x6e,
	0x5f, 0x75, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x6e,
	0x55, 0x73, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7c, 0x0a, 0x10,
	0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x20, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x1b, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68,
	0x73, 0x1a, 0x4c, 0x0a, 0x16, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x22,
	0x36, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x59, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x5b, 0x0a, 0x09, 0x56, 0x43, 0x53, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x54, 0x6f, 0x49, 0x6d, 0x70, 0x6f,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x06, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0xe3, 0x05, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x79, 0x0a, 0x20, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x1d, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x64, 0x0a, 0x16, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f,
	0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x14, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x6f, 0x72,
	0x6d, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0a, 0x76,
	0x63, 0x73, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x43, 0x53, 0x49, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x09, 0x76, 0x63, 0x73, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xf2, 0x04, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x79, 0x0a, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x1d, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x64, 0x0a, 0x16,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x14, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x16, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x22, 0x80, 0x02, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x49, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x05, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x74, 0x1a, 0x38, 0x0a, 0x0a,
	0x41, 0x75, 0x64, 0x69, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4f, 0x0a, 0x19, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x72,
	0x75, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x6f, 0x77,
	0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x70, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61,
	0x67, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x2d, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x54, 0x61, 0x67, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x53, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49,
	0x64, 0x22, 0x6d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x8b, 0x06, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x79, 0x0a, 0x20, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x1d,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x64, 0x0a,
	0x16, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x64, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x14, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x41,
	0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x22, 0x8b, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22,
	0xed, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x1a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74,
	0x72, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x88, 0x01, 0x01,
	0x42, 0x1d, 0x0a, 0x1b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x22,
	0x87, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x6e,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x74, 0x61, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x22, 0x5c, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x57, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a,
	0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x8f, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x9b, 0x03, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x62, 0x6f,
	0x6d, 0x12, 0x64, 0x0a, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x62, 0x6f, 0x6d, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x64, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x64, 0x53, 0x62, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x74, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x62, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xa5, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x2c,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6c, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4c,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x56, 0x75, 0x6c, 0x6e, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c,
	0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9a,
	0x07, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x5d, 0x0a, 0x11, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x10, 0x75,
	0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x13, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x4f, 0x0a, 0x0c, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x76, 0x75, 0x6c, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4c, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x12, 0x36, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01,
	0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x22, 0x3c, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xc4, 0x03, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x55, 0x6e, 0x72,
	0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x93, 0x01,
	0x0a, 0x1b, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x54, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x1a, 0x4b, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x61, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0xc8, 0x03, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x36, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65,
	0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x1c, 0x73, 0x75, 0x70, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x73,
	0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x55, 0x6e, 0x72, 0x65, 0x73, 0x6f, 0x6c,
	0x76, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x1b, 0x73, 0x75,
	0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x73, 0x5f,
	0x62, 0x79, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x56, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x1a, 0x4b, 0x0a, 0x1d, 0x53, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa,
	0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x56, 0x75, 0x6c, 0x6e, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x56, 0x75,
	0x6c, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x56, 0x75, 0x6c, 0x6e, 0x73,
	0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x67, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x65, 0x67, 0x6c,
	0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1c,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65,
	0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3a, 0x0a, 0x04,
	0x73, 0x62, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x73, 0x62, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43,
	0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a,
	0x06, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x52, 0x06, 0x66, 0x6c, 0x61,
	0x76, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x22, 0x4c, 0x69,
	0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x46,
	0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0x74,
	0x0a, 0x23, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x54, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf3, 0x05, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a,
	0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x50, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x66, 0x12, 0x2f, 0x0a, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x88, 0x01, 0x01, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x4a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x62, 0x6f, 0x6d,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x5c, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x56, 0x65, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x65, 0x78, 0x5f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x74, 0x68, 0x22, 0x85, 0x01, 0x0a, 0x2a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x5f, 0x0a, 0x2b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x6f, 0x0a, 0x11,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x22, 0x55, 0x0a,
	0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0a, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x66, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xef,
	0x01, 0x0a, 0x0d, 0x56, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x3f, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x22, 0x90, 0x01, 0x0a, 0x19, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x54, 0x0a,
	0x0e, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x62, 0x6f, 0x6d, 0x53, 0x72, 0x63, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x22, 0x44, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x68,
	0x5f, 0x61, 0x63, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x68, 0x41,
	0x63, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x67, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x68, 0x41, 0x63, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x3c, 0x0a, 0x1b, 0x48, 0x61, 0x73, 0x47, 0x69, 0x74,
	0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x1c, 0x48, 0x61, 0x73, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x22, 0x98,
	0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x1d,
	0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x12,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x43, 0x53, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x22, 0x37, 0x0a, 0x1f,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70,
	0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x32, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x7a, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74,
	0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x65, 0x0a, 0x18, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x68, 0x5f, 0x61, 0x63, 0x63, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x68, 0x41, 0x63, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x67,
	0x68, 0x5f, 0x61, 0x63, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x67, 0x68, 0x41, 0x63, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x78, 0x0a,
	0x1e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x56, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xc8, 0x01, 0x0a, 0x12, 0x47, 0x69, 0x74, 0x48,
	0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x54, 0x6f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x4f, 0x0a, 0x0b, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0a, 0x73, 0x62, 0x6f, 0x6d, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x7d, 0x0a, 0x18, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x69, 0x74, 0x48,
	0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x42, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65,
	0x70, 0x6f, 0x54, 0x6f, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x22, 0x33, 0x0a, 0x19, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x12, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x75, 0x73,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x39, 0x0a, 0x18, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x8c, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x5f, 0x61, 0x63, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x41, 0x63, 0x63, 0x74,
	0x12, 0x4e, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x61,
	0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x19,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x33, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x61, 0x6e, 0x74, 0x61,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x20, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x0a, 0x18, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22,
	0x8c, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x74, 0x12, 0x4e,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x6c, 0x61, 0x63,
	0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x1a,
	0x0a, 0x18, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x19, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a,
	0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x61,
	0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x08, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x73,
	0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x50, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4a, 0x69, 0x72,
	0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x30, 0x0a, 0x18, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x32, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x69, 0x72,
	0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x0d, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x22, 0x98, 0x01, 0x0a, 0x0b, 0x4a, 0x69, 0x72, 0x61, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x11,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x8d, 0x01, 0x0a, 0x17, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6a, 0x69, 0x72, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x69, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x12, 0x6a, 0x69, 0x72, 0x61, 0x5f, 0x69, 0x73, 0x73,
	0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6a, 0x69, 0x72, 0x61, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x22, 0x42, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4a, 0x69, 0x72,
	0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x5f, 0x6a, 0x69, 0x72,
	0x61, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4a, 0x69, 0x72, 0x61,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x4a, 0x69,
	0x72, 0x61, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x94, 0x01, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x4d, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x22, 0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x65, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f,
	0x72, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x63, 0x0a, 0x10, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x13, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x05, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x12, 0x5b, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66, 0x48, 0x00, 0x52, 0x10,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x66,
	0x12, 0x63, 0x0a, 0x15, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x66, 0x48, 0x00,
	0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x66, 0x42, 0x05, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x22, 0xa9, 0x05, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x48, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x51, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x48, 0x01, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x02, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x11,
	0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x48, 0x03, 0x52, 0x10, 0x75, 0x70, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x75, 0x65, 0x5f,
	0x61, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x22, 0x84, 0x01, 0x0a, 0x25, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64, 0x22,
	0xa0, 0x01, 0x0a, 0x26, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1d, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x22, 0x5c, 0x0a, 0x15, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x50, 0x53, 0x53,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x76, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x76,
	0x65, 0x49, 0x64, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x70, 0x73, 0x73, 0x5f, 0x67, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0f, 0x65, 0x70, 0x73, 0x73, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e,
	0x22, 0x94, 0x01, 0x0a, 0x16, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x50, 0x53, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x45, 0x50, 0x53, 0x53, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xba, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x45, 0x6e, 0x64, 0x22, 0x6e, 0x0a, 0x20, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x68, 0x74, 0x6d, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x69, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x24, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x22, 0x7a, 0x0a, 0x25, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xf1, 0x05, 0x0a, 0x21, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x4b, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x66, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x73, 0x75, 0x65, 0x49, 0x64,
	0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x75, 0x6c, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x75, 0x6c, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x66, 0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x64, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x64, 0x75, 0x65, 0x41, 0x74, 0x12, 0x5c, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x45, 0x50, 0x53, 0x53, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x63, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x70, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x65, 0x70, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5b, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x53, 0x42, 0x4f, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f,
	0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x62,
	0x6f, 0x6d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0xa5, 0x03, 0x0a,
	0x18, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0b, 0x73,
	0x62, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0a, 0x73, 0x62, 0x6f, 0x6d, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x12, 0x56, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x53, 0x42, 0x4f, 0x4d, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x62, 0x6f, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xc1, 0x01, 0x0a,
	0x1a, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x22, 0x51, 0x0a, 0x1b, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x2a, 0xb0, 0x01, 0x0a, 0x0c, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45,
	0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x45, 0x47, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x55, 0x4c, 0x4e,
	0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d,
	0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x55,
	0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x10, 0x05, 0x2a, 0x81, 0x01, 0x0a, 0x0c, 0x56, 0x75, 0x6c, 0x6e, 0x46,
	0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x55, 0x4c, 0x4e, 0x5f,
	0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x55, 0x4c, 0x4e, 0x5f,
	0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x46, 0x49, 0x58,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x4f, 0x4e, 0x54, 0x46, 0x49, 0x58, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x99, 0x01, 0x0a, 0x0a, 0x53,
	0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x42, 0x4f,
	0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x59, 0x46, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x50, 0x44, 0x58,
	0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x42, 0x4f, 0x4d, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e, 0x45, 0x44, 0x58,
	0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x42, 0x4f, 0x4d, 0x5f,
	0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e, 0x45, 0x44, 0x58,
	0x5f, 0x58, 0x4d, 0x4c, 0x10, 0x04, 0x2a, 0xf2, 0x01, 0x0a, 0x14, 0x44, 0x6f, 0x72, 0x6d, 0x61,
	0x6e, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x26, 0x0a, 0x22, 0x44, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41,
	0x47, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x52, 0x4d, 0x41,
	0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43,
	0x59, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f,
	0x52, 0x4d, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x31, 0x10, 0x02, 0x12, 0x21, 0x0a,
	0x1d, 0x44, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x5f, 0x32, 0x10, 0x03,
	0x12, 0x22, 0x0a, 0x1e, 0x44, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b,
	0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x53, 0x45, 0x54, 0x5f, 0x4c,
	0x4f, 0x57, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x54, 0x5f,
	0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x5f, 0x53,
	0x45, 0x54, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x05, 0x2a, 0x53, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x42, 0x4f, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01,
	0x2a, 0xa3, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73,
	0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12,
	0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x47, 0x4e,
	0x4f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xfc, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x28, 0x0a, 0x24, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x53, 0x53, 0x55, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x43,
	0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x45, 0x47, 0x4c, 0x49, 0x47, 0x49, 0x42,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e,
	0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59,
	0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e,
	0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43,
	0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x25,
	0x0a, 0x21, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x53, 0x53, 0x55,
	0x45, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49,
	0x43, 0x41, 0x4c, 0x10, 0x05, 0x2a, 0x5d, 0x0a, 0x12, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x21, 0x43,
	0x49, 0x5f, 0x42, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4c,
	0x41, 0x56, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x49, 0x5f, 0x42, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x56, 0x4f, 0x52, 0x5f, 0x47, 0x49, 0x54, 0x48,
	0x55, 0x42, 0x10, 0x01, 0x2a, 0x83, 0x01, 0x0a, 0x14, 0x53, 0x42, 0x4f, 0x4d, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x22, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x47, 0x45,
	0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x42, 0x4f, 0x4d, 0x5f,
	0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x02, 0x2a, 0xa3, 0x01, 0x0a, 0x0f, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x1c, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1b, 0x0a, 0x17, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4a, 0x49, 0x52, 0x41, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x54, 0x45,
	0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x4e,
	0x54, 0x41, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x04,
	0x32, 0xad, 0x54, 0x0a, 0x17, 0x45, 0x64, 0x67, 0x65, 0x42, 0x69, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2d, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x93, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x37,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x08, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x29, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x46, 0x6f, 0x72,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73,
	0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x87, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x66, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x42,
	0x4f, 0x4d, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x28, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x75, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xba, 0x01, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54,
	0x61, 0x67, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x46, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x54, 0x61, 0x67, 0x53, 0x42, 0x4f, 0x4d, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x53, 0x42, 0x4f, 0x4d, 0x41,
	0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78,
	0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12,
	0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x32,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x37,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0xb7, 0x01, 0x0a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x45, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x73, 0x42, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x3c, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x62,
	0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x62, 0x75, 0x67, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65, 0x78, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x78, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x78, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xb4, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x44, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x45, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x19, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x3b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2,
	0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x62, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x3e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x62, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x3f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x62, 0x6f, 0x6d, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x53, 0x4c, 0x41, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x4c, 0x41, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x93, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48,
	0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x35,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x54, 0x72, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x8d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x87, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x69,
	0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x48, 0x61,
	0x73, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x61,
	0x73, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x48, 0x61, 0x73, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x69,
	0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75,
	0x62, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x47,
	0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a,
	0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x32, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x47, 0x69,
	0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x7a, 0x65, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x69, 0x74,
	0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x47, 0x69, 0x74, 0x48, 0x75, 0x62, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7b, 0x0a, 0x10, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84,
	0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4a, 0x69, 0x72,
	0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x69, 0x72, 0x61, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x69, 0x72, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x69, 0x72,
	0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3f, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75,
	0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x45, 0x50, 0x53, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x45, 0x50, 0x53, 0x53, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x75, 0x70, 0x45, 0x50, 0x53, 0x53, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x39, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x1d,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3e, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x73, 0x73, 0x75, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x84, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x42, 0x65, 0x67, 0x69, 0x6e,
	0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x32, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x56, 0x61, 0x6e,
	0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x6e, 0x74, 0x61, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x42, 0x65, 0x67, 0x69,
	0x6e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x32, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x53, 0x6c,
	0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x42, 0x65, 0x67,
	0x69, 0x6e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63,
	0x6b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x54, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x54, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x81, 0x02, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x42, 0x0d, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2d, 0x63, 0x6c, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x45, 0x50, 0x58, 0xaa, 0x02, 0x18, 0x45, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x18, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x5c,
	0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0xe2, 0x02, 0x24, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce sync.Once
	file_edgebit_platform_v1alpha_platform_proto_rawDescData = file_edgebit_platform_v1alpha_platform_proto_rawDesc
)

func file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP() []byte {
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce.Do(func() {
		file_edgebit_platform_v1alpha_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_edgebit_platform_v1alpha_platform_proto_rawDescData)
	})
	return file_edgebit_platform_v1alpha_platform_proto_rawDescData
}

var file_edgebit_platform_v1alpha_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_edgebit_platform_v1alpha_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 235)
var file_edgebit_platform_v1alpha_platform_proto_goTypes = []interface{}{
	(VulnSeverity)(0),                                                // 0: edgebit.platform.v1alpha.VulnSeverity
	(VulnFixState)(0),                                                // 1: edgebit.platform.v1alpha.VulnFixState
	(SBOMFormat)(0),                                                  // 2: edgebit.platform.v1alpha.SBOMFormat
	(DormantPackagePolicy)(0),                                        // 3: edgebit.platform.v1alpha.DormantPackagePolicy
	(ComponentType)(0),                                               // 4: edgebit.platform.v1alpha.ComponentType
	(ComponentIssueState)(0),                                         // 5: edgebit.platform.v1alpha.ComponentIssueState
	(ComponentIssueSeverity)(0),                                      // 6: edgebit.platform.v1alpha.ComponentIssueSeverity
	(CIBotCommentFlavor)(0),                                          // 7: edgebit.platform.v1alpha.CIBotCommentFlavor
	(SBOMGenerationSource)(0),                                        // 8: edgebit.platform.v1alpha.SBOMGenerationSource
	(IntegrationType)(0),                                             // 9: edgebit.platform.v1alpha.IntegrationType
	(*Project)(nil),                                                  // 10: edgebit.platform.v1alpha.Project
	(*ServerSBOMRoutingPolicy)(nil),                                  // 11: edgebit.platform.v1alpha.ServerSBOMRoutingPolicy
	(*PolicyItem)(nil),                                               // 12: edgebit.platform.v1alpha.PolicyItem
	(*GetServerSBOMRoutingPolicyRequest)(nil),                        // 13: edgebit.platform.v1alpha.GetServerSBOMRoutingPolicyRequest
	(*GetServerSBOMRoutingPolicyResponse)(nil),                       // 14: edgebit.platform.v1alpha.GetServerSBOMRoutingPolicyResponse
	(*UpdateServerSbomRoutingPolicyRequest)(nil),                     // 15: edgebit.platform.v1alpha.UpdateServerSbomRoutingPolicyRequest
	(*UpdateServerSbomRoutingPolicyResponse)(nil),                    // 16: edgebit.platform.v1alpha.UpdateServerSbomRoutingPolicyResponse
	(*SetProjectIssueSLAPolicyRequest)(nil),                          // 17: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest
	(*ProjectIssueSLAPolicy)(nil),                                    // 18: edgebit.platform.v1alpha.ProjectIssueSLAPolicy
	(*SetProjectIssueSLAPolicyResponse)(nil),                         // 19: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyResponse
	(*GetProjectIssueSLAPolicyRequest)(nil),                          // 20: edgebit.platform.v1alpha.GetProjectIssueSLAPolicyRequest
	(*GetProjectIssueSLAPolicyResponse)(nil),                         // 21: edgebit.platform.v1alpha.GetProjectIssueSLAPolicyResponse
	(*ListProjectsRequest)(nil),                                      // 22: edgebit.platform.v1alpha.ListProjectsRequest
	(*ListProjectsResponse)(nil),                                     // 23: edgebit.platform.v1alpha.ListProjectsResponse
	(*CreateProjectRequest)(nil),                                     // 24: edgebit.platform.v1alpha.CreateProjectRequest
	(*CreateProjectResponse)(nil),                                    // 25: edgebit.platform.v1alpha.CreateProjectResponse
	(*GetProjectRequest)(nil),                                        // 26: edgebit.platform.v1alpha.GetProjectRequest
	(*GetProjectResponse)(nil),                                       // 27: edgebit.platform.v1alpha.GetProjectResponse
	(*UpdateProjectRequest)(nil),                                     // 28: edgebit.platform.v1alpha.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),                                    // 29: edgebit.platform.v1alpha.UpdateProjectResponse
	(*GenerateAgentDeployTokenRequest)(nil),                          // 30: edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	(*GenerateAgentDeployTokenResponse)(nil),                         // 31: edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	(*CreateAgentDeployTokenRequest)(nil),                            // 32: edgebit.platform.v1alpha.CreateAgentDeployTokenRequest
	(*CreateAgentDeployTokenResponse)(nil),                           // 33: edgebit.platform.v1alpha.CreateAgentDeployTokenResponse
	(*ListAgentDeployTokensRequest)(nil),                             // 34: edgebit.platform.v1alpha.ListAgentDeployTokensRequest
	(*ListAgentDeployTokensResponse)(nil),                            // 35: edgebit.platform.v1alpha.ListAgentDeployTokensResponse
	(*AgentDeployToken)(nil),                                         // 36: edgebit.platform.v1alpha.AgentDeployToken
	(*DeleteAgentDeployTokenRequest)(nil),                            // 37: edgebit.platform.v1alpha.DeleteAgentDeployTokenRequest
	(*DeleteAgentDeployTokenResponse)(nil),                           // 38: edgebit.platform.v1alpha.DeleteAgentDeployTokenResponse
	(*ListMachinesRequest)(nil),                                      // 39: edgebit.platform.v1alpha.ListMachinesRequest
	(*ListMachinesResponse)(nil),                                     // 40: edgebit.platform.v1alpha.ListMachinesResponse
	(*GetMachineRequest)(nil),                                        // 41: edgebit.platform.v1alpha.GetMachineRequest
	(*GetMachineResponse)(nil),                                       // 42: edgebit.platform.v1alpha.GetMachineResponse
	(*Machine)(nil),                                                  // 43: edgebit.platform.v1alpha.Machine
	(*Package)(nil),                                                  // 44: edgebit.platform.v1alpha.Package
	(*File)(nil),                                                     // 45: edgebit.platform.v1alpha.File
	(*VulnReference)(nil),                                            // 46: edgebit.platform.v1alpha.VulnReference
	(*Vulnerability)(nil),                                            // 47: edgebit.platform.v1alpha.Vulnerability
	(*Workload)(nil),                                                 // 48: edgebit.platform.v1alpha.Workload
	(*ListWorkloadsForMachineRequest)(nil),                           // 49: edgebit.platform.v1alpha.ListWorkloadsForMachineRequest
	(*ListWorkloadsForMachineResponse)(nil),                          // 50: edgebit.platform.v1alpha.ListWorkloadsForMachineResponse
	(*GetMachineInventoryRequest)(nil),                               // 51: edgebit.platform.v1alpha.GetMachineInventoryRequest
	(*GetMachineInventoryResponse)(nil),                              // 52: edgebit.platform.v1alpha.GetMachineInventoryResponse
	(*OverviewRequest)(nil),                                          // 53: edgebit.platform.v1alpha.OverviewRequest
	(*OverviewResponse)(nil),                                         // 54: edgebit.platform.v1alpha.OverviewResponse
	(*OverviewPackage)(nil),                                          // 55: edgebit.platform.v1alpha.OverviewPackage
	(*OverviewPackageVuln)(nil),                                      // 56: edgebit.platform.v1alpha.OverviewPackageVuln
	(*OverviewOnboardingState)(nil),                                  // 57: edgebit.platform.v1alpha.OverviewOnboardingState
	(*CreateOrgAccessTokenRequest)(nil),                              // 58: edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	(*CreateOrgAccessTokenResponse)(nil),                             // 59: edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	(*ListOrgAccessTokensRequest)(nil),                               // 60: edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	(*ListOrgAccessTokensResponse)(nil),                              // 61: edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	(*OrgAccessToken)(nil),                                           // 62: edgebit.platform.v1alpha.OrgAccessToken
	(*DeleteOrgAccessTokenRequest)(nil),                              // 63: edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	(*DeleteOrgAccessTokenResponse)(nil),                             // 64: edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	(*GenericImage)(nil),                                             // 65: edgebit.platform.v1alpha.GenericImage
	(*DockerImage)(nil),                                              // 66: edgebit.platform.v1alpha.DockerImage
	(*AMI)(nil),                                                      // 67: edgebit.platform.v1alpha.AMI
	(*Image)(nil),                                                    // 68: edgebit.platform.v1alpha.Image
	(*UploadSBOMHeader)(nil),                                         // 69: edgebit.platform.v1alpha.UploadSBOMHeader
	(*UploadSBOMRequest)(nil),                                        // 70: edgebit.platform.v1alpha.UploadSBOMRequest
	(*UploadSBOMResponse)(nil),                                       // 71: edgebit.platform.v1alpha.UploadSBOMResponse
	(*SBOMListItem)(nil),                                             // 72: edgebit.platform.v1alpha.SBOMListItem
	(*ListSBOMsRequest)(nil),                                         // 73: edgebit.platform.v1alpha.ListSBOMsRequest
	(*ListSBOMsResponse)(nil),                                        // 74: edgebit.platform.v1alpha.ListSBOMsResponse
	(*GetSBOMRequest)(nil),                                           // 75: edgebit.platform.v1alpha.GetSBOMRequest
	(*GetSBOMResponse)(nil),                                          // 76: edgebit.platform.v1alpha.GetSBOMResponse
	(*GetSBOMInventoryRequest)(nil),                                  // 77: edgebit.platform.v1alpha.GetSBOMInventoryRequest
	(*GetSBOMInventoryResponse)(nil),                                 // 78: edgebit.platform.v1alpha.GetSBOMInventoryResponse
	(*InstallationEvidence)(nil),                                     // 79: edgebit.platform.v1alpha.InstallationEvidence
	(*LicenseExpr)(nil),                                              // 80: edgebit.platform.v1alpha.LicenseExpr
	(*LicenseClause)(nil),                                            // 81: edgebit.platform.v1alpha.LicenseClause
	(*SBOMInventoryPackage)(nil),                                     // 82: edgebit.platform.v1alpha.SBOMInventoryPackage
	(*SBOMInventoryVuln)(nil),                                        // 83: edgebit.platform.v1alpha.SBOMInventoryVuln
	(*DebugWorkloadPackageInUseRequest)(nil),                         // 84: edgebit.platform.v1alpha.DebugWorkloadPackageInUseRequest
	(*DebugWorkloadPackageInUseResponse)(nil),                        // 85: edgebit.platform.v1alpha.DebugWorkloadPackageInUseResponse
	(*ListComponentsRequest)(nil),                                    // 86: edgebit.platform.v1alpha.ListComponentsRequest
	(*ListComponentsResponse)(nil),                                   // 87: edgebit.platform.v1alpha.ListComponentsResponse
	(*GetComponentRequest)(nil),                                      // 88: edgebit.platform.v1alpha.GetComponentRequest
	(*GetComponentResponse)(nil),                                     // 89: edgebit.platform.v1alpha.GetComponentResponse
	(*VCSImport)(nil),                                                // 90: edgebit.platform.v1alpha.VCSImport
	(*CreateComponentRequest)(nil),                                   // 91: edgebit.platform.v1alpha.CreateComponentRequest
	(*CreateComponentResponse)(nil),                                  // 92: edgebit.platform.v1alpha.CreateComponentResponse
	(*UpdateComponentRequest)(nil),                                   // 93: edgebit.platform.v1alpha.UpdateComponentRequest
	(*UpdateComponentResponse)(nil),                                  // 94: edgebit.platform.v1alpha.UpdateComponentResponse
	(*DeleteComponentRequest)(nil),                                   // 95: edgebit.platform.v1alpha.DeleteComponentRequest
	(*DeleteComponentResponse)(nil),                                  // 96: edgebit.platform.v1alpha.DeleteComponentResponse
	(*AttestationChain)(nil),                                         // 97: edgebit.platform.v1alpha.AttestationChain
	(*AttestationChainItem)(nil),                                     // 98: edgebit.platform.v1alpha.AttestationChainItem
	(*AttestationChainItemTrust)(nil),                                // 99: edgebit.platform.v1alpha.AttestationChainItemTrust
	(*GetComponentDefaultTagSBOMAttestationRequest)(nil),             // 100: edgebit.platform.v1alpha.GetComponentDefaultTagSBOMAttestationRequest
	(*GetComponentDefaultTagSBOMAttestationResponse)(nil),            // 101: edgebit.platform.v1alpha.GetComponentDefaultTagSBOMAttestationResponse
	(*GetSBOMAttestationRequest)(nil),                                // 102: edgebit.platform.v1alpha.GetSBOMAttestationRequest
	(*GetSBOMAttestationResponse)(nil),                               // 103: edgebit.platform.v1alpha.GetSBOMAttestationResponse
	(*Component)(nil),                                                // 104: edgebit.platform.v1alpha.Component
	(*ListComponentsWithMetricsRequest)(nil),                         // 105: edgebit.platform.v1alpha.ListComponentsWithMetricsRequest
	(*ListComponentsWithMetricsResponse)(nil),                        // 106: edgebit.platform.v1alpha.ListComponentsWithMetricsResponse
	(*ComponentWithMetrics)(nil),                                     // 107: edgebit.platform.v1alpha.ComponentWithMetrics
	(*SetComponentTagRequest)(nil),                                   // 108: edgebit.platform.v1alpha.SetComponentTagRequest
	(*SetComponentTagResponse)(nil),                                  // 109: edgebit.platform.v1alpha.SetComponentTagResponse
	(*GetComponentTagRequest)(nil),                                   // 110: edgebit.platform.v1alpha.GetComponentTagRequest
	(*GetComponentTagResponse)(nil),                                  // 111: edgebit.platform.v1alpha.GetComponentTagResponse
	(*ListComponentTagsRequest)(nil),                                 // 112: edgebit.platform.v1alpha.ListComponentTagsRequest
	(*ListComponentTagsResponse)(nil),                                // 113: edgebit.platform.v1alpha.ListComponentTagsResponse
	(*DeleteComponentTagRequest)(nil),                                // 114: edgebit.platform.v1alpha.DeleteComponentTagRequest
	(*DeleteComponentTagResponse)(nil),                               // 115: edgebit.platform.v1alpha.DeleteComponentTagResponse
	(*ComponentTag)(nil),                                             // 116: edgebit.platform.v1alpha.ComponentTag
	(*GetComponentTagsOverviewRequest)(nil),                          // 117: edgebit.platform.v1alpha.GetComponentTagsOverviewRequest
	(*GetComponentTagsOverviewResponse)(nil),                         // 118: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse
	(*ListComponentIssuesRequest)(nil),                               // 119: edgebit.platform.v1alpha.ListComponentIssuesRequest
	(*ListComponentIssuesResponse)(nil),                              // 120: edgebit.platform.v1alpha.ListComponentIssuesResponse
	(*ListComponentIssuesByStateForProjectRequest)(nil),              // 121: edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectRequest
	(*ListComponentIssuesByStateForProjectResponse)(nil),             // 122: edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectResponse
	(*GetComponentIssueRequest)(nil),                                 // 123: edgebit.platform.v1alpha.GetComponentIssueRequest
	(*GetComponentIssueResponse)(nil),                                // 124: edgebit.platform.v1alpha.GetComponentIssueResponse
	(*UpdateComponentIssueRequest)(nil),                              // 125: edgebit.platform.v1alpha.UpdateComponentIssueRequest
	(*UpdateComponentIssueResponse)(nil),                             // 126: edgebit.platform.v1alpha.UpdateComponentIssueResponse
	(*VulnIssueDetails)(nil),                                         // 127: edgebit.platform.v1alpha.VulnIssueDetails
	(*ComponentIssue)(nil),                                           // 128: edgebit.platform.v1alpha.ComponentIssue
	(*GetProjectIssueTrendRequest)(nil),                              // 129: edgebit.platform.v1alpha.GetProjectIssueTrendRequest
	(*GetProjectIssueTrendResponse)(nil),                             // 130: edgebit.platform.v1alpha.GetProjectIssueTrendResponse
	(*GetComponentIssueTrendRequest)(nil),                            // 131: edgebit.platform.v1alpha.GetComponentIssueTrendRequest
	(*GetComponentIssueTrendResponse)(nil),                           // 132: edgebit.platform.v1alpha.GetComponentIssueTrendResponse
	(*ComponentIssueTrendItem)(nil),                                  // 133: edgebit.platform.v1alpha.ComponentIssueTrendItem
	(*ComponentEnrichedSBOMSummary)(nil),                             // 134: edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	(*GetCIBotCommentRequest)(nil),                                   // 135: edgebit.platform.v1alpha.GetCIBotCommentRequest
	(*GetCIBotCommentResponse)(nil),                                  // 136: edgebit.platform.v1alpha.GetCIBotCommentResponse
	(*ListWorkloadsRequest)(nil),                                     // 137: edgebit.platform.v1alpha.ListWorkloadsRequest
	(*ListWorkloadsResponse)(nil),                                    // 138: edgebit.platform.v1alpha.ListWorkloadsResponse
	(*ListWorkloadItemsForMachineRequest)(nil),                       // 139: edgebit.platform.v1alpha.ListWorkloadItemsForMachineRequest
	(*ListWorkloadItemsForMachineResponse)(nil),                      // 140: edgebit.platform.v1alpha.ListWorkloadItemsForMachineResponse
	(*GetWorkloadRequest)(nil),                                       // 141: edgebit.platform.v1alpha.GetWorkloadRequest
	(*GetWorkloadResponse)(nil),                                      // 142: edgebit.platform.v1alpha.GetWorkloadResponse
	(*WorkloadItem)(nil),                                             // 143: edgebit.platform.v1alpha.WorkloadItem
	(*GetSBOMDownloadUrlRequest)(nil),                                // 144: edgebit.platform.v1alpha.GetSBOMDownloadUrlRequest
	(*GetSBOMDownloadUrlResponse)(nil),                               // 145: edgebit.platform.v1alpha.GetSBOMDownloadUrlResponse
	(*GetVexDownloadUrlRequest)(nil),                                 // 146: edgebit.platform.v1alpha.GetVexDownloadUrlRequest
	(*GetVexDownloadUrlResponse)(nil),                                // 147: edgebit.platform.v1alpha.GetVexDownloadUrlResponse
	(*GetComponentIssuesReportDownloadUrlRequest)(nil),               // 148: edgebit.platform.v1alpha.GetComponentIssuesReportDownloadUrlRequest
	(*GetComponentIssuesReportDownloadUrlResponse)(nil),              // 149: edgebit.platform.v1alpha.GetComponentIssuesReportDownloadUrlResponse
	(*GraphRelationship)(nil),                                        // 150: edgebit.platform.v1alpha.GraphRelationship
	(*ComponentRef)(nil),                                             // 151: edgebit.platform.v1alpha.ComponentRef
	(*MachineRef)(nil),                                               // 152: edgebit.platform.v1alpha.MachineRef
	(*VCSRepository)(nil),                                            // 153: edgebit.platform.v1alpha.VCSRepository
	(*GitHubIntegrationSettings)(nil),                                // 154: edgebit.platform.v1alpha.GitHubIntegrationSettings
	(*GetGitHubIntegrationRequest)(nil),                              // 155: edgebit.platform.v1alpha.GetGitHubIntegrationRequest
	(*GetGitHubIntegrationResponse)(nil),                             // 156: edgebit.platform.v1alpha.GetGitHubIntegrationResponse
	(*HasGitHubIntegrationRequest)(nil),                              // 157: edgebit.platform.v1alpha.HasGitHubIntegrationRequest
	(*HasGitHubIntegrationResponse)(nil),                             // 158: edgebit.platform.v1alpha.HasGitHubIntegrationResponse
	(*UpdateGitHubIntegrationRequest)(nil),                           // 159: edgebit.platform.v1alpha.UpdateGitHubIntegrationRequest
	(*UpdateGitHubIntegrationResponse)(nil),                          // 160: edgebit.platform.v1alpha.UpdateGitHubIntegrationResponse
	(*ListGitHubRepositoriesRequest)(nil),                            // 161: edgebit.platform.v1alpha.ListGitHubRepositoriesRequest
	(*ListGitHubRepositoriesResponse)(nil),                           // 162: edgebit.platform.v1alpha.ListGitHubRepositoriesResponse
	(*CompleteGitHubAppInstallRequest)(nil),                          // 163: edgebit.platform.v1alpha.CompleteGitHubAppInstallRequest
	(*CompleteGitHubAppInstallResponse)(nil),                         // 164: edgebit.platform.v1alpha.CompleteGitHubAppInstallResponse
	(*AnalyzeGitHubRepoRequest)(nil),                                 // 165: edgebit.platform.v1alpha.AnalyzeGitHubRepoRequest
	(*AnalyzeGitHubRepoResponse)(nil),                                // 166: edgebit.platform.v1alpha.AnalyzeGitHubRepoResponse
	(*ListGitHubIntegrationsRequest)(nil),                            // 167: edgebit.platform.v1alpha.ListGitHubIntegrationsRequest
	(*GitHubIntegrationSummary)(nil),                                 // 168: edgebit.platform.v1alpha.GitHubIntegrationSummary
	(*ListGitHubIntegrationsResponse)(nil),                           // 169: edgebit.platform.v1alpha.ListGitHubIntegrationsResponse
	(*GitHubRepoToImport)(nil),                                       // 170: edgebit.platform.v1alpha.GitHubRepoToImport
	(*ImportGitHubReposRequest)(nil),                                 // 171: edgebit.platform.v1alpha.ImportGitHubReposRequest
	(*ImportGitHubReposResponse)(nil),                                // 172: edgebit.platform.v1alpha.ImportGitHubReposResponse
	(*IgnoreIssueRequest)(nil),                                       // 173: edgebit.platform.v1alpha.IgnoreIssueRequest
	(*IgnoreIssueResponse)(nil),                                      // 174: edgebit.platform.v1alpha.IgnoreIssueResponse
	(*VantaIntegrationSettings)(nil),                                 // 175: edgebit.platform.v1alpha.VantaIntegrationSettings
	(*GetVantaIntegrationRequest)(nil),                               // 176: edgebit.platform.v1alpha.GetVantaIntegrationRequest
	(*GetVantaIntegrationResponse)(nil),                              // 177: edgebit.platform.v1alpha.GetVantaIntegrationResponse
	(*BeginVantaInstallRequest)(nil),                                 // 178: edgebit.platform.v1alpha.BeginVantaInstallRequest
	(*BeginVantaInstallResponse)(nil),                                // 179: edgebit.platform.v1alpha.BeginVantaInstallResponse
	(*CompleteVantaInstallRequest)(nil),                              // 180: edgebit.platform.v1alpha.CompleteVantaInstallRequest
	(*CompleteVantaInstallResponse)(nil),                             // 181: edgebit.platform.v1alpha.CompleteVantaInstallResponse
	(*UpdateVantaIntegrationRequest)(nil),                            // 182: edgebit.platform.v1alpha.UpdateVantaIntegrationRequest
	(*UpdateVantaIntegrationResponse)(nil),                           // 183: edgebit.platform.v1alpha.UpdateVantaIntegrationResponse
	(*SlackIntegrationSettings)(nil),                                 // 184: edgebit.platform.v1alpha.SlackIntegrationSettings
	(*GetSlackIntegrationRequest)(nil),                               // 185: edgebit.platform.v1alpha.GetSlackIntegrationRequest
	(*GetSlackIntegrationResponse)(nil),                              // 186: edgebit.platform.v1alpha.GetSlackIntegrationResponse
	(*BeginSlackInstallRequest)(nil),                                 // 187: edgebit.platform.v1alpha.BeginSlackInstallRequest
	(*BeginSlackInstallResponse)(nil),                                // 188: edgebit.platform.v1alpha.BeginSlackInstallResponse
	(*CompleteSlackInstallRequest)(nil),                              // 189: edgebit.platform.v1alpha.CompleteSlackInstallRequest
	(*CompleteSlackInstallResponse)(nil),                             // 190: edgebit.platform.v1alpha.CompleteSlackInstallResponse
	(*UpdateSlackIntegrationRequest)(nil),                            // 191: edgebit.platform.v1alpha.UpdateSlackIntegrationRequest
	(*UpdateSlackIntegrationResponse)(nil),                           // 192: edgebit.platform.v1alpha.UpdateSlackIntegrationResponse
	(*ListIntegrationsRequest)(nil),                                  // 193: edgebit.platform.v1alpha.ListIntegrationsRequest
	(*IntegrationSummary)(nil),                                       // 194: edgebit.platform.v1alpha.IntegrationSummary
	(*ListIntegrationsResponse)(nil),                                 // 195: edgebit.platform.v1alpha.ListIntegrationsResponse
	(*BeginJiraInstallRequest)(nil),                                  // 196: edgebit.platform.v1alpha.BeginJiraInstallRequest
	(*BeginJiraInstallResponse)(nil),                                 // 197: edgebit.platform.v1alpha.BeginJiraInstallResponse
	(*CompleteJiraInstallRequest)(nil),                               // 198: edgebit.platform.v1alpha.CompleteJiraInstallRequest
	(*CompleteJiraInstallResponse)(nil),                              // 199: edgebit.platform.v1alpha.CompleteJiraInstallResponse
	(*JiraIssueType)(nil),                                            // 200: edgebit.platform.v1alpha.JiraIssueType
	(*JiraProject)(nil),                                              // 201: edgebit.platform.v1alpha.JiraProject
	(*JiraIntegrationSettings)(nil),                                  // 202: edgebit.platform.v1alpha.JiraIntegrationSettings
	(*GetJiraIntegrationRequest)(nil),                                // 203: edgebit.platform.v1alpha.GetJiraIntegrationRequest
	(*GetJiraIntegrationResponse)(nil),                               // 204: edgebit.platform.v1alpha.GetJiraIntegrationResponse
	(*UpdateJiraIntegrationRequest)(nil),                             // 205: edgebit.platform.v1alpha.UpdateJiraIntegrationRequest
	(*UpdateJiraIntegrationResponse)(nil),                            // 206: edgebit.platform.v1alpha.UpdateJiraIntegrationResponse
	(*UserRef)(nil),                                                  // 207: edgebit.platform.v1alpha.UserRef
	(*ProjectAPIKeyRef)(nil),                                         // 208: edgebit.platform.v1alpha.ProjectAPIKeyRef
	(*AutomatedProcessRef)(nil),                                      // 209: edgebit.platform.v1alpha.AutomatedProcessRef
	(*Actor)(nil),                                                    // 210: edgebit.platform.v1alpha.Actor
	(*ComponentIssueStateChange)(nil),                                // 211: edgebit.platform.v1alpha.ComponentIssueStateChange
	(*ListComponentIssueStateChangesRequest)(nil),                    // 212: edgebit.platform.v1alpha.ListComponentIssueStateChangesRequest
	(*ListComponentIssueStateChangesResponse)(nil),                   // 213: edgebit.platform.v1alpha.ListComponentIssueStateChangesResponse
	(*LookupEPSSDataRequest)(nil),                                    // 214: edgebit.platform.v1alpha.LookupEPSSDataRequest
	(*LookupEPSSDataResponse)(nil),                                   // 215: edgebit.platform.v1alpha.LookupEPSSDataResponse
	(*GenerateOrgSummaryReportRequest)(nil),                          // 216: edgebit.platform.v1alpha.GenerateOrgSummaryReportRequest
	(*GenerateOrgSummaryReportResponse)(nil),                         // 217: edgebit.platform.v1alpha.GenerateOrgSummaryReportResponse
	(*GenerateComponentIssuesReportRequest)(nil),                     // 218: edgebit.platform.v1alpha.GenerateComponentIssuesReportRequest
	(*GenerateComponentIssuesReportResponse)(nil),                    // 219: edgebit.platform.v1alpha.GenerateComponentIssuesReportResponse
	(*GenerateComponentIssuesReportItem)(nil),                        // 220: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem
	(*EPSSItem)(nil),                                                 // 221: edgebit.platform.v1alpha.EPSSItem
	(*GetSBOMUploadUrlRequest)(nil),                                  // 222: edgebit.platform.v1alpha.GetSBOMUploadUrlRequest
	(*GetSBOMUploadUrlResponse)(nil),                                 // 223: edgebit.platform.v1alpha.GetSBOMUploadUrlResponse
	(*UserUploadedMetadataSBOM)(nil),                                 // 224: edgebit.platform.v1alpha.UserUploadedMetadataSBOM
	(*UserUploadedSBOMResponse)(nil),                                 // 225: edgebit.platform.v1alpha.UserUploadedSBOMResponse
	(*ListEnabledFeaturesRequest)(nil),                               // 226: edgebit.platform.v1alpha.ListEnabledFeaturesRequest
	(*ListEnabledFeaturesResponse)(nil),                              // 227: edgebit.platform.v1alpha.ListEnabledFeaturesResponse
	(*TriggerCodeAnalysisRequest)(nil),                               // 228: edgebit.platform.v1alpha.TriggerCodeAnalysisRequest
	(*TriggerCodeAnalysisResponse)(nil),                              // 229: edgebit.platform.v1alpha.TriggerCodeAnalysisResponse
	nil,                                                              // 230: edgebit.platform.v1alpha.Machine.LabelsEntry
	nil,                                                              // 231: edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	nil,                                                              // 232: edgebit.platform.v1alpha.SBOMListItem.LabelsEntry
	nil,                                                              // 233: edgebit.platform.v1alpha.GetSBOMResponse.LabelsEntry
	(*DebugWorkloadPackageInUseResponse_InUseDetectionLocation)(nil), // 234: edgebit.platform.v1alpha.DebugWorkloadPackageInUseResponse.InUseDetectionLocation
	nil,                           // 235: edgebit.platform.v1alpha.CreateComponentRequest.LabelsEntry
	nil,                           // 236: edgebit.platform.v1alpha.UpdateComponentRequest.LabelsEntry
	nil,                           // 237: edgebit.platform.v1alpha.AttestationChainItem.AuditEntry
	nil,                           // 238: edgebit.platform.v1alpha.Component.LabelsEntry
	nil,                           // 239: edgebit.platform.v1alpha.ComponentIssue.LabelsEntry
	nil,                           // 240: edgebit.platform.v1alpha.GetProjectIssueTrendResponse.SuppressedIssuesByPolicyEntry
	nil,                           // 241: edgebit.platform.v1alpha.GetComponentIssueTrendResponse.SuppressedIssuesByPolicyEntry
	nil,                           // 242: edgebit.platform.v1alpha.WorkloadItem.LabelsEntry
	nil,                           // 243: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.LinksEntry
	nil,                           // 244: edgebit.platform.v1alpha.UserUploadedMetadataSBOM.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 245: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),   // 246: google.protobuf.Duration
}
var file_edgebit_platform_v1alpha_platform_proto_depIdxs = []int32{
	245, // 0: edgebit.platform.v1alpha.Project.created_at:type_name -> google.protobuf.Timestamp
	245, // 1: edgebit.platform.v1alpha.Project.updated_at:type_name -> google.protobuf.Timestamp
	12,  // 2: edgebit.platform.v1alpha.ServerSBOMRoutingPolicy.policy_items:type_name -> edgebit.platform.v1alpha.PolicyItem
	11,  // 3: edgebit.platform.v1alpha.GetServerSBOMRoutingPolicyResponse.policy:type_name -> edgebit.platform.v1alpha.ServerSBOMRoutingPolicy
	12,  // 4: edgebit.platform.v1alpha.UpdateServerSbomRoutingPolicyRequest.policy_items:type_name -> edgebit.platform.v1alpha.PolicyItem
	246, // 5: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest.negligible_sla:type_name -> google.protobuf.Duration
	246, // 6: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest.low_sla:type_name -> google.protobuf.Duration
	246, // 7: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest.medium_sla:type_name -> google.protobuf.Duration
	246, // 8: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest.high_sla:type_name -> google.protobuf.Duration
	246, // 9: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest.critical_sla:type_name -> google.protobuf.Duration
	246, // 10: edgebit.platform.v1alpha.ProjectIssueSLAPolicy.negligible_sla:type_name -> google.protobuf.Duration
	246, // 11: edgebit.platform.v1alpha.ProjectIssueSLAPolicy.low_sla:type_name -> google.protobuf.Duration
	246, // 12: edgebit.platform.v1alpha.ProjectIssueSLAPolicy.medium_sla:type_name -> google.protobuf.Duration
	246, // 13: edgebit.platform.v1alpha.ProjectIssueSLAPolicy.high_sla:type_name -> google.protobuf.Duration
	246, // 14: edgebit.platform.v1alpha.ProjectIssueSLAPolicy.critical_sla:type_name -> google.protobuf.Duration
	18,  // 15: edgebit.platform.v1alpha.SetProjectIssueSLAPolicyResponse.policy:type_name -> edgebit.platform.v1alpha.ProjectIssueSLAPolicy
	18,  // 16: edgebit.platform.v1alpha.GetProjectIssueSLAPolicyResponse.policy:type_name -> edgebit.platform.v1alpha.ProjectIssueSLAPolicy
	10,  // 17: edgebit.platform.v1alpha.ListProjectsResponse.projects:type_name -> edgebit.platform.v1alpha.Project
	10,  // 18: edgebit.platform.v1alpha.CreateProjectResponse.project:type_name -> edgebit.platform.v1alpha.Project
	10,  // 19: edgebit.platform.v1alpha.GetProjectResponse.project:type_name -> edgebit.platform.v1alpha.Project
	10,  // 20: edgebit.platform.v1alpha.UpdateProjectResponse.project:type_name -> edgebit.platform.v1alpha.Project
	36,  // 21: edgebit.platform.v1alpha.ListAgentDeployTokensResponse.tokens:type_name -> edgebit.platform.v1alpha.AgentDeployToken
	245, // 22: edgebit.platform.v1alpha.AgentDeployToken.created_at:type_name -> google.protobuf.Timestamp
	245, // 23: edgebit.platform.v1alpha.AgentDeployToken.last_used:type_name -> google.protobuf.Timestamp
	43,  // 24: edgebit.platform.v1alpha.ListMachinesResponse.machines:type_name -> edgebit.platform.v1alpha.Machine
	43,  // 25: edgebit.platform.v1alpha.GetMachineResponse.machine:type_name -> edgebit.platform.v1alpha.Machine
	245, // 26: edgebit.platform.v1alpha.Machine.last_updated:type_name -> google.protobuf.Timestamp
	230, // 27: edgebit.platform.v1alpha.Machine.labels:type_name -> edgebit.platform.v1alpha.Machine.LabelsEntry
	0,   // 28: edgebit.platform.v1alpha.Vulnerability.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	46,  // 29: edgebit.platform.v1alpha.Vulnerability.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 30: edgebit.platform.v1alpha.Vulnerability.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	245, // 31: edgebit.platform.v1alpha.Workload.started_at:type_name -> google.protobuf.Timestamp
	245, // 32: edgebit.platform.v1alpha.Workload.ended_at:type_name -> google.protobuf.Timestamp
	43,  // 33: edgebit.platform.v1alpha.ListWorkloadsForMachineResponse.machine:type_name -> edgebit.platform.v1alpha.Machine
	48,  // 34: edgebit.platform.v1alpha.ListWorkloadsForMachineResponse.workloads:type_name -> edgebit.platform.v1alpha.Workload
	43,  // 35: edgebit.platform.v1alpha.GetMachineInventoryResponse.machine:type_name -> edgebit.platform.v1alpha.Machine
	44,  // 36: edgebit.platform.v1alpha.GetMachineInventoryResponse.packages:type_name -> edgebit.platform.v1alpha.Package
	45,  // 37: edgebit.platform.v1alpha.GetMachineInventoryResponse.files_in_use:type_name -> edgebit.platform.v1alpha.File
	48,  // 38: edgebit.platform.v1alpha.GetMachineInventoryResponse.workloads:type_name -> edgebit.platform.v1alpha.Workload
	47,  // 39: edgebit.platform.v1alpha.GetMachineInventoryResponse.vulnerabilities:type_name -> edgebit.platform.v1alpha.Vulnerability
	55,  // 40: edgebit.platform.v1alpha.OverviewResponse.packages:type_name -> edgebit.platform.v1alpha.OverviewPackage
	57,  // 41: edgebit.platform.v1alpha.OverviewResponse.onboarding_state:type_name -> edgebit.platform.v1alpha.OverviewOnboardingState
	56,  // 42: edgebit.platform.v1alpha.OverviewPackage.vulns:type_name -> edgebit.platform.v1alpha.OverviewPackageVuln
	0,   // 43: edgebit.platform.v1alpha.OverviewPackageVuln.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	46,  // 44: edgebit.platform.v1alpha.OverviewPackageVuln.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 45: edgebit.platform.v1alpha.OverviewPackageVuln.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	62,  // 46: edgebit.platform.v1alpha.ListOrgAccessTokensResponse.tokens:type_name -> edgebit.platform.v1alpha.OrgAccessToken
	245, // 47: edgebit.platform.v1alpha.OrgAccessToken.created_at:type_name -> google.protobuf.Timestamp
	245, // 48: edgebit.platform.v1alpha.OrgAccessToken.last_used:type_name -> google.protobuf.Timestamp
	65,  // 49: edgebit.platform.v1alpha.Image.generic:type_name -> edgebit.platform.v1alpha.GenericImage
	66,  // 50: edgebit.platform.v1alpha.Image.docker:type_name -> edgebit.platform.v1alpha.DockerImage
	67,  // 51: edgebit.platform.v1alpha.Image.ami:type_name -> edgebit.platform.v1alpha.AMI
	2,   // 52: edgebit.platform.v1alpha.UploadSBOMHeader.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	231, // 53: edgebit.platform.v1alpha.UploadSBOMHeader.labels:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	68,  // 54: edgebit.platform.v1alpha.UploadSBOMHeader.image:type_name -> edgebit.platform.v1alpha.Image
	69,  // 55: edgebit.platform.v1alpha.UploadSBOMRequest.header:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader
	2,   // 56: edgebit.platform.v1alpha.SBOMListItem.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	232, // 57: edgebit.platform.v1alpha.SBOMListItem.labels:type_name -> edgebit.platform.v1alpha.SBOMListItem.LabelsEntry
	68,  // 58: edgebit.platform.v1alpha.SBOMListItem.image:type_name -> edgebit.platform.v1alpha.Image
	245, // 59: edgebit.platform.v1alpha.SBOMListItem.created_at:type_name -> google.protobuf.Timestamp
	151, // 60: edgebit.platform.v1alpha.SBOMListItem.component_ref:type_name -> edgebit.platform.v1alpha.ComponentRef
	152, // 61: edgebit.platform.v1alpha.SBOMListItem.machine_ref:type_name -> edgebit.platform.v1alpha.MachineRef
	72,  // 62: edgebit.platform.v1alpha.ListSBOMsResponse.items:type_name -> edgebit.platform.v1alpha.SBOMListItem
	2,   // 63: edgebit.platform.v1alpha.GetSBOMResponse.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	233, // 64: edgebit.platform.v1alpha.GetSBOMResponse.labels:type_name -> edgebit.platform.v1alpha.GetSBOMResponse.LabelsEntry
	68,  // 65: edgebit.platform.v1alpha.GetSBOMResponse.image:type_name -> edgebit.platform.v1alpha.Image
	245, // 66: edgebit.platform.v1alpha.GetSBOMResponse.created_at:type_name -> google.protobuf.Timestamp
	151, // 67: edgebit.platform.v1alpha.GetSBOMResponse.component_ref:type_name -> edgebit.platform.v1alpha.ComponentRef
	152, // 68: edgebit.platform.v1alpha.GetSBOMResponse.machine_ref:type_name -> edgebit.platform.v1alpha.MachineRef
	82,  // 69: edgebit.platform.v1alpha.GetSBOMInventoryResponse.packages:type_name -> edgebit.platform.v1alpha.SBOMInventoryPackage
	150, // 70: edgebit.platform.v1alpha.GetSBOMInventoryResponse.relationships:type_name -> edgebit.platform.v1alpha.GraphRelationship
	81,  // 71: edgebit.platform.v1alpha.LicenseExpr.clauses:type_name -> edgebit.platform.v1alpha.LicenseClause
	83,  // 72: edgebit.platform.v1alpha.SBOMInventoryPackage.vulns:type_name -> edgebit.platform.v1alpha.SBOMInventoryVuln
	79,  // 73: edgebit.platform.v1alpha.SBOMInventoryPackage.evidence:type_name -> edgebit.platform.v1alpha.InstallationEvidence
	80,  // 74: edgebit.platform.v1alpha.SBOMInventoryPackage.license:type_name -> edgebit.platform.v1alpha.LicenseExpr
	0,   // 75: edgebit.platform.v1alpha.SBOMInventoryVuln.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	46,  // 76: edgebit.platform.v1alpha.SBOMInventoryVuln.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 77: edgebit.platform.v1alpha.SBOMInventoryVuln.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	234, // 78: edgebit.platform.v1alpha.DebugWorkloadPackageInUseResponse.in_use_locations:type_name -> edgebit.platform.v1alpha.DebugWorkloadPackageInUseResponse.InUseDetectionLocation
	104, // 79: edgebit.platform.v1alpha.ListComponentsResponse.components:type_name -> edgebit.platform.v1alpha.Component
	104, // 80: edgebit.platform.v1alpha.GetComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	170, // 81: edgebit.platform.v1alpha.VCSImport.github:type_name -> edgebit.platform.v1alpha.GitHubRepoToImport
	4,   // 82: edgebit.platform.v1alpha.CreateComponentRequest.type:type_name -> edgebit.platform.v1alpha.ComponentType
	235, // 83: edgebit.platform.v1alpha.CreateComponentRequest.labels:type_name -> edgebit.platform.v1alpha.CreateComponentRequest.LabelsEntry
	6,   // 84: edgebit.platform.v1alpha.CreateComponentRequest.policy_ignore_severity_threshold:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	3,   // 85: edgebit.platform.v1alpha.CreateComponentRequest.policy_dormant_package:type_name -> edgebit.platform.v1alpha.DormantPackagePolicy
	90,  // 86: edgebit.platform.v1alpha.CreateComponentRequest.vcs_import:type_name -> edgebit.platform.v1alpha.VCSImport
	104, // 87: edgebit.platform.v1alpha.CreateComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	236, // 88: edgebit.platform.v1alpha.UpdateComponentRequest.labels:type_name -> edgebit.platform.v1alpha.UpdateComponentRequest.LabelsEntry
	6,   // 89: edgebit.platform.v1alpha.UpdateComponentRequest.policy_ignore_severity_threshold:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	3,   // 90: edgebit.platform.v1alpha.UpdateComponentRequest.policy_dormant_package:type_name -> edgebit.platform.v1alpha.DormantPackagePolicy
	104, // 91: edgebit.platform.v1alpha.UpdateComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	99,  // 92: edgebit.platform.v1alpha.AttestationChainItem.trust:type_name -> edgebit.platform.v1alpha.AttestationChainItemTrust
	237, // 93: edgebit.platform.v1alpha.AttestationChainItem.audit:type_name -> edgebit.platform.v1alpha.AttestationChainItem.AuditEntry
	98,  // 94: edgebit.platform.v1alpha.GetComponentDefaultTagSBOMAttestationResponse.chain_items:type_name -> edgebit.platform.v1alpha.AttestationChainItem
	98,  // 95: edgebit.platform.v1alpha.GetSBOMAttestationResponse.chain_items:type_name -> edgebit.platform.v1alpha.AttestationChainItem
	245, // 96: edgebit.platform.v1alpha.Component.created_at:type_name -> google.protobuf.Timestamp
	245, // 97: edgebit.platform.v1alpha.Component.updated_at:type_name -> google.protobuf.Timestamp
	4,   // 98: edgebit.platform.v1alpha.Component.type:type_name -> edgebit.platform.v1alpha.ComponentType
	238, // 99: edgebit.platform.v1alpha.Component.labels:type_name -> edgebit.platform.v1alpha.Component.LabelsEntry
	6,   // 100: edgebit.platform.v1alpha.Component.policy_ignore_severity_threshold:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	3,   // 101: edgebit.platform.v1alpha.Component.policy_dormant_package:type_name -> edgebit.platform.v1alpha.DormantPackagePolicy
	107, // 102: edgebit.platform.v1alpha.ListComponentsWithMetricsResponse.components_with_metrics:type_name -> edgebit.platform.v1alpha.ComponentWithMetrics
	104, // 103: edgebit.platform.v1alpha.ComponentWithMetrics.component:type_name -> edgebit.platform.v1alpha.Component
	133, // 104: edgebit.platform.v1alpha.ComponentWithMetrics.component_issue_trend_item:type_name -> edgebit.platform.v1alpha.ComponentIssueTrendItem
	116, // 105: edgebit.platform.v1alpha.SetComponentTagResponse.tag:type_name -> edgebit.platform.v1alpha.ComponentTag
	116, // 106: edgebit.platform.v1alpha.GetComponentTagResponse.tag:type_name -> edgebit.platform.v1alpha.ComponentTag
	116, // 107: edgebit.platform.v1alpha.ListComponentTagsResponse.tags:type_name -> edgebit.platform.v1alpha.ComponentTag
	245, // 108: edgebit.platform.v1alpha.ComponentTag.created_at:type_name -> google.protobuf.Timestamp
	245, // 109: edgebit.platform.v1alpha.ComponentTag.updated_at:type_name -> google.protobuf.Timestamp
	134, // 110: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse.default_sbom:type_name -> edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	134, // 111: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse.other_active_sboms:type_name -> edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	5,   // 112: edgebit.platform.v1alpha.ListComponentIssuesRequest.states:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	128, // 113: edgebit.platform.v1alpha.ListComponentIssuesResponse.items:type_name -> edgebit.platform.v1alpha.ComponentIssue
	5,   // 114: edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectRequest.states:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	128, // 115: edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectResponse.items:type_name -> edgebit.platform.v1alpha.ComponentIssue
	128, // 116: edgebit.platform.v1alpha.GetComponentIssueResponse.issue:type_name -> edgebit.platform.v1alpha.ComponentIssue
	5,   // 117: edgebit.platform.v1alpha.UpdateComponentIssueRequest.state:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	6,   // 118: edgebit.platform.v1alpha.UpdateComponentIssueRequest.severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	46,  // 119: edgebit.platform.v1alpha.VulnIssueDetails.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 120: edgebit.platform.v1alpha.VulnIssueDetails.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	245, // 121: edgebit.platform.v1alpha.ComponentIssue.created_at:type_name -> google.protobuf.Timestamp
	245, // 122: edgebit.platform.v1alpha.ComponentIssue.updated_at:type_name -> google.protobuf.Timestamp
	6,   // 123: edgebit.platform.v1alpha.ComponentIssue.upstream_severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	5,   // 124: edgebit.platform.v1alpha.ComponentIssue.state:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	6,   // 125: edgebit.platform.v1alpha.ComponentIssue.severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	127, // 126: edgebit.platform.v1alpha.ComponentIssue.vuln_details:type_name -> edgebit.platform.v1alpha.VulnIssueDetails
	239, // 127: edgebit.platform.v1alpha.ComponentIssue.labels:type_name -> edgebit.platform.v1alpha.ComponentIssue.LabelsEntry
	151, // 128: edgebit.platform.v1alpha.ComponentIssue.component_ref:type_name -> edgebit.platform.v1alpha.ComponentRef
	245, // 129: edgebit.platform.v1alpha.ComponentIssue.due_at:type_name -> google.protobuf.Timestamp
	133, // 130: edgebit.platform.v1alpha.GetProjectIssueTrendResponse.items:type_name -> edgebit.platform.v1alpha.ComponentIssueTrendItem
	240, // 131: edgebit.platform.v1alpha.GetProjectIssueTrendResponse.suppressed_issues_by_policy:type_name -> edgebit.platform.v1alpha.GetProjectIssueTrendResponse.SuppressedIssuesByPolicyEntry
	133, // 132: edgebit.platform.v1alpha.GetComponentIssueTrendResponse.items:type_name -> edgebit.platform.v1alpha.ComponentIssueTrendItem
	241, // 133: edgebit.platform.v1alpha.GetComponentIssueTrendResponse.suppressed_issues_by_policy:type_name -> edgebit.platform.v1alpha.GetComponentIssueTrendResponse.SuppressedIssuesByPolicyEntry
	245, // 134: edgebit.platform.v1alpha.ComponentIssueTrendItem.date:type_name -> google.protobuf.Timestamp
	72,  // 135: edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary.sbom:type_name -> edgebit.platform.v1alpha.SBOMListItem
	7,   // 136: edgebit.platform.v1alpha.GetCIBotCommentRequest.flavor:type_name -> edgebit.platform.v1alpha.CIBotCommentFlavor
	143, // 137: edgebit.platform.v1alpha.ListWorkloadsResponse.workloads:type_name -> edgebit.platform.v1alpha.WorkloadItem
	143, // 138: edgebit.platform.v1alpha.ListWorkloadItemsForMachineResponse.workload_items:type_name -> edgebit.platform.v1alpha.WorkloadItem
	143, // 139: edgebit.platform.v1alpha.GetWorkloadResponse.workload:type_name -> edgebit.platform.v1alpha.WorkloadItem
	245, // 140: edgebit.platform.v1alpha.WorkloadItem.started_at:type_name -> google.protobuf.Timestamp
	245, // 141: edgebit.platform.v1alpha.WorkloadItem.ended_at:type_name -> google.protobuf.Timestamp
	242, // 142: edgebit.platform.v1alpha.WorkloadItem.labels:type_name -> edgebit.platform.v1alpha.WorkloadItem.LabelsEntry
	151, // 143: edgebit.platform.v1alpha.WorkloadItem.component_ref:type_name -> edgebit.platform.v1alpha.ComponentRef
	152, // 144: edgebit.platform.v1alpha.WorkloadItem.machine_ref:type_name -> edgebit.platform.v1alpha.MachineRef
	245, // 145: edgebit.platform.v1alpha.VCSRepository.last_activity:type_name -> google.protobuf.Timestamp
	8,   // 146: edgebit.platform.v1alpha.GitHubIntegrationSettings.sbom_src_order:type_name -> edgebit.platform.v1alpha.SBOMGenerationSource
	154, // 147: edgebit.platform.v1alpha.GetGitHubIntegrationResponse.settings:type_name -> edgebit.platform.v1alpha.GitHubIntegrationSettings
	154, // 148: edgebit.platform.v1alpha.UpdateGitHubIntegrationRequest.settings:type_name -> edgebit.platform.v1alpha.GitHubIntegrationSettings
	153, // 149: edgebit.platform.v1alpha.ListGitHubRepositoriesResponse.repos:type_name -> edgebit.platform.v1alpha.VCSRepository
	168, // 150: edgebit.platform.v1alpha.ListGitHubIntegrationsResponse.integrations:type_name -> edgebit.platform.v1alpha.GitHubIntegrationSummary
	8,   // 151: edgebit.platform.v1alpha.GitHubRepoToImport.sbom_source:type_name -> edgebit.platform.v1alpha.SBOMGenerationSource
	170, // 152: edgebit.platform.v1alpha.ImportGitHubReposRequest.repos:type_name -> edgebit.platform.v1alpha.GitHubRepoToImport
	175, // 153: edgebit.platform.v1alpha.GetVantaIntegrationResponse.settings:type_name -> edgebit.platform.v1alpha.VantaIntegrationSettings
	175, // 154: edgebit.platform.v1alpha.UpdateVantaIntegrationRequest.settings:type_name -> edgebit.platform.v1alpha.VantaIntegrationSettings
	184, // 155: edgebit.platform.v1alpha.GetSlackIntegrationResponse.settings:type_name -> edgebit.platform.v1alpha.SlackIntegrationSettings
	184, // 156: edgebit.platform.v1alpha.UpdateSlackIntegrationRequest.settings:type_name -> edgebit.platform.v1alpha.SlackIntegrationSettings
	9,   // 157: edgebit.platform.v1alpha.IntegrationSummary.type:type_name -> edgebit.platform.v1alpha.IntegrationType
	194, // 158: edgebit.platform.v1alpha.ListIntegrationsResponse.integrations:type_name -> edgebit.platform.v1alpha.IntegrationSummary
	200, // 159: edgebit.platform.v1alpha.JiraProject.avail_issue_types:type_name -> edgebit.platform.v1alpha.JiraIssueType
	202, // 160: edgebit.platform.v1alpha.GetJiraIntegrationResponse.settings:type_name -> edgebit.platform.v1alpha.JiraIntegrationSettings
	201, // 161: edgebit.platform.v1alpha.GetJiraIntegrationResponse.avail_jira_projects:type_name -> edgebit.platform.v1alpha.JiraProject
	202, // 162: edgebit.platform.v1alpha.UpdateJiraIntegrationRequest.settings:type_name -> edgebit.platform.v1alpha.JiraIntegrationSettings
	207, // 163: edgebit.platform.v1alpha.Actor.user_ref:type_name -> edgebit.platform.v1alpha.UserRef
	208, // 164: edgebit.platform.v1alpha.Actor.project_api_key_ref:type_name -> edgebit.platform.v1alpha.ProjectAPIKeyRef
	209, // 165: edgebit.platform.v1alpha.Actor.automated_process_ref:type_name -> edgebit.platform.v1alpha.AutomatedProcessRef
	245, // 166: edgebit.platform.v1alpha.ComponentIssueStateChange.created_at:type_name -> google.protobuf.Timestamp
	210, // 167: edgebit.platform.v1alpha.ComponentIssueStateChange.actor:type_name -> edgebit.platform.v1alpha.Actor
	5,   // 168: edgebit.platform.v1alpha.ComponentIssueStateChange.state:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	6,   // 169: edgebit.platform.v1alpha.ComponentIssueStateChange.severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	245, // 170: edgebit.platform.v1alpha.ComponentIssueStateChange.due_at:type_name -> google.protobuf.Timestamp
	6,   // 171: edgebit.platform.v1alpha.ComponentIssueStateChange.upstream_severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	211, // 172: edgebit.platform.v1alpha.ListComponentIssueStateChangesResponse.component_issue_state_changes:type_name -> edgebit.platform.v1alpha.ComponentIssueStateChange
	221, // 173: edgebit.platform.v1alpha.LookupEPSSDataResponse.data:type_name -> edgebit.platform.v1alpha.EPSSItem
	245, // 174: edgebit.platform.v1alpha.GenerateOrgSummaryReportRequest.report_start:type_name -> google.protobuf.Timestamp
	245, // 175: edgebit.platform.v1alpha.GenerateOrgSummaryReportRequest.report_end:type_name -> google.protobuf.Timestamp
	245, // 176: edgebit.platform.v1alpha.GenerateComponentIssuesReportRequest.report_start:type_name -> google.protobuf.Timestamp
	245, // 177: edgebit.platform.v1alpha.GenerateComponentIssuesReportRequest.report_end:type_name -> google.protobuf.Timestamp
	220, // 178: edgebit.platform.v1alpha.GenerateComponentIssuesReportResponse.items:type_name -> edgebit.platform.v1alpha.GenerateComponentIssuesReportItem
	151, // 179: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.component_ref:type_name -> edgebit.platform.v1alpha.ComponentRef
	5,   // 180: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.state:type_name -> edgebit.platform.v1alpha.ComponentIssueState
	6,   // 181: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.severity:type_name -> edgebit.platform.v1alpha.ComponentIssueSeverity
	245, // 182: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.created_at:type_name -> google.protobuf.Timestamp
	245, // 183: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.updated_at:type_name -> google.protobuf.Timestamp
	245, // 184: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.due_at:type_name -> google.protobuf.Timestamp
	243, // 185: edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.links:type_name -> edgebit.platform.v1alpha.GenerateComponentIssuesReportItem.LinksEntry
	245, // 186: edgebit.platform.v1alpha.EPSSItem.date:type_name -> google.protobuf.Timestamp
	2,   // 187: edgebit.platform.v1alpha.UserUploadedMetadataSBOM.sbom_format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	244, // 188: edgebit.platform.v1alpha.UserUploadedMetadataSBOM.labels:type_name -> edgebit.platform.v1alpha.UserUploadedMetadataSBOM.LabelsEntry
	68,  // 189: edgebit.platform.v1alpha.UserUploadedMetadataSBOM.image:type_name -> edgebit.platform.v1alpha.Image
	22,  // 190: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:input_type -> edgebit.platform.v1alpha.ListProjectsRequest
	24,  // 191: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateProject:input_type -> edgebit.platform.v1alpha.CreateProjectRequest
	26,  // 192: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProject:input_type -> edgebit.platform.v1alpha.GetProjectRequest
	28,  // 193: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateProject:input_type -> edgebit.platform.v1alpha.UpdateProjectRequest
	30,  // 194: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:input_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	32,  // 195: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateAgentDeployToken:input_type -> edgebit.platform.v1alpha.CreateAgentDeployTokenRequest
	34,  // 196: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListAgentDeployTokens:input_type -> edgebit.platform.v1alpha.ListAgentDeployTokensRequest
	37,  // 197: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteAgentDeployToken:input_type -> edgebit.platform.v1alpha.DeleteAgentDeployTokenRequest
	39,  // 198: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:input_type -> edgebit.platform.v1alpha.ListMachinesRequest
	41,  // 199: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachine:input_type -> edgebit.platform.v1alpha.GetMachineRequest
	51,  // 200: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:input_type -> edgebit.platform.v1alpha.GetMachineInventoryRequest
	53,  // 201: edgebit.platform.v1alpha.EdgeBitPublicAPIService.Overview:input_type -> edgebit.platform.v1alpha.OverviewRequest
	49,  // 202: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloadsForMachine:input_type -> edgebit.platform.v1alpha.ListWorkloadsForMachineRequest
	58,  // 203: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:input_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	60,  // 204: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:input_type -> edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	63,  // 205: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:input_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	70,  // 206: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:input_type -> edgebit.platform.v1alpha.UploadSBOMRequest
	73,  // 207: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListSBOMs:input_type -> edgebit.platform.v1alpha.ListSBOMsRequest
	75,  // 208: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOM:input_type -> edgebit.platform.v1alpha.GetSBOMRequest
	77,  // 209: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMInventory:input_type -> edgebit.platform.v1alpha.GetSBOMInventoryRequest
	102, // 210: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMAttestation:input_type -> edgebit.platform.v1alpha.GetSBOMAttestationRequest
	86,  // 211: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponents:input_type -> edgebit.platform.v1alpha.ListComponentsRequest
	88,  // 212: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponent:input_type -> edgebit.platform.v1alpha.GetComponentRequest
	91,  // 213: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateComponent:input_type -> edgebit.platform.v1alpha.CreateComponentRequest
	93,  // 214: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponent:input_type -> edgebit.platform.v1alpha.UpdateComponentRequest
	95,  // 215: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponent:input_type -> edgebit.platform.v1alpha.DeleteComponentRequest
	100, // 216: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentDefaultTagSBOMAttestation:input_type -> edgebit.platform.v1alpha.GetComponentDefaultTagSBOMAttestationRequest
	112, // 217: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentTags:input_type -> edgebit.platform.v1alpha.ListComponentTagsRequest
	110, // 218: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTag:input_type -> edgebit.platform.v1alpha.GetComponentTagRequest
	108, // 219: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetComponentTag:input_type -> edgebit.platform.v1alpha.SetComponentTagRequest
	114, // 220: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponentTag:input_type -> edgebit.platform.v1alpha.DeleteComponentTagRequest
	117, // 221: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTagsOverview:input_type -> edgebit.platform.v1alpha.GetComponentTagsOverviewRequest
	119, // 222: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssues:input_type -> edgebit.platform.v1alpha.ListComponentIssuesRequest
	123, // 223: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssue:input_type -> edgebit.platform.v1alpha.GetComponentIssueRequest
	125, // 224: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponentIssue:input_type -> edgebit.platform.v1alpha.UpdateComponentIssueRequest
	131, // 225: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssueTrend:input_type -> edgebit.platform.v1alpha.GetComponentIssueTrendRequest
	121, // 226: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssuesByStateForProject:input_type -> edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectRequest
	135, // 227: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetCIBotComment:input_type -> edgebit.platform.v1alpha.GetCIBotCommentRequest
	137, // 228: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloads:input_type -> edgebit.platform.v1alpha.ListWorkloadsRequest
	139, // 229: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloadItemsForMachine:input_type -> edgebit.platform.v1alpha.ListWorkloadItemsForMachineRequest
	141, // 230: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetWorkload:input_type -> edgebit.platform.v1alpha.GetWorkloadRequest
	84,  // 231: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DebugWorkloadPackageInUse:input_type -> edgebit.platform.v1alpha.DebugWorkloadPackageInUseRequest
	144, // 232: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMDownloadUrl:input_type -> edgebit.platform.v1alpha.GetSBOMDownloadUrlRequest
	222, // 233: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMUploadUrl:input_type -> edgebit.platform.v1alpha.GetSBOMUploadUrlRequest
	146, // 234: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetVexDownloadUrl:input_type -> edgebit.platform.v1alpha.GetVexDownloadUrlRequest
	148, // 235: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssuesReportDownloadUrl:input_type -> edgebit.platform.v1alpha.GetComponentIssuesReportDownloadUrlRequest
	105, // 236: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentsWithMetrics:input_type -> edgebit.platform.v1alpha.ListComponentsWithMetricsRequest
	13,  // 237: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetServerSBOMRoutingPolicy:input_type -> edgebit.platform.v1alpha.GetServerSBOMRoutingPolicyRequest
	15,  // 238: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateServerSbomRoutingPolicy:input_type -> edgebit.platform.v1alpha.UpdateServerSbomRoutingPolicyRequest
	17,  // 239: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetProjectIssueSLAPolicy:input_type -> edgebit.platform.v1alpha.SetProjectIssueSLAPolicyRequest
	20,  // 240: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProjectIssueSLAPolicy:input_type -> edgebit.platform.v1alpha.GetProjectIssueSLAPolicyRequest
	163, // 241: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteGitHubAppInstall:input_type -> edgebit.platform.v1alpha.CompleteGitHubAppInstallRequest
	129, // 242: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProjectIssueTrend:input_type -> edgebit.platform.v1alpha.GetProjectIssueTrendRequest
	167, // 243: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListGitHubIntegrations:input_type -> edgebit.platform.v1alpha.ListGitHubIntegrationsRequest
	155, // 244: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetGitHubIntegration:input_type -> edgebit.platform.v1alpha.GetGitHubIntegrationRequest
	157, // 245: edgebit.platform.v1alpha.EdgeBitPublicAPIService.HasGitHubIntegration:input_type -> edgebit.platform.v1alpha.HasGitHubIntegrationRequest
	159, // 246: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateGitHubIntegration:input_type -> edgebit.platform.v1alpha.UpdateGitHubIntegrationRequest
	161, // 247: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListGitHubRepositories:input_type -> edgebit.platform.v1alpha.ListGitHubRepositoriesRequest
	165, // 248: edgebit.platform.v1alpha.EdgeBitPublicAPIService.AnalyzeGitHubRepo:input_type -> edgebit.platform.v1alpha.AnalyzeGitHubRepoRequest
	171, // 249: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ImportGitHubRepos:input_type -> edgebit.platform.v1alpha.ImportGitHubReposRequest
	173, // 250: edgebit.platform.v1alpha.EdgeBitPublicAPIService.IgnoreIssue:input_type -> edgebit.platform.v1alpha.IgnoreIssueRequest
	193, // 251: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListIntegrations:input_type -> edgebit.platform.v1alpha.ListIntegrationsRequest
	196, // 252: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginJiraInstall:input_type -> edgebit.platform.v1alpha.BeginJiraInstallRequest
	198, // 253: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteJiraInstall:input_type -> edgebit.platform.v1alpha.CompleteJiraInstallRequest
	203, // 254: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetJiraIntegration:input_type -> edgebit.platform.v1alpha.GetJiraIntegrationRequest
	205, // 255: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateJiraIntegration:input_type -> edgebit.platform.v1alpha.UpdateJiraIntegrationRequest
	212, // 256: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssueStateChanges:input_type -> edgebit.platform.v1alpha.ListComponentIssueStateChangesRequest
	214, // 257: edgebit.platform.v1alpha.EdgeBitPublicAPIService.LookupEPSSData:input_type -> edgebit.platform.v1alpha.LookupEPSSDataRequest
	216, // 258: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateOrgSummaryReport:input_type -> edgebit.platform.v1alpha.GenerateOrgSummaryReportRequest
	218, // 259: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateComponentIssuesReport:input_type -> edgebit.platform.v1alpha.GenerateComponentIssuesReportRequest
	226, // 260: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListEnabledFeatures:input_type -> edgebit.platform.v1alpha.ListEnabledFeaturesRequest
	178, // 261: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginVantaInstall:input_type -> edgebit.platform.v1alpha.BeginVantaInstallRequest
	180, // 262: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteVantaInstall:input_type -> edgebit.platform.v1alpha.CompleteVantaInstallRequest
	176, // 263: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetVantaIntegration:input_type -> edgebit.platform.v1alpha.GetVantaIntegrationRequest
	182, // 264: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateVantaIntegration:input_type -> edgebit.platform.v1alpha.UpdateVantaIntegrationRequest
	187, // 265: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginSlackInstall:input_type -> edgebit.platform.v1alpha.BeginSlackInstallRequest
	189, // 266: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteSlackInstall:input_type -> edgebit.platform.v1alpha.CompleteSlackInstallRequest
	185, // 267: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSlackIntegration:input_type -> edgebit.platform.v1alpha.GetSlackIntegrationRequest
	191, // 268: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateSlackIntegration:input_type -> edgebit.platform.v1alpha.UpdateSlackIntegrationRequest
	228, // 269: edgebit.platform.v1alpha.EdgeBitPublicAPIService.TriggerCodeAnalysis:input_type -> edgebit.platform.v1alpha.TriggerCodeAnalysisRequest
	23,  // 270: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:output_type -> edgebit.platform.v1alpha.ListProjectsResponse
	25,  // 271: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateProject:output_type -> edgebit.platform.v1alpha.CreateProjectResponse
	27,  // 272: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProject:output_type -> edgebit.platform.v1alpha.GetProjectResponse
	29,  // 273: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateProject:output_type -> edgebit.platform.v1alpha.UpdateProjectResponse
	31,  // 274: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:output_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	33,  // 275: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateAgentDeployToken:output_type -> edgebit.platform.v1alpha.CreateAgentDeployTokenResponse
	35,  // 276: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListAgentDeployTokens:output_type -> edgebit.platform.v1alpha.ListAgentDeployTokensResponse
	38,  // 277: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteAgentDeployToken:output_type -> edgebit.platform.v1alpha.DeleteAgentDeployTokenResponse
	40,  // 278: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:output_type -> edgebit.platform.v1alpha.ListMachinesResponse
	42,  // 279: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachine:output_type -> edgebit.platform.v1alpha.GetMachineResponse
	52,  // 280: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:output_type -> edgebit.platform.v1alpha.GetMachineInventoryResponse
	54,  // 281: edgebit.platform.v1alpha.EdgeBitPublicAPIService.Overview:output_type -> edgebit.platform.v1alpha.OverviewResponse
	50,  // 282: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloadsForMachine:output_type -> edgebit.platform.v1alpha.ListWorkloadsForMachineResponse
	59,  // 283: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:output_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	61,  // 284: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:output_type -> edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	64,  // 285: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:output_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	71,  // 286: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:output_type -> edgebit.platform.v1alpha.UploadSBOMResponse
	74,  // 287: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListSBOMs:output_type -> edgebit.platform.v1alpha.ListSBOMsResponse
	76,  // 288: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOM:output_type -> edgebit.platform.v1alpha.GetSBOMResponse
	78,  // 289: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMInventory:output_type -> edgebit.platform.v1alpha.GetSBOMInventoryResponse
	103, // 290: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMAttestation:output_type -> edgebit.platform.v1alpha.GetSBOMAttestationResponse
	87,  // 291: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponents:output_type -> edgebit.platform.v1alpha.ListComponentsResponse
	89,  // 292: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponent:output_type -> edgebit.platform.v1alpha.GetComponentResponse
	92,  // 293: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateComponent:output_type -> edgebit.platform.v1alpha.CreateComponentResponse
	94,  // 294: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponent:output_type -> edgebit.platform.v1alpha.UpdateComponentResponse
	96,  // 295: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponent:output_type -> edgebit.platform.v1alpha.DeleteComponentResponse
	101, // 296: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentDefaultTagSBOMAttestation:output_type -> edgebit.platform.v1alpha.GetComponentDefaultTagSBOMAttestationResponse
	113, // 297: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentTags:output_type -> edgebit.platform.v1alpha.ListComponentTagsResponse
	111, // 298: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTag:output_type -> edgebit.platform.v1alpha.GetComponentTagResponse
	109, // 299: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetComponentTag:output_type -> edgebit.platform.v1alpha.SetComponentTagResponse
	115, // 300: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponentTag:output_type -> edgebit.platform.v1alpha.DeleteComponentTagResponse
	118, // 301: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTagsOverview:output_type -> edgebit.platform.v1alpha.GetComponentTagsOverviewResponse
	120, // 302: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssues:output_type -> edgebit.platform.v1alpha.ListComponentIssuesResponse
	124, // 303: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssue:output_type -> edgebit.platform.v1alpha.GetComponentIssueResponse
	126, // 304: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponentIssue:output_type -> edgebit.platform.v1alpha.UpdateComponentIssueResponse
	132, // 305: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssueTrend:output_type -> edgebit.platform.v1alpha.GetComponentIssueTrendResponse
	122, // 306: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssuesByStateForProject:output_type -> edgebit.platform.v1alpha.ListComponentIssuesByStateForProjectResponse
	136, // 307: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetCIBotComment:output_type -> edgebit.platform.v1alpha.GetCIBotCommentResponse
	138, // 308: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloads:output_type -> edgebit.platform.v1alpha.ListWorkloadsResponse
	140, // 309: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloadItemsForMachine:output_type -> edgebit.platform.v1alpha.ListWorkloadItemsForMachineResponse
	142, // 310: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetWorkload:output_type -> edgebit.platform.v1alpha.GetWorkloadResponse
	85,  // 311: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DebugWorkloadPackageInUse:output_type -> edgebit.platform.v1alpha.DebugWorkloadPackageInUseResponse
	145, // 312: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMDownloadUrl:output_type -> edgebit.platform.v1alpha.GetSBOMDownloadUrlResponse
	223, // 313: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMUploadUrl:output_type -> edgebit.platform.v1alpha.GetSBOMUploadUrlResponse
	147, // 314: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetVexDownloadUrl:output_type -> edgebit.platform.v1alpha.GetVexDownloadUrlResponse
	149, // 315: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentIssuesReportDownloadUrl:output_type -> edgebit.platform.v1alpha.GetComponentIssuesReportDownloadUrlResponse
	106, // 316: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentsWithMetrics:output_type -> edgebit.platform.v1alpha.ListComponentsWithMetricsResponse
	14,  // 317: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetServerSBOMRoutingPolicy:output_type -> edgebit.platform.v1alpha.GetServerSBOMRoutingPolicyResponse
	16,  // 318: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateServerSbomRoutingPolicy:output_type -> edgebit.platform.v1alpha.UpdateServerSbomRoutingPolicyResponse
	19,  // 319: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetProjectIssueSLAPolicy:output_type -> edgebit.platform.v1alpha.SetProjectIssueSLAPolicyResponse
	21,  // 320: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProjectIssueSLAPolicy:output_type -> edgebit.platform.v1alpha.GetProjectIssueSLAPolicyResponse
	164, // 321: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteGitHubAppInstall:output_type -> edgebit.platform.v1alpha.CompleteGitHubAppInstallResponse
	130, // 322: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetProjectIssueTrend:output_type -> edgebit.platform.v1alpha.GetProjectIssueTrendResponse
	169, // 323: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListGitHubIntegrations:output_type -> edgebit.platform.v1alpha.ListGitHubIntegrationsResponse
	156, // 324: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetGitHubIntegration:output_type -> edgebit.platform.v1alpha.GetGitHubIntegrationResponse
	158, // 325: edgebit.platform.v1alpha.EdgeBitPublicAPIService.HasGitHubIntegration:output_type -> edgebit.platform.v1alpha.HasGitHubIntegrationResponse
	160, // 326: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateGitHubIntegration:output_type -> edgebit.platform.v1alpha.UpdateGitHubIntegrationResponse
	162, // 327: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListGitHubRepositories:output_type -> edgebit.platform.v1alpha.ListGitHubRepositoriesResponse
	166, // 328: edgebit.platform.v1alpha.EdgeBitPublicAPIService.AnalyzeGitHubRepo:output_type -> edgebit.platform.v1alpha.AnalyzeGitHubRepoResponse
	172, // 329: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ImportGitHubRepos:output_type -> edgebit.platform.v1alpha.ImportGitHubReposResponse
	174, // 330: edgebit.platform.v1alpha.EdgeBitPublicAPIService.IgnoreIssue:output_type -> edgebit.platform.v1alpha.IgnoreIssueResponse
	195, // 331: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListIntegrations:output_type -> edgebit.platform.v1alpha.ListIntegrationsResponse
	197, // 332: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginJiraInstall:output_type -> edgebit.platform.v1alpha.BeginJiraInstallResponse
	199, // 333: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteJiraInstall:output_type -> edgebit.platform.v1alpha.CompleteJiraInstallResponse
	204, // 334: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetJiraIntegration:output_type -> edgebit.platform.v1alpha.GetJiraIntegrationResponse
	206, // 335: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateJiraIntegration:output_type -> edgebit.platform.v1alpha.UpdateJiraIntegrationResponse
	213, // 336: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentIssueStateChanges:output_type -> edgebit.platform.v1alpha.ListComponentIssueStateChangesResponse
	215, // 337: edgebit.platform.v1alpha.EdgeBitPublicAPIService.LookupEPSSData:output_type -> edgebit.platform.v1alpha.LookupEPSSDataResponse
	217, // 338: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateOrgSummaryReport:output_type -> edgebit.platform.v1alpha.GenerateOrgSummaryReportResponse
	219, // 339: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateComponentIssuesReport:output_type -> edgebit.platform.v1alpha.GenerateComponentIssuesReportResponse
	227, // 340: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListEnabledFeatures:output_type -> edgebit.platform.v1alpha.ListEnabledFeaturesResponse
	179, // 341: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginVantaInstall:output_type -> edgebit.platform.v1alpha.BeginVantaInstallResponse
	181, // 342: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteVantaInstall:output_type -> edgebit.platform.v1alpha.CompleteVantaInstallResponse
	177, // 343: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetVantaIntegration:output_type -> edgebit.platform.v1alpha.GetVantaIntegrationResponse
	183, // 344: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateVantaIntegration:output_type -> edgebit.platform.v1alpha.UpdateVantaIntegrationResponse
	188, // 345: edgebit.platform.v1alpha.EdgeBitPublicAPIService.BeginSlackInstall:output_type -> edgebit.platform.v1alpha.BeginSlackInstallResponse
	190, // 346: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CompleteSlackInstall:output_type -> edgebit.platform.v1alpha.CompleteSlackInstallResponse
	186, // 347: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSlackIntegration:output_type -> edgebit.platform.v1alpha.GetSlackIntegrationResponse
	192, // 348: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateSlackIntegration:output_type -> edgebit.platform.v1alpha.UpdateSlackIntegrationResponse
	229, // 349: edgebit.platform.v1alpha.EdgeBitPublicAPIService.TriggerCodeAnalysis:output_type -> edgebit.platform.v1alpha.TriggerCodeAnalysisResponse
	270, // [270:350] is the sub-list for method output_type
	190, // [190:270] is the sub-list for method input_type
	190, // [190:190] is the sub-list for extension type_name
	190, // [190:190] is the sub-list for extension extendee
	0,   // [0:190] is the sub-list for field type_name
}

func init() { file_edgebit_platform_v1alpha_platform_proto_init() }
func file_edgebit_platform_v1alpha_platform_proto_init() {
	if File_edgebit_platform_v1alpha_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSBOMRoutingPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PolicyItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerSBOMRoutingPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerSBOMRoutingPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerSbomRoutingPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateServerSbomRoutingPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectIssueSLAPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectIssueSLAPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProjectIssueSLAPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectIssueSLAPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectIssueSLAPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentDeployTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentDeployTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDeployToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VulnReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsForMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsForMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewPackageVuln); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewOnboardingState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSBOMsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSBOMsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallationEvidence); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseExpr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LicenseClause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMInventoryPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMInventoryVuln); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugWorkloadPackageInUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugWorkloadPackageInUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCSImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationChain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationChainItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationChainItemTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentDefaultTagSBOMAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentDefaultTagSBOMAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMAttestationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMAttestationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsWithMetricsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsWithMetricsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentWithMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagsOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagsOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssuesByStateForProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssuesByStateForProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VulnIssueDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentIssue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectIssueTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectIssueTrendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssueTrendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssueTrendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentIssueTrendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentEnrichedSBOMSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCIBotCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCIBotCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadItemsForMachineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadItemsForMachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMDownloadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMDownloadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVexDownloadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVexDownloadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssuesReportDownloadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentIssuesReportDownloadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphRelationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCSRepository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitHubIntegrationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGitHubIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGitHubIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasGitHubIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasGitHubIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGitHubIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGitHubIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitHubRepositoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitHubRepositoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteGitHubAppInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteGitHubAppInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeGitHubRepoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyzeGitHubRepoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitHubIntegrationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitHubIntegrationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListGitHubIntegrationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GitHubRepoToImport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGitHubReposRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGitHubReposResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgnoreIssueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IgnoreIssueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VantaIntegrationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVantaIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVantaIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginVantaInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[169].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginVantaInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[170].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteVantaInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[171].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteVantaInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[172].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVantaIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[173].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVantaIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[174].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackIntegrationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[175].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlackIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[176].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSlackIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[177].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginSlackInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[178].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginSlackInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[179].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSlackInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[180].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteSlackInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[181].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlackIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[182].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlackIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[183].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[184].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegrationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[185].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIntegrationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[186].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginJiraInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[187].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginJiraInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[188].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteJiraInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[189].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteJiraInstallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[190].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JiraIssueType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[191].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JiraProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[192].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JiraIntegrationSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[193].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJiraIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[194].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJiraIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[195].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJiraIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[196].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateJiraIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[197].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[198].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectAPIKeyRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[199].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutomatedProcessRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[200].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[201].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentIssueStateChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[202].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssueStateChangesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[203].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentIssueStateChangesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[204].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupEPSSDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[205].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LookupEPSSDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[206].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrgSummaryReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[207].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateOrgSummaryReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[208].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateComponentIssuesReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[209].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateComponentIssuesReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[210].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateComponentIssuesReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[211].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EPSSItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[212].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMUploadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[213].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMUploadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[214].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUploadedMetadataSBOM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[215].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserUploadedSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[216].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledFeaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[217].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledFeaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[218].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerCodeAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[219].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerCodeAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[224].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugWorkloadPackageInUseResponse_InUseDetectionLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*Image_Generic)(nil),
		(*Image_Docker)(nil),
		(*Image_Ami)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[60].OneofWrappers = []interface{}{
		(*UploadSBOMRequest_Header)(nil),
		(*UploadSBOMRequest_Data)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[66].OneofWrappers = []interface{}{}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[80].OneofWrappers = []interface{}{
		(*VCSImport_Github)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[97].OneofWrappers = []interface{}{}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[118].OneofWrappers = []interface{}{
		(*ComponentIssue_VulnDetails)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[133].OneofWrappers = []interface{}{}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[200].OneofWrappers = []interface{}{
		(*Actor_UserRef)(nil),
		(*Actor_ProjectApiKeyRef)(nil),
		(*Actor_AutomatedProcessRef)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[201].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edgebit_platform_v1alpha_platform_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   235,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_edgebit_platform_v1alpha_platform_proto_goTypes,
		DependencyIndexes: file_edgebit_platform_v1alpha_platform_proto_depIdxs,
		EnumInfos:         file_edgebit_platform_v1alpha_platform_proto_enumTypes,
		MessageInfos:      file_edgebit_platform_v1alpha_platform_proto_msgTypes,
	}.Build()
	File_edgebit_platform_v1alpha_platform_proto = out.File
	file_edgebit_platform_v1alpha_platform_proto_rawDesc = nil
	file_edgebit_platform_v1alpha_platform_proto_goTypes = nil
	file_edgebit_platform_v1alpha_platform_proto_depIdxs = nil
}
