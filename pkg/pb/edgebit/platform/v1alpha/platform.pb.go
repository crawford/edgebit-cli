// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: edgebit/platform/v1alpha/platform.proto

package platformv1alpha

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VulnSeverity int32

const (
	VulnSeverity_VULN_SEVERITY_UNSPECIFIED VulnSeverity = 0
	VulnSeverity_VULN_SEVERITY_NEGLIGIBLE  VulnSeverity = 1
	VulnSeverity_VULN_SEVERITY_LOW         VulnSeverity = 2
	VulnSeverity_VULN_SEVERITY_MEDIUM      VulnSeverity = 3
	VulnSeverity_VULN_SEVERITY_HIGH        VulnSeverity = 4
	VulnSeverity_VULN_SEVERITY_CRITICAL    VulnSeverity = 5
)

// Enum value maps for VulnSeverity.
var (
	VulnSeverity_name = map[int32]string{
		0: "VULN_SEVERITY_UNSPECIFIED",
		1: "VULN_SEVERITY_NEGLIGIBLE",
		2: "VULN_SEVERITY_LOW",
		3: "VULN_SEVERITY_MEDIUM",
		4: "VULN_SEVERITY_HIGH",
		5: "VULN_SEVERITY_CRITICAL",
	}
	VulnSeverity_value = map[string]int32{
		"VULN_SEVERITY_UNSPECIFIED": 0,
		"VULN_SEVERITY_NEGLIGIBLE":  1,
		"VULN_SEVERITY_LOW":         2,
		"VULN_SEVERITY_MEDIUM":      3,
		"VULN_SEVERITY_HIGH":        4,
		"VULN_SEVERITY_CRITICAL":    5,
	}
)

func (x VulnSeverity) Enum() *VulnSeverity {
	p := new(VulnSeverity)
	*p = x
	return p
}

func (x VulnSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[0].Descriptor()
}

func (VulnSeverity) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[0]
}

func (x VulnSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnSeverity.Descriptor instead.
func (VulnSeverity) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

type VulnFixState int32

const (
	VulnFixState_VULN_FIX_STATE_UNSPECIFIED VulnFixState = 0
	VulnFixState_VULN_FIX_STATE_NOTFIXED    VulnFixState = 1
	VulnFixState_VULN_FIX_STATE_WONTFIX     VulnFixState = 2
	VulnFixState_VULN_FIX_STATE_FIXED       VulnFixState = 3
)

// Enum value maps for VulnFixState.
var (
	VulnFixState_name = map[int32]string{
		0: "VULN_FIX_STATE_UNSPECIFIED",
		1: "VULN_FIX_STATE_NOTFIXED",
		2: "VULN_FIX_STATE_WONTFIX",
		3: "VULN_FIX_STATE_FIXED",
	}
	VulnFixState_value = map[string]int32{
		"VULN_FIX_STATE_UNSPECIFIED": 0,
		"VULN_FIX_STATE_NOTFIXED":    1,
		"VULN_FIX_STATE_WONTFIX":     2,
		"VULN_FIX_STATE_FIXED":       3,
	}
)

func (x VulnFixState) Enum() *VulnFixState {
	p := new(VulnFixState)
	*p = x
	return p
}

func (x VulnFixState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VulnFixState) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[1].Descriptor()
}

func (VulnFixState) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[1]
}

func (x VulnFixState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VulnFixState.Descriptor instead.
func (VulnFixState) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

type SBOMFormat int32

const (
	SBOMFormat_SBOM_FORMAT_UNSPECIFIED    SBOMFormat = 0
	SBOMFormat_SBOM_FORMAT_SYFT           SBOMFormat = 1
	SBOMFormat_SBOM_FORMAT_SPDX_JSON      SBOMFormat = 2
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_JSON SBOMFormat = 3
	SBOMFormat_SBOM_FORMAT_CYCLONEDX_XML  SBOMFormat = 4
)

// Enum value maps for SBOMFormat.
var (
	SBOMFormat_name = map[int32]string{
		0: "SBOM_FORMAT_UNSPECIFIED",
		1: "SBOM_FORMAT_SYFT",
		2: "SBOM_FORMAT_SPDX_JSON",
		3: "SBOM_FORMAT_CYCLONEDX_JSON",
		4: "SBOM_FORMAT_CYCLONEDX_XML",
	}
	SBOMFormat_value = map[string]int32{
		"SBOM_FORMAT_UNSPECIFIED":    0,
		"SBOM_FORMAT_SYFT":           1,
		"SBOM_FORMAT_SPDX_JSON":      2,
		"SBOM_FORMAT_CYCLONEDX_JSON": 3,
		"SBOM_FORMAT_CYCLONEDX_XML":  4,
	}
)

func (x SBOMFormat) Enum() *SBOMFormat {
	p := new(SBOMFormat)
	*p = x
	return p
}

func (x SBOMFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SBOMFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[2].Descriptor()
}

func (SBOMFormat) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[2]
}

func (x SBOMFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SBOMFormat.Descriptor instead.
func (SBOMFormat) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

type ComponentType int32

const (
	ComponentType_COMPONENT_TYPE_UNSPECIFIED     ComponentType = 0
	ComponentType_COMPONENT_TYPE_SBOM_COLLECTION ComponentType = 1
)

// Enum value maps for ComponentType.
var (
	ComponentType_name = map[int32]string{
		0: "COMPONENT_TYPE_UNSPECIFIED",
		1: "COMPONENT_TYPE_SBOM_COLLECTION",
	}
	ComponentType_value = map[string]int32{
		"COMPONENT_TYPE_UNSPECIFIED":     0,
		"COMPONENT_TYPE_SBOM_COLLECTION": 1,
	}
)

func (x ComponentType) Enum() *ComponentType {
	p := new(ComponentType)
	*p = x
	return p
}

func (x ComponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ComponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[3].Descriptor()
}

func (ComponentType) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[3]
}

func (x ComponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ComponentType.Descriptor instead.
func (ComponentType) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{3}
}

type CIBotCommentFlavor int32

const (
	CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_UNSPECIFIED CIBotCommentFlavor = 0
	CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_GITHUB      CIBotCommentFlavor = 1
)

// Enum value maps for CIBotCommentFlavor.
var (
	CIBotCommentFlavor_name = map[int32]string{
		0: "CI_BOT_COMMENT_FLAVOR_UNSPECIFIED",
		1: "CI_BOT_COMMENT_FLAVOR_GITHUB",
	}
	CIBotCommentFlavor_value = map[string]int32{
		"CI_BOT_COMMENT_FLAVOR_UNSPECIFIED": 0,
		"CI_BOT_COMMENT_FLAVOR_GITHUB":      1,
	}
)

func (x CIBotCommentFlavor) Enum() *CIBotCommentFlavor {
	p := new(CIBotCommentFlavor)
	*p = x
	return p
}

func (x CIBotCommentFlavor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CIBotCommentFlavor) Descriptor() protoreflect.EnumDescriptor {
	return file_edgebit_platform_v1alpha_platform_proto_enumTypes[4].Descriptor()
}

func (CIBotCommentFlavor) Type() protoreflect.EnumType {
	return &file_edgebit_platform_v1alpha_platform_proto_enumTypes[4]
}

func (x CIBotCommentFlavor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CIBotCommentFlavor.Descriptor instead.
func (CIBotCommentFlavor) EnumDescriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{4}
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{1}
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{2}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type GenerateAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GenerateAgentDeployTokenRequest) Reset() {
	*x = GenerateAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenRequest) ProtoMessage() {}

func (x *GenerateAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{3}
}

func (x *GenerateAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GenerateAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeployToken string `protobuf:"bytes,1,opt,name=deploy_token,json=deployToken,proto3" json:"deploy_token,omitempty"`
}

func (x *GenerateAgentDeployTokenResponse) Reset() {
	*x = GenerateAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateAgentDeployTokenResponse) ProtoMessage() {}

func (x *GenerateAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*GenerateAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{4}
}

func (x *GenerateAgentDeployTokenResponse) GetDeployToken() string {
	if x != nil {
		return x.DeployToken
	}
	return ""
}

type CreateAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateAgentDeployTokenRequest) Reset() {
	*x = CreateAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDeployTokenRequest) ProtoMessage() {}

func (x *CreateAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{5}
}

func (x *CreateAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateAgentDeployTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateAgentDeployTokenResponse) Reset() {
	*x = CreateAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAgentDeployTokenResponse) ProtoMessage() {}

func (x *CreateAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{6}
}

func (x *CreateAgentDeployTokenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateAgentDeployTokenResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAgentDeployTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListAgentDeployTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListAgentDeployTokensRequest) Reset() {
	*x = ListAgentDeployTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDeployTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDeployTokensRequest) ProtoMessage() {}

func (x *ListAgentDeployTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDeployTokensRequest.ProtoReflect.Descriptor instead.
func (*ListAgentDeployTokensRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{7}
}

func (x *ListAgentDeployTokensRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListAgentDeployTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*AgentDeployToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ListAgentDeployTokensResponse) Reset() {
	*x = ListAgentDeployTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAgentDeployTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentDeployTokensResponse) ProtoMessage() {}

func (x *ListAgentDeployTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentDeployTokensResponse.ProtoReflect.Descriptor instead.
func (*ListAgentDeployTokensResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{8}
}

func (x *ListAgentDeployTokensResponse) GetTokens() []*AgentDeployToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type AgentDeployToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
}

func (x *AgentDeployToken) Reset() {
	*x = AgentDeployToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentDeployToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentDeployToken) ProtoMessage() {}

func (x *AgentDeployToken) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentDeployToken.ProtoReflect.Descriptor instead.
func (*AgentDeployToken) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{9}
}

func (x *AgentDeployToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AgentDeployToken) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *AgentDeployToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AgentDeployToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgentDeployToken) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type DeleteAgentDeployTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	TokenId   string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *DeleteAgentDeployTokenRequest) Reset() {
	*x = DeleteAgentDeployTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentDeployTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentDeployTokenRequest) ProtoMessage() {}

func (x *DeleteAgentDeployTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentDeployTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteAgentDeployTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteAgentDeployTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteAgentDeployTokenRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type DeleteAgentDeployTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAgentDeployTokenResponse) Reset() {
	*x = DeleteAgentDeployTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAgentDeployTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAgentDeployTokenResponse) ProtoMessage() {}

func (x *DeleteAgentDeployTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAgentDeployTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteAgentDeployTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{11}
}

type ListMachinesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListMachinesRequest) Reset() {
	*x = ListMachinesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesRequest) ProtoMessage() {}

func (x *ListMachinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesRequest.ProtoReflect.Descriptor instead.
func (*ListMachinesRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{12}
}

func (x *ListMachinesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListMachinesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machines []*Machine `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty"`
}

func (x *ListMachinesResponse) Reset() {
	*x = ListMachinesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMachinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMachinesResponse) ProtoMessage() {}

func (x *ListMachinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMachinesResponse.ProtoReflect.Descriptor instead.
func (*ListMachinesResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{13}
}

func (x *ListMachinesResponse) GetMachines() []*Machine {
	if x != nil {
		return x.Machines
	}
	return nil
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Hostname                  string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	PolicyViolations          int32                  `protobuf:"varint,4,opt,name=policy_violations,json=policyViolations,proto3" json:"policy_violations,omitempty"`
	Workloads                 int32                  `protobuf:"varint,5,opt,name=workloads,proto3" json:"workloads,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	OperatingSystem           string                 `protobuf:"bytes,8,opt,name=operating_system,json=operatingSystem,proto3" json:"operating_system,omitempty"`
	LastUpdated               *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	AgentAlive                bool                   `protobuf:"varint,10,opt,name=agent_alive,json=agentAlive,proto3" json:"agent_alive,omitempty"`
	Labels                    map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{14}
}

func (x *Machine) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Machine) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Machine) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Machine) GetPolicyViolations() int32 {
	if x != nil {
		return x.PolicyViolations
	}
	return 0
}

func (x *Machine) GetWorkloads() int32 {
	if x != nil {
		return x.Workloads
	}
	return 0
}

func (x *Machine) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Machine) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Machine) GetOperatingSystem() string {
	if x != nil {
		return x.OperatingSystem
	}
	return ""
}

func (x *Machine) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

func (x *Machine) GetAgentAlive() bool {
	if x != nil {
		return x.AgentAlive
	}
	return false
}

func (x *Machine) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type Package struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	InUse                     bool     `protobuf:"varint,4,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	TotalVulnerabilities      int32    `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32    `protobuf:"varint,6,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	WorkloadId                string   `protobuf:"bytes,7,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
	SourceId                  string   `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	VulnerabilityIds          []string `protobuf:"bytes,9,rep,name=vulnerability_ids,json=vulnerabilityIds,proto3" json:"vulnerability_ids,omitempty"`
	Version                   string   `protobuf:"bytes,10,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Package) Reset() {
	*x = Package{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Package) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Package) ProtoMessage() {}

func (x *Package) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Package.ProtoReflect.Descriptor instead.
func (*Package) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{15}
}

func (x *Package) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Package) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Package) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Package) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *Package) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Package) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Package) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

func (x *Package) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Package) GetVulnerabilityIds() []string {
	if x != nil {
		return x.VulnerabilityIds
	}
	return nil
}

func (x *Package) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename   string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	InUse      bool   `protobuf:"varint,3,opt,name=in_use,json=inUse,proto3" json:"in_use,omitempty"`
	Executable bool   `protobuf:"varint,4,opt,name=executable,proto3" json:"executable,omitempty"`
	PackageId  string `protobuf:"bytes,5,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	SourceId   string `protobuf:"bytes,6,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{16}
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *File) GetInUse() bool {
	if x != nil {
		return x.InUse
	}
	return false
}

func (x *File) GetExecutable() bool {
	if x != nil {
		return x.Executable
	}
	return false
}

func (x *File) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *File) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

type VulnReference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *VulnReference) Reset() {
	*x = VulnReference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VulnReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VulnReference) ProtoMessage() {}

func (x *VulnReference) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VulnReference.ProtoReflect.Descriptor instead.
func (*VulnReference) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{17}
}

func (x *VulnReference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string           `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Severity    VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References  []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState    VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
}

func (x *Vulnerability) Reset() {
	*x = Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vulnerability) ProtoMessage() {}

func (x *Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vulnerability.ProtoReflect.Descriptor instead.
func (*Vulnerability) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{18}
}

func (x *Vulnerability) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vulnerability) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Vulnerability) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *Vulnerability) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *Vulnerability) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

type Workload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId                 string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                      string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Trust                     string                 `protobuf:"bytes,5,opt,name=trust,proto3" json:"trust,omitempty"`
	TotalVulnerabilities      int32                  `protobuf:"varint,6,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                  `protobuf:"varint,7,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	SourceId                  string                 `protobuf:"bytes,8,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	ImageName                 string                 `protobuf:"bytes,9,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	StartedAt                 *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt                   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
}

func (x *Workload) Reset() {
	*x = Workload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Workload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Workload) ProtoMessage() {}

func (x *Workload) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Workload.ProtoReflect.Descriptor instead.
func (*Workload) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{19}
}

func (x *Workload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Workload) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Workload) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Workload) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Workload) GetTrust() string {
	if x != nil {
		return x.Trust
	}
	return ""
}

func (x *Workload) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *Workload) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *Workload) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *Workload) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *Workload) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Workload) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

type GetMachineInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	MachineId string `protobuf:"bytes,2,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetMachineInventoryRequest) Reset() {
	*x = GetMachineInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryRequest) ProtoMessage() {}

func (x *GetMachineInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{20}
}

func (x *GetMachineInventoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetMachineInventoryRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type GetMachineInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine         *Machine         `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
	Packages        []*Package       `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty"`
	FilesInUse      []*File          `protobuf:"bytes,3,rep,name=files_in_use,json=filesInUse,proto3" json:"files_in_use,omitempty"`
	Workloads       []*Workload      `protobuf:"bytes,4,rep,name=workloads,proto3" json:"workloads,omitempty"`
	Vulnerabilities []*Vulnerability `protobuf:"bytes,5,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *GetMachineInventoryResponse) Reset() {
	*x = GetMachineInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMachineInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineInventoryResponse) ProtoMessage() {}

func (x *GetMachineInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetMachineInventoryResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{21}
}

func (x *GetMachineInventoryResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetPackages() []*Package {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetFilesInUse() []*File {
	if x != nil {
		return x.FilesInUse
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetWorkloads() []*Workload {
	if x != nil {
		return x.Workloads
	}
	return nil
}

func (x *GetMachineInventoryResponse) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type OverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *OverviewRequest) Reset() {
	*x = OverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewRequest) ProtoMessage() {}

func (x *OverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewRequest.ProtoReflect.Descriptor instead.
func (*OverviewRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{22}
}

func (x *OverviewRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type OverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages                  []*OverviewPackage       `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	ActiveWorkloads           int32                    `protobuf:"varint,2,opt,name=active_workloads,json=activeWorkloads,proto3" json:"active_workloads,omitempty"`
	UniquePackages            int32                    `protobuf:"varint,3,opt,name=unique_packages,json=uniquePackages,proto3" json:"unique_packages,omitempty"`
	ActivePackages            int32                    `protobuf:"varint,4,opt,name=active_packages,json=activePackages,proto3" json:"active_packages,omitempty"`
	TotalVulnerabilities      int32                    `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	ActionableVulnerabilities int32                    `protobuf:"varint,6,opt,name=actionable_vulnerabilities,json=actionableVulnerabilities,proto3" json:"actionable_vulnerabilities,omitempty"`
	OnboardingState           *OverviewOnboardingState `protobuf:"bytes,7,opt,name=onboarding_state,json=onboardingState,proto3" json:"onboarding_state,omitempty"`
}

func (x *OverviewResponse) Reset() {
	*x = OverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewResponse) ProtoMessage() {}

func (x *OverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewResponse.ProtoReflect.Descriptor instead.
func (*OverviewResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{23}
}

func (x *OverviewResponse) GetPackages() []*OverviewPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *OverviewResponse) GetActiveWorkloads() int32 {
	if x != nil {
		return x.ActiveWorkloads
	}
	return 0
}

func (x *OverviewResponse) GetUniquePackages() int32 {
	if x != nil {
		return x.UniquePackages
	}
	return 0
}

func (x *OverviewResponse) GetActivePackages() int32 {
	if x != nil {
		return x.ActivePackages
	}
	return 0
}

func (x *OverviewResponse) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *OverviewResponse) GetActionableVulnerabilities() int32 {
	if x != nil {
		return x.ActionableVulnerabilities
	}
	return 0
}

func (x *OverviewResponse) GetOnboardingState() *OverviewOnboardingState {
	if x != nil {
		return x.OnboardingState
	}
	return nil
}

type OverviewPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId      string                 `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	PackageName    string                 `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageVersion string                 `protobuf:"bytes,3,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	SeenTotal      int32                  `protobuf:"varint,4,opt,name=seen_total,json=seenTotal,proto3" json:"seen_total,omitempty"`
	SeenActive     int32                  `protobuf:"varint,5,opt,name=seen_active,json=seenActive,proto3" json:"seen_active,omitempty"`
	PackageType    string                 `protobuf:"bytes,6,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	Vulns          []*OverviewPackageVuln `protobuf:"bytes,7,rep,name=vulns,proto3" json:"vulns,omitempty"`
}

func (x *OverviewPackage) Reset() {
	*x = OverviewPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewPackage) ProtoMessage() {}

func (x *OverviewPackage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewPackage.ProtoReflect.Descriptor instead.
func (*OverviewPackage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{24}
}

func (x *OverviewPackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *OverviewPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *OverviewPackage) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *OverviewPackage) GetSeenTotal() int32 {
	if x != nil {
		return x.SeenTotal
	}
	return 0
}

func (x *OverviewPackage) GetSeenActive() int32 {
	if x != nil {
		return x.SeenActive
	}
	return 0
}

func (x *OverviewPackage) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *OverviewPackage) GetVulns() []*OverviewPackageVuln {
	if x != nil {
		return x.Vulns
	}
	return nil
}

type OverviewPackageVuln struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VulnerabilityId string           `protobuf:"bytes,1,opt,name=vulnerability_id,json=vulnerabilityId,proto3" json:"vulnerability_id,omitempty"`
	Summary         string           `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Severity        VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References      []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState        VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions     []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *OverviewPackageVuln) Reset() {
	*x = OverviewPackageVuln{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewPackageVuln) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewPackageVuln) ProtoMessage() {}

func (x *OverviewPackageVuln) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewPackageVuln.ProtoReflect.Descriptor instead.
func (*OverviewPackageVuln) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{25}
}

func (x *OverviewPackageVuln) GetVulnerabilityId() string {
	if x != nil {
		return x.VulnerabilityId
	}
	return ""
}

func (x *OverviewPackageVuln) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *OverviewPackageVuln) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *OverviewPackageVuln) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *OverviewPackageVuln) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *OverviewPackageVuln) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type OverviewOnboardingState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentDeployed      bool `protobuf:"varint,1,opt,name=agent_deployed,json=agentDeployed,proto3" json:"agent_deployed,omitempty"`
	ContainersDetected bool `protobuf:"varint,2,opt,name=containers_detected,json=containersDetected,proto3" json:"containers_detected,omitempty"`
	SbomUploaded       bool `protobuf:"varint,3,opt,name=sbom_uploaded,json=sbomUploaded,proto3" json:"sbom_uploaded,omitempty"`
}

func (x *OverviewOnboardingState) Reset() {
	*x = OverviewOnboardingState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverviewOnboardingState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverviewOnboardingState) ProtoMessage() {}

func (x *OverviewOnboardingState) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverviewOnboardingState.ProtoReflect.Descriptor instead.
func (*OverviewOnboardingState) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{26}
}

func (x *OverviewOnboardingState) GetAgentDeployed() bool {
	if x != nil {
		return x.AgentDeployed
	}
	return false
}

func (x *OverviewOnboardingState) GetContainersDetected() bool {
	if x != nil {
		return x.ContainersDetected
	}
	return false
}

func (x *OverviewOnboardingState) GetSbomUploaded() bool {
	if x != nil {
		return x.SbomUploaded
	}
	return false
}

type CreateOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateOrgAccessTokenRequest) Reset() {
	*x = CreateOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenRequest) ProtoMessage() {}

func (x *CreateOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{27}
}

func (x *CreateOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateOrgAccessTokenRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Token       string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *CreateOrgAccessTokenResponse) Reset() {
	*x = CreateOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgAccessTokenResponse) ProtoMessage() {}

func (x *CreateOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*CreateOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{28}
}

func (x *CreateOrgAccessTokenResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateOrgAccessTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ListOrgAccessTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListOrgAccessTokensRequest) Reset() {
	*x = ListOrgAccessTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensRequest) ProtoMessage() {}

func (x *ListOrgAccessTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensRequest.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{29}
}

func (x *ListOrgAccessTokensRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListOrgAccessTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*OrgAccessToken `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *ListOrgAccessTokensResponse) Reset() {
	*x = ListOrgAccessTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrgAccessTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrgAccessTokensResponse) ProtoMessage() {}

func (x *ListOrgAccessTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrgAccessTokensResponse.ProtoReflect.Descriptor instead.
func (*ListOrgAccessTokensResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{30}
}

func (x *ListOrgAccessTokensResponse) GetTokens() []*OrgAccessToken {
	if x != nil {
		return x.Tokens
	}
	return nil
}

type OrgAccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId   string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastUsed    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_used,json=lastUsed,proto3" json:"last_used,omitempty"`
}

func (x *OrgAccessToken) Reset() {
	*x = OrgAccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgAccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgAccessToken) ProtoMessage() {}

func (x *OrgAccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgAccessToken.ProtoReflect.Descriptor instead.
func (*OrgAccessToken) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{31}
}

func (x *OrgAccessToken) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrgAccessToken) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *OrgAccessToken) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OrgAccessToken) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OrgAccessToken) GetLastUsed() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsed
	}
	return nil
}

type DeleteOrgAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteOrgAccessTokenRequest) Reset() {
	*x = DeleteOrgAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenRequest) ProtoMessage() {}

func (x *DeleteOrgAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteOrgAccessTokenRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteOrgAccessTokenRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteOrgAccessTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteOrgAccessTokenResponse) Reset() {
	*x = DeleteOrgAccessTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrgAccessTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrgAccessTokenResponse) ProtoMessage() {}

func (x *DeleteOrgAccessTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrgAccessTokenResponse.ProtoReflect.Descriptor instead.
func (*DeleteOrgAccessTokenResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{33}
}

// An image with no further details. This primarily happens when an SBOM tool
// (e.g. syft) is ran on the workload (e.g. after a host boots)
type GenericImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenericImage) Reset() {
	*x = GenericImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericImage) ProtoMessage() {}

func (x *GenericImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericImage.ProtoReflect.Descriptor instead.
func (*GenericImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{34}
}

// Docker image
type DockerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Potentially full tag in registry/user/name:tag format.
	// The full format does not need to be used. The same defaults
	// that "docker pull" assumes will work.
	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *DockerImage) Reset() {
	*x = DockerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DockerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerImage) ProtoMessage() {}

func (x *DockerImage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerImage.ProtoReflect.Descriptor instead.
func (*DockerImage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{35}
}

func (x *DockerImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AMI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Tags []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AMI) Reset() {
	*x = AMI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AMI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AMI) ProtoMessage() {}

func (x *AMI) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AMI.ProtoReflect.Descriptor instead.
func (*AMI) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{36}
}

func (x *AMI) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AMI) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// type: Docker | OCI | AMI | ...
	//
	// Types that are assignable to Kind:
	//
	//	*Image_Generic
	//	*Image_Docker
	//	*Image_Ami
	Kind isImage_Kind `protobuf_oneof:"kind"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{37}
}

func (m *Image) GetKind() isImage_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Image) GetGeneric() *GenericImage {
	if x, ok := x.GetKind().(*Image_Generic); ok {
		return x.Generic
	}
	return nil
}

func (x *Image) GetDocker() *DockerImage {
	if x, ok := x.GetKind().(*Image_Docker); ok {
		return x.Docker
	}
	return nil
}

func (x *Image) GetAmi() *AMI {
	if x, ok := x.GetKind().(*Image_Ami); ok {
		return x.Ami
	}
	return nil
}

type isImage_Kind interface {
	isImage_Kind()
}

type Image_Generic struct {
	Generic *GenericImage `protobuf:"bytes,1,opt,name=generic,proto3,oneof"`
}

type Image_Docker struct {
	Docker *DockerImage `protobuf:"bytes,2,opt,name=docker,proto3,oneof"`
}

type Image_Ami struct {
	Ami *AMI `protobuf:"bytes,3,opt,name=ami,proto3,oneof"`
}

func (*Image_Generic) isImage_Kind() {}

func (*Image_Docker) isImage_Kind() {}

func (*Image_Ami) isImage_Kind() {}

type UploadSBOMHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId      string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat        `protobuf:"varint,2,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string            `protobuf:"bytes,4,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image            `protobuf:"bytes,5,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string            `protobuf:"bytes,6,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string            `protobuf:"bytes,7,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	ComponentName  string            `protobuf:"bytes,8,opt,name=component_name,json=componentName,proto3" json:"component_name,omitempty"`
	Tags           []string          `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *UploadSBOMHeader) Reset() {
	*x = UploadSBOMHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMHeader) ProtoMessage() {}

func (x *UploadSBOMHeader) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMHeader.ProtoReflect.Descriptor instead.
func (*UploadSBOMHeader) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{38}
}

func (x *UploadSBOMHeader) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UploadSBOMHeader) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *UploadSBOMHeader) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UploadSBOMHeader) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *UploadSBOMHeader) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *UploadSBOMHeader) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *UploadSBOMHeader) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *UploadSBOMHeader) GetComponentName() string {
	if x != nil {
		return x.ComponentName
	}
	return ""
}

func (x *UploadSBOMHeader) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UploadSBOMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//
	//	*UploadSBOMRequest_Header
	//	*UploadSBOMRequest_Data
	Kind isUploadSBOMRequest_Kind `protobuf_oneof:"kind"`
}

func (x *UploadSBOMRequest) Reset() {
	*x = UploadSBOMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMRequest) ProtoMessage() {}

func (x *UploadSBOMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMRequest.ProtoReflect.Descriptor instead.
func (*UploadSBOMRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{39}
}

func (m *UploadSBOMRequest) GetKind() isUploadSBOMRequest_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *UploadSBOMRequest) GetHeader() *UploadSBOMHeader {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Header); ok {
		return x.Header
	}
	return nil
}

func (x *UploadSBOMRequest) GetData() []byte {
	if x, ok := x.GetKind().(*UploadSBOMRequest_Data); ok {
		return x.Data
	}
	return nil
}

type isUploadSBOMRequest_Kind interface {
	isUploadSBOMRequest_Kind()
}

type UploadSBOMRequest_Header struct {
	Header *UploadSBOMHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type UploadSBOMRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

func (*UploadSBOMRequest_Header) isUploadSBOMRequest_Kind() {}

func (*UploadSBOMRequest_Data) isUploadSBOMRequest_Kind() {}

type UploadSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UploadSBOMResponse) Reset() {
	*x = UploadSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadSBOMResponse) ProtoMessage() {}

func (x *UploadSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadSBOMResponse.ProtoReflect.Descriptor instead.
func (*UploadSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{40}
}

func (x *UploadSBOMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type SBOMListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat             `protobuf:"varint,3,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string                 `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string                 `protobuf:"bytes,7,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string                 `protobuf:"bytes,8,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MachineId      string                 `protobuf:"bytes,10,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	ComponentId    string                 `protobuf:"bytes,11,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *SBOMListItem) Reset() {
	*x = SBOMListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMListItem) ProtoMessage() {}

func (x *SBOMListItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMListItem.ProtoReflect.Descriptor instead.
func (*SBOMListItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{41}
}

func (x *SBOMListItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SBOMListItem) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SBOMListItem) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *SBOMListItem) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *SBOMListItem) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *SBOMListItem) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SBOMListItem) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *SBOMListItem) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *SBOMListItem) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SBOMListItem) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *SBOMListItem) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type ListSBOMsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *ListSBOMsRequest) Reset() {
	*x = ListSBOMsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSBOMsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSBOMsRequest) ProtoMessage() {}

func (x *ListSBOMsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSBOMsRequest.ProtoReflect.Descriptor instead.
func (*ListSBOMsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{42}
}

func (x *ListSBOMsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListSBOMsRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type ListSBOMsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SBOMListItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ListSBOMsResponse) Reset() {
	*x = ListSBOMsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSBOMsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSBOMsResponse) ProtoMessage() {}

func (x *ListSBOMsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSBOMsResponse.ProtoReflect.Descriptor instead.
func (*ListSBOMsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{43}
}

func (x *ListSBOMsResponse) GetItems() []*SBOMListItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetSBOMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSBOMRequest) Reset() {
	*x = GetSBOMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMRequest) ProtoMessage() {}

func (x *GetSBOMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{44}
}

func (x *GetSBOMRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSBOMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId      string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Format         SBOMFormat             `protobuf:"varint,3,opt,name=format,proto3,enum=edgebit.platform.v1alpha.SBOMFormat" json:"format,omitempty"`
	Labels         map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ImageId        string                 `protobuf:"bytes,5,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
	Image          *Image                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SourceRepoUrl  string                 `protobuf:"bytes,7,opt,name=source_repo_url,json=sourceRepoUrl,proto3" json:"source_repo_url,omitempty"`
	SourceCommitId string                 `protobuf:"bytes,8,opt,name=source_commit_id,json=sourceCommitId,proto3" json:"source_commit_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	MachineId      string                 `protobuf:"bytes,10,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
}

func (x *GetSBOMResponse) Reset() {
	*x = GetSBOMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMResponse) ProtoMessage() {}

func (x *GetSBOMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{45}
}

func (x *GetSBOMResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetSBOMResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMResponse) GetFormat() SBOMFormat {
	if x != nil {
		return x.Format
	}
	return SBOMFormat_SBOM_FORMAT_UNSPECIFIED
}

func (x *GetSBOMResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetSBOMResponse) GetImageId() string {
	if x != nil {
		return x.ImageId
	}
	return ""
}

func (x *GetSBOMResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *GetSBOMResponse) GetSourceRepoUrl() string {
	if x != nil {
		return x.SourceRepoUrl
	}
	return ""
}

func (x *GetSBOMResponse) GetSourceCommitId() string {
	if x != nil {
		return x.SourceCommitId
	}
	return ""
}

func (x *GetSBOMResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetSBOMResponse) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

type GetSBOMInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSBOMInventoryRequest) Reset() {
	*x = GetSBOMInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMInventoryRequest) ProtoMessage() {}

func (x *GetSBOMInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMInventoryRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMInventoryRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{46}
}

func (x *GetSBOMInventoryRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMInventoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetSBOMInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packages      []*SBOMInventoryPackage `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty"`
	Relationships []*GraphRelationship    `protobuf:"bytes,2,rep,name=relationships,proto3" json:"relationships,omitempty"`
}

func (x *GetSBOMInventoryResponse) Reset() {
	*x = GetSBOMInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMInventoryResponse) ProtoMessage() {}

func (x *GetSBOMInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMInventoryResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMInventoryResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{47}
}

func (x *GetSBOMInventoryResponse) GetPackages() []*SBOMInventoryPackage {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *GetSBOMInventoryResponse) GetRelationships() []*GraphRelationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

type SBOMInventoryPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageId      string               `protobuf:"bytes,1,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	PackageName    string               `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	PackageType    string               `protobuf:"bytes,3,opt,name=package_type,json=packageType,proto3" json:"package_type,omitempty"`
	PackageVersion string               `protobuf:"bytes,4,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	Vulns          []*SBOMInventoryVuln `protobuf:"bytes,5,rep,name=vulns,proto3" json:"vulns,omitempty"`
}

func (x *SBOMInventoryPackage) Reset() {
	*x = SBOMInventoryPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMInventoryPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMInventoryPackage) ProtoMessage() {}

func (x *SBOMInventoryPackage) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMInventoryPackage.ProtoReflect.Descriptor instead.
func (*SBOMInventoryPackage) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{48}
}

func (x *SBOMInventoryPackage) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageType() string {
	if x != nil {
		return x.PackageType
	}
	return ""
}

func (x *SBOMInventoryPackage) GetPackageVersion() string {
	if x != nil {
		return x.PackageVersion
	}
	return ""
}

func (x *SBOMInventoryPackage) GetVulns() []*SBOMInventoryVuln {
	if x != nil {
		return x.Vulns
	}
	return nil
}

type SBOMInventoryVuln struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VulnerabilityId string           `protobuf:"bytes,1,opt,name=vulnerability_id,json=vulnerabilityId,proto3" json:"vulnerability_id,omitempty"`
	Summary         string           `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	Severity        VulnSeverity     `protobuf:"varint,3,opt,name=severity,proto3,enum=edgebit.platform.v1alpha.VulnSeverity" json:"severity,omitempty"`
	References      []*VulnReference `protobuf:"bytes,4,rep,name=references,proto3" json:"references,omitempty"`
	FixState        VulnFixState     `protobuf:"varint,5,opt,name=fix_state,json=fixState,proto3,enum=edgebit.platform.v1alpha.VulnFixState" json:"fix_state,omitempty"`
	FixVersions     []string         `protobuf:"bytes,6,rep,name=fix_versions,json=fixVersions,proto3" json:"fix_versions,omitempty"`
}

func (x *SBOMInventoryVuln) Reset() {
	*x = SBOMInventoryVuln{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SBOMInventoryVuln) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SBOMInventoryVuln) ProtoMessage() {}

func (x *SBOMInventoryVuln) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SBOMInventoryVuln.ProtoReflect.Descriptor instead.
func (*SBOMInventoryVuln) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{49}
}

func (x *SBOMInventoryVuln) GetVulnerabilityId() string {
	if x != nil {
		return x.VulnerabilityId
	}
	return ""
}

func (x *SBOMInventoryVuln) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *SBOMInventoryVuln) GetSeverity() VulnSeverity {
	if x != nil {
		return x.Severity
	}
	return VulnSeverity_VULN_SEVERITY_UNSPECIFIED
}

func (x *SBOMInventoryVuln) GetReferences() []*VulnReference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *SBOMInventoryVuln) GetFixState() VulnFixState {
	if x != nil {
		return x.FixState
	}
	return VulnFixState_VULN_FIX_STATE_UNSPECIFIED
}

func (x *SBOMInventoryVuln) GetFixVersions() []string {
	if x != nil {
		return x.FixVersions
	}
	return nil
}

type ListComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListComponentsRequest) Reset() {
	*x = ListComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsRequest) ProtoMessage() {}

func (x *ListComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{50}
}

func (x *ListComponentsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []*Component `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *ListComponentsResponse) Reset() {
	*x = ListComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentsResponse) ProtoMessage() {}

func (x *ListComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{51}
}

func (x *ListComponentsResponse) GetComponents() []*Component {
	if x != nil {
		return x.Components
	}
	return nil
}

type GetComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetComponentRequest) Reset() {
	*x = GetComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentRequest) ProtoMessage() {}

func (x *GetComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentRequest.ProtoReflect.Descriptor instead.
func (*GetComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{52}
}

func (x *GetComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *GetComponentResponse) Reset() {
	*x = GetComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentResponse) ProtoMessage() {}

func (x *GetComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentResponse.ProtoReflect.Descriptor instead.
func (*GetComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{53}
}

func (x *GetComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type CreateComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name             string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName      string            `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Type             ComponentType     `protobuf:"varint,4,opt,name=type,proto3,enum=edgebit.platform.v1alpha.ComponentType" json:"type,omitempty"`
	Labels           map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository string            `protobuf:"bytes,6,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector  string            `protobuf:"bytes,7,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName   string            `protobuf:"bytes,8,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
}

func (x *CreateComponentRequest) Reset() {
	*x = CreateComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComponentRequest) ProtoMessage() {}

func (x *CreateComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComponentRequest.ProtoReflect.Descriptor instead.
func (*CreateComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{54}
}

func (x *CreateComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateComponentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateComponentRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CreateComponentRequest) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (x *CreateComponentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateComponentRequest) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *CreateComponentRequest) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *CreateComponentRequest) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

type CreateComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *CreateComponentResponse) Reset() {
	*x = CreateComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateComponentResponse) ProtoMessage() {}

func (x *CreateComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateComponentResponse.ProtoReflect.Descriptor instead.
func (*CreateComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{55}
}

func (x *CreateComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type UpdateComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId        string            `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id               string            `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name             string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName      string            `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Labels           map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository string            `protobuf:"bytes,6,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector  string            `protobuf:"bytes,7,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName   string            `protobuf:"bytes,8,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
}

func (x *UpdateComponentRequest) Reset() {
	*x = UpdateComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentRequest) ProtoMessage() {}

func (x *UpdateComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentRequest.ProtoReflect.Descriptor instead.
func (*UpdateComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{56}
}

func (x *UpdateComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *UpdateComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateComponentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateComponentRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UpdateComponentRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateComponentRequest) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *UpdateComponentRequest) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *UpdateComponentRequest) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

type UpdateComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *Component `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
}

func (x *UpdateComponentResponse) Reset() {
	*x = UpdateComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateComponentResponse) ProtoMessage() {}

func (x *UpdateComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateComponentResponse.ProtoReflect.Descriptor instead.
func (*UpdateComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{57}
}

func (x *UpdateComponentResponse) GetComponent() *Component {
	if x != nil {
		return x.Component
	}
	return nil
}

type DeleteComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteComponentRequest) Reset() {
	*x = DeleteComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentRequest) ProtoMessage() {}

func (x *DeleteComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentRequest.ProtoReflect.Descriptor instead.
func (*DeleteComponentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{58}
}

func (x *DeleteComponentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteComponentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteComponentResponse) Reset() {
	*x = DeleteComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentResponse) ProtoMessage() {}

func (x *DeleteComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentResponse.ProtoReflect.Descriptor instead.
func (*DeleteComponentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{59}
}

type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId        string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name             string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName      string                 `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type             ComponentType          `protobuf:"varint,7,opt,name=type,proto3,enum=edgebit.platform.v1alpha.ComponentType" json:"type,omitempty"`
	Labels           map[string]string      `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SourceRepository string                 `protobuf:"bytes,9,opt,name=source_repository,json=sourceRepository,proto3" json:"source_repository,omitempty"`
	MachineSelector  string                 `protobuf:"bytes,10,opt,name=machine_selector,json=machineSelector,proto3" json:"machine_selector,omitempty"`
	DefaultTagName   string                 `protobuf:"bytes,11,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{60}
}

func (x *Component) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Component) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Component) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Component) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Component) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Component) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Component) GetType() ComponentType {
	if x != nil {
		return x.Type
	}
	return ComponentType_COMPONENT_TYPE_UNSPECIFIED
}

func (x *Component) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Component) GetSourceRepository() string {
	if x != nil {
		return x.SourceRepository
	}
	return ""
}

func (x *Component) GetMachineSelector() string {
	if x != nil {
		return x.MachineSelector
	}
	return ""
}

func (x *Component) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

type SetComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SbomId      string `protobuf:"bytes,4,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *SetComponentTagRequest) Reset() {
	*x = SetComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComponentTagRequest) ProtoMessage() {}

func (x *SetComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComponentTagRequest.ProtoReflect.Descriptor instead.
func (*SetComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{61}
}

func (x *SetComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *SetComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *SetComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetComponentTagRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type SetComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *ComponentTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *SetComponentTagResponse) Reset() {
	*x = SetComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetComponentTagResponse) ProtoMessage() {}

func (x *SetComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetComponentTagResponse.ProtoReflect.Descriptor instead.
func (*SetComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{62}
}

func (x *SetComponentTagResponse) GetTag() *ComponentTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type GetComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetComponentTagRequest) Reset() {
	*x = GetComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagRequest) ProtoMessage() {}

func (x *GetComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagRequest.ProtoReflect.Descriptor instead.
func (*GetComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{63}
}

func (x *GetComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *GetComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *ComponentTag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *GetComponentTagResponse) Reset() {
	*x = GetComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagResponse) ProtoMessage() {}

func (x *GetComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagResponse.ProtoReflect.Descriptor instead.
func (*GetComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{64}
}

func (x *GetComponentTagResponse) GetTag() *ComponentTag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type ListComponentTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
}

func (x *ListComponentTagsRequest) Reset() {
	*x = ListComponentTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentTagsRequest) ProtoMessage() {}

func (x *ListComponentTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentTagsRequest.ProtoReflect.Descriptor instead.
func (*ListComponentTagsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{65}
}

func (x *ListComponentTagsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ListComponentTagsRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

type ListComponentTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*ComponentTag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *ListComponentTagsResponse) Reset() {
	*x = ListComponentTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListComponentTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComponentTagsResponse) ProtoMessage() {}

func (x *ListComponentTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComponentTagsResponse.ProtoReflect.Descriptor instead.
func (*ListComponentTagsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{66}
}

func (x *ListComponentTagsResponse) GetTags() []*ComponentTag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type DeleteComponentTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId   string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteComponentTagRequest) Reset() {
	*x = DeleteComponentTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentTagRequest) ProtoMessage() {}

func (x *DeleteComponentTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteComponentTagRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{67}
}

func (x *DeleteComponentTagRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *DeleteComponentTagRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *DeleteComponentTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteComponentTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteComponentTagResponse) Reset() {
	*x = DeleteComponentTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteComponentTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteComponentTagResponse) ProtoMessage() {}

func (x *DeleteComponentTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteComponentTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteComponentTagResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{68}
}

type ComponentTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SbomId    string                 `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ComponentTag) Reset() {
	*x = ComponentTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentTag) ProtoMessage() {}

func (x *ComponentTag) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentTag.ProtoReflect.Descriptor instead.
func (*ComponentTag) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{69}
}

func (x *ComponentTag) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ComponentTag) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *ComponentTag) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ComponentTag) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetComponentTagsOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId       string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ComponentId     string `protobuf:"bytes,2,opt,name=component_id,json=componentId,proto3" json:"component_id,omitempty"`
	SelectedTagName string `protobuf:"bytes,3,opt,name=selected_tag_name,json=selectedTagName,proto3" json:"selected_tag_name,omitempty"`
}

func (x *GetComponentTagsOverviewRequest) Reset() {
	*x = GetComponentTagsOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagsOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagsOverviewRequest) ProtoMessage() {}

func (x *GetComponentTagsOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagsOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetComponentTagsOverviewRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{70}
}

func (x *GetComponentTagsOverviewRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetComponentTagsOverviewRequest) GetComponentId() string {
	if x != nil {
		return x.ComponentId
	}
	return ""
}

func (x *GetComponentTagsOverviewRequest) GetSelectedTagName() string {
	if x != nil {
		return x.SelectedTagName
	}
	return ""
}

type GetComponentTagsOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultSbom         *ComponentEnrichedSBOMSummary   `protobuf:"bytes,1,opt,name=default_sbom,json=defaultSbom,proto3" json:"default_sbom,omitempty"`
	OtherActiveSboms    []*ComponentEnrichedSBOMSummary `protobuf:"bytes,2,rep,name=other_active_sboms,json=otherActiveSboms,proto3" json:"other_active_sboms,omitempty"`
	UndeployedSbomCount int32                           `protobuf:"varint,4,opt,name=undeployed_sbom_count,json=undeployedSbomCount,proto3" json:"undeployed_sbom_count,omitempty"`
	RetiredSbomCount    int32                           `protobuf:"varint,5,opt,name=retired_sbom_count,json=retiredSbomCount,proto3" json:"retired_sbom_count,omitempty"`
	DefaultTagName      string                          `protobuf:"bytes,6,opt,name=default_tag_name,json=defaultTagName,proto3" json:"default_tag_name,omitempty"`
	SelectedTagName     string                          `protobuf:"bytes,7,opt,name=selected_tag_name,json=selectedTagName,proto3" json:"selected_tag_name,omitempty"`
}

func (x *GetComponentTagsOverviewResponse) Reset() {
	*x = GetComponentTagsOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetComponentTagsOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetComponentTagsOverviewResponse) ProtoMessage() {}

func (x *GetComponentTagsOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetComponentTagsOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetComponentTagsOverviewResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{71}
}

func (x *GetComponentTagsOverviewResponse) GetDefaultSbom() *ComponentEnrichedSBOMSummary {
	if x != nil {
		return x.DefaultSbom
	}
	return nil
}

func (x *GetComponentTagsOverviewResponse) GetOtherActiveSboms() []*ComponentEnrichedSBOMSummary {
	if x != nil {
		return x.OtherActiveSboms
	}
	return nil
}

func (x *GetComponentTagsOverviewResponse) GetUndeployedSbomCount() int32 {
	if x != nil {
		return x.UndeployedSbomCount
	}
	return 0
}

func (x *GetComponentTagsOverviewResponse) GetRetiredSbomCount() int32 {
	if x != nil {
		return x.RetiredSbomCount
	}
	return 0
}

func (x *GetComponentTagsOverviewResponse) GetDefaultTagName() string {
	if x != nil {
		return x.DefaultTagName
	}
	return ""
}

func (x *GetComponentTagsOverviewResponse) GetSelectedTagName() string {
	if x != nil {
		return x.SelectedTagName
	}
	return ""
}

type ComponentEnrichedSBOMSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sbom            *SBOMListItem `protobuf:"bytes,1,opt,name=sbom,proto3" json:"sbom,omitempty"`
	Tags            []string      `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	ActiveWorkloads int32         `protobuf:"varint,3,opt,name=active_workloads,json=activeWorkloads,proto3" json:"active_workloads,omitempty"`
}

func (x *ComponentEnrichedSBOMSummary) Reset() {
	*x = ComponentEnrichedSBOMSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentEnrichedSBOMSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentEnrichedSBOMSummary) ProtoMessage() {}

func (x *ComponentEnrichedSBOMSummary) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentEnrichedSBOMSummary.ProtoReflect.Descriptor instead.
func (*ComponentEnrichedSBOMSummary) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{72}
}

func (x *ComponentEnrichedSBOMSummary) GetSbom() *SBOMListItem {
	if x != nil {
		return x.Sbom
	}
	return nil
}

func (x *ComponentEnrichedSBOMSummary) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ComponentEnrichedSBOMSummary) GetActiveWorkloads() int32 {
	if x != nil {
		return x.ActiveWorkloads
	}
	return 0
}

type GetCIBotCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId    string             `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomId       string             `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	CommitId     string             `protobuf:"bytes,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	BaseCommitId string             `protobuf:"bytes,4,opt,name=base_commit_id,json=baseCommitId,proto3" json:"base_commit_id,omitempty"`
	Flavor       CIBotCommentFlavor `protobuf:"varint,5,opt,name=flavor,proto3,enum=edgebit.platform.v1alpha.CIBotCommentFlavor" json:"flavor,omitempty"`
}

func (x *GetCIBotCommentRequest) Reset() {
	*x = GetCIBotCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCIBotCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCIBotCommentRequest) ProtoMessage() {}

func (x *GetCIBotCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCIBotCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCIBotCommentRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{73}
}

func (x *GetCIBotCommentRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetCommitId() string {
	if x != nil {
		return x.CommitId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetBaseCommitId() string {
	if x != nil {
		return x.BaseCommitId
	}
	return ""
}

func (x *GetCIBotCommentRequest) GetFlavor() CIBotCommentFlavor {
	if x != nil {
		return x.Flavor
	}
	return CIBotCommentFlavor_CI_BOT_COMMENT_FLAVOR_UNSPECIFIED
}

type GetCIBotCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentBody string `protobuf:"bytes,1,opt,name=comment_body,json=commentBody,proto3" json:"comment_body,omitempty"`
	SkipComment bool   `protobuf:"varint,2,opt,name=skip_comment,json=skipComment,proto3" json:"skip_comment,omitempty"`
}

func (x *GetCIBotCommentResponse) Reset() {
	*x = GetCIBotCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCIBotCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCIBotCommentResponse) ProtoMessage() {}

func (x *GetCIBotCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCIBotCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCIBotCommentResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{74}
}

func (x *GetCIBotCommentResponse) GetCommentBody() string {
	if x != nil {
		return x.CommentBody
	}
	return ""
}

func (x *GetCIBotCommentResponse) GetSkipComment() bool {
	if x != nil {
		return x.SkipComment
	}
	return false
}

type ListWorkloadsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *ListWorkloadsRequest) Reset() {
	*x = ListWorkloadsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsRequest) ProtoMessage() {}

func (x *ListWorkloadsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsRequest.ProtoReflect.Descriptor instead.
func (*ListWorkloadsRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{75}
}

func (x *ListWorkloadsRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type ListWorkloadsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workloads []*WorkloadItem `protobuf:"bytes,1,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *ListWorkloadsResponse) Reset() {
	*x = ListWorkloadsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkloadsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkloadsResponse) ProtoMessage() {}

func (x *ListWorkloadsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkloadsResponse.ProtoReflect.Descriptor instead.
func (*ListWorkloadsResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{76}
}

func (x *ListWorkloadsResponse) GetWorkloads() []*WorkloadItem {
	if x != nil {
		return x.Workloads
	}
	return nil
}

type GetWorkloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId  string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	WorkloadId string `protobuf:"bytes,2,opt,name=workload_id,json=workloadId,proto3" json:"workload_id,omitempty"`
}

func (x *GetWorkloadRequest) Reset() {
	*x = GetWorkloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadRequest) ProtoMessage() {}

func (x *GetWorkloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadRequest.ProtoReflect.Descriptor instead.
func (*GetWorkloadRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{77}
}

func (x *GetWorkloadRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetWorkloadRequest) GetWorkloadId() string {
	if x != nil {
		return x.WorkloadId
	}
	return ""
}

type GetWorkloadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workload *WorkloadItem `protobuf:"bytes,1,opt,name=workload,proto3" json:"workload,omitempty"`
}

func (x *GetWorkloadResponse) Reset() {
	*x = GetWorkloadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkloadResponse) ProtoMessage() {}

func (x *GetWorkloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkloadResponse.ProtoReflect.Descriptor instead.
func (*GetWorkloadResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{78}
}

func (x *GetWorkloadResponse) GetWorkload() *WorkloadItem {
	if x != nil {
		return x.Workload
	}
	return nil
}

type WorkloadItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId            string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name                 string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TotalVulnerabilities int32                  `protobuf:"varint,5,opt,name=total_vulnerabilities,json=totalVulnerabilities,proto3" json:"total_vulnerabilities,omitempty"`
	SbomId               string                 `protobuf:"bytes,6,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
	ImageName            string                 `protobuf:"bytes,7,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	StartedAt            *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt              *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	Labels               map[string]string      `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkloadItem) Reset() {
	*x = WorkloadItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadItem) ProtoMessage() {}

func (x *WorkloadItem) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadItem.ProtoReflect.Descriptor instead.
func (*WorkloadItem) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{79}
}

func (x *WorkloadItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WorkloadItem) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *WorkloadItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkloadItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *WorkloadItem) GetTotalVulnerabilities() int32 {
	if x != nil {
		return x.TotalVulnerabilities
	}
	return 0
}

func (x *WorkloadItem) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

func (x *WorkloadItem) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *WorkloadItem) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *WorkloadItem) GetEndedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EndedAt
	}
	return nil
}

func (x *WorkloadItem) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GetSBOMDownloadUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SbomId    string `protobuf:"bytes,2,opt,name=sbom_id,json=sbomId,proto3" json:"sbom_id,omitempty"`
}

func (x *GetSBOMDownloadUrlRequest) Reset() {
	*x = GetSBOMDownloadUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMDownloadUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMDownloadUrlRequest) ProtoMessage() {}

func (x *GetSBOMDownloadUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMDownloadUrlRequest.ProtoReflect.Descriptor instead.
func (*GetSBOMDownloadUrlRequest) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{80}
}

func (x *GetSBOMDownloadUrlRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetSBOMDownloadUrlRequest) GetSbomId() string {
	if x != nil {
		return x.SbomId
	}
	return ""
}

type GetSBOMDownloadUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SbomDownloadPath string `protobuf:"bytes,1,opt,name=sbom_download_path,json=sbomDownloadPath,proto3" json:"sbom_download_path,omitempty"`
}

func (x *GetSBOMDownloadUrlResponse) Reset() {
	*x = GetSBOMDownloadUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSBOMDownloadUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSBOMDownloadUrlResponse) ProtoMessage() {}

func (x *GetSBOMDownloadUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSBOMDownloadUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSBOMDownloadUrlResponse) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{81}
}

func (x *GetSBOMDownloadUrlResponse) GetSbomDownloadPath() string {
	if x != nil {
		return x.SbomDownloadPath
	}
	return ""
}

type GraphRelationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RelatedId        string `protobuf:"bytes,2,opt,name=related_id,json=relatedId,proto3" json:"related_id,omitempty"`
	RelationshipType string `protobuf:"bytes,3,opt,name=relationship_type,json=relationshipType,proto3" json:"relationship_type,omitempty"`
}

func (x *GraphRelationship) Reset() {
	*x = GraphRelationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GraphRelationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GraphRelationship) ProtoMessage() {}

func (x *GraphRelationship) ProtoReflect() protoreflect.Message {
	mi := &file_edgebit_platform_v1alpha_platform_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GraphRelationship.ProtoReflect.Descriptor instead.
func (*GraphRelationship) Descriptor() ([]byte, []int) {
	return file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP(), []int{82}
}

func (x *GraphRelationship) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GraphRelationship) GetRelatedId() string {
	if x != nil {
		return x.RelatedId
	}
	return ""
}

func (x *GraphRelationship) GetRelationshipType() string {
	if x != nil {
		return x.RelationshipType
	}
	return ""
}

var File_edgebit_platform_v1alpha_platform_proto protoreflect.FileDescriptor

var file_edgebit_platform_v1alpha_platform_proto_rawDesc = []byte{
	0x0a, 0x27, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x15, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x40, 0x0a, 0x1f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x20,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x60, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x68, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x3d, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x63,
	0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x10, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x22, 0x59, 0x0a,
	0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x08, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xa0, 0x04, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b,
	0x0a, 0x11, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x56, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x77,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd1, 0x02, 0x0a, 0x07, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa5,
	0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x93, 0x02, 0x0a, 0x0d, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69,
	0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x99, 0x03, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d,
	0x0a, 0x1a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x19, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x22, 0xf0, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x5f,
	0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x49, 0x6e, 0x55, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0f, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xa8, 0x03, 0x0a,
	0x10, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x1a, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x10, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0f, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x65, 0x6e,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x6e, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x65, 0x6e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x75, 0x6c,
	0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x22, 0xcf,
	0x02, 0x0a, 0x13, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x73,
	0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76,
	0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12,
	0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56,
	0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x66, 0x69, 0x78, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x96, 0x01, 0x0a, 0x17, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x44, 0x65, 0x74, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x62, 0x6f,
	0x6d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x1c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x3b, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5f,
	0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22,
	0xd5, 0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x73, 0x65, 0x64, 0x22, 0x4c, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2d, 0x0a, 0x03, 0x41, 0x4d, 0x49, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc7, 0x01, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x42, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x12, 0x3f, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x03, 0x61, 0x6d, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x41, 0x4d, 0x49,
	0x48, 0x00, 0x52, 0x03, 0x61, 0x6d, 0x69, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0xd9, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x12, 0x4e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x77, 0x0a, 0x11, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42,
	0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x04, 0x0a, 0x0c, 0x53,
	0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x54, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x42,
	0x4f, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x04, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3c, 0x0a,
	0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x4d, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb9, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x08, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x14, 0x53, 0x42,
	0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x41, 0x0a, 0x05, 0x76, 0x75, 0x6c, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x05, 0x76, 0x75,
	0x6c, 0x6e, 0x73, 0x22, 0xcd, 0x02, 0x0a, 0x11, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x56, 0x75, 0x6c, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x42,
	0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e,
	0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x47, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x09, 0x66,
	0x69, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69,
	0x78, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x66, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x78, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x78, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0x36, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x44, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x59, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0xbe, 0x03, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x54, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29,
	0x0a, 0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5c,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xaa, 0x04, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x87, 0x01,
	0x0a, 0x16, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x6e, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x53, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x22, 0x5c, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x57, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x71, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8f, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x9b, 0x03, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x73, 0x62, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x62, 0x6f, 0x6d, 0x12,
	0x64, 0x0a, 0x12, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x73, 0x62, 0x6f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x45, 0x6e, 0x72, 0x69, 0x63, 0x68, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x62, 0x6f, 0x6d, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x64, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x75, 0x6e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64,
	0x53, 0x62, 0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x74,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x69, 0x72, 0x65, 0x64, 0x53, 0x62,
	0x6f, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x61,
	0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x01,
	0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x72, 0x69, 0x63,
	0x68, 0x65, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x3a,
	0x0a, 0x04, 0x73, 0x62, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x42, 0x4f, 0x4d, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x73, 0x62, 0x6f, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0xd9, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12,
	0x44, 0x0a, 0x06, 0x66, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x49, 0x42, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x52, 0x06, 0x66,
	0x6c, 0x61, 0x76, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x5d, 0x0a,
	0x15, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x22, 0x54, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x64, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xcb, 0x03,
	0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f,
	0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x62, 0x6f, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x62, 0x6f, 0x6d, 0x49, 0x64,
	0x22, 0x4a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x73, 0x62, 0x6f, 0x6d, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x62, 0x6f, 0x6d,
	0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0x6f, 0x0a, 0x11,
	0x47, 0x72, 0x61, 0x70, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x2a, 0xb0, 0x01,
	0x0a, 0x0c, 0x56, 0x75, 0x6c, 0x6e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d,
	0x0a, 0x19, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a,
	0x18, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e,
	0x45, 0x47, 0x4c, 0x49, 0x47, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x56,
	0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x57,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12,
	0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x48, 0x49,
	0x47, 0x48, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x05,
	0x2a, 0x81, 0x01, 0x0a, 0x0c, 0x56, 0x75, 0x6c, 0x6e, 0x46, 0x69, 0x78, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x46, 0x49, 0x58, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x56, 0x55, 0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x57, 0x4f, 0x4e, 0x54, 0x46, 0x49, 0x58, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x56, 0x55,
	0x4c, 0x4e, 0x5f, 0x46, 0x49, 0x58, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x58,
	0x45, 0x44, 0x10, 0x03, 0x2a, 0x99, 0x01, 0x0a, 0x0a, 0x53, 0x42, 0x4f, 0x4d, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x53, 0x59, 0x46, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46,
	0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x53, 0x50, 0x44, 0x58, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10,
	0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e, 0x45, 0x44, 0x58, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x43, 0x59, 0x43, 0x4c, 0x4f, 0x4e, 0x45, 0x44, 0x58, 0x5f, 0x58, 0x4d, 0x4c, 0x10, 0x04,
	0x2a, 0x53, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x42, 0x4f, 0x4d, 0x5f, 0x43, 0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x5d, 0x0a, 0x12, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6c, 0x61, 0x76, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x21, 0x43,
	0x49, 0x5f, 0x42, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4c,
	0x41, 0x56, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x49, 0x5f, 0x42, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x4c, 0x41, 0x56, 0x4f, 0x52, 0x5f, 0x47, 0x49, 0x54, 0x48,
	0x55, 0x42, 0x10, 0x01, 0x32, 0xbd, 0x1c, 0x0a, 0x17, 0x45, 0x64, 0x67, 0x65, 0x42, 0x69, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x93, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x39,
	0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x12, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x37, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x34, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x08,
	0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x29, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4f,
	0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x12, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x35, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x36, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x0a,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x2b, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x66, 0x0a, 0x09, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x12, 0x2a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x12, 0x28, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x75, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12, 0x32, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x78, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x67, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x12, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93,
	0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54,
	0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x39, 0x2e, 0x65, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x67, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f, 0x74,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x65, 0x64, 0x67, 0x65,
	0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x49, 0x42, 0x6f, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12,
	0x2e, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x2c, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x81, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x33, 0x2e, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69,
	0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x65,
	0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x42, 0x4f, 0x4d, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0xfe, 0x01, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x42, 0x0d, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x65, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x2f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x64, 0x67,
	0x65, 0x62, 0x69, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x3b, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0xa2, 0x02, 0x03, 0x45, 0x50, 0x58, 0xaa, 0x02, 0x18, 0x45, 0x64,
	0x67, 0x65, 0x62, 0x69, 0x74, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0xca, 0x02, 0x18, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74,
	0x5c, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0xe2, 0x02, 0x24, 0x45, 0x64, 0x67, 0x65, 0x62, 0x69, 0x74, 0x5c, 0x50, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x45, 0x64, 0x67, 0x65, 0x62,
	0x69, 0x74, 0x3a, 0x3a, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x3a, 0x56, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce sync.Once
	file_edgebit_platform_v1alpha_platform_proto_rawDescData = file_edgebit_platform_v1alpha_platform_proto_rawDesc
)

func file_edgebit_platform_v1alpha_platform_proto_rawDescGZIP() []byte {
	file_edgebit_platform_v1alpha_platform_proto_rawDescOnce.Do(func() {
		file_edgebit_platform_v1alpha_platform_proto_rawDescData = protoimpl.X.CompressGZIP(file_edgebit_platform_v1alpha_platform_proto_rawDescData)
	})
	return file_edgebit_platform_v1alpha_platform_proto_rawDescData
}

var file_edgebit_platform_v1alpha_platform_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_edgebit_platform_v1alpha_platform_proto_msgTypes = make([]protoimpl.MessageInfo, 91)
var file_edgebit_platform_v1alpha_platform_proto_goTypes = []interface{}{
	(VulnSeverity)(0),                        // 0: edgebit.platform.v1alpha.VulnSeverity
	(VulnFixState)(0),                        // 1: edgebit.platform.v1alpha.VulnFixState
	(SBOMFormat)(0),                          // 2: edgebit.platform.v1alpha.SBOMFormat
	(ComponentType)(0),                       // 3: edgebit.platform.v1alpha.ComponentType
	(CIBotCommentFlavor)(0),                  // 4: edgebit.platform.v1alpha.CIBotCommentFlavor
	(*Project)(nil),                          // 5: edgebit.platform.v1alpha.Project
	(*ListProjectsRequest)(nil),              // 6: edgebit.platform.v1alpha.ListProjectsRequest
	(*ListProjectsResponse)(nil),             // 7: edgebit.platform.v1alpha.ListProjectsResponse
	(*GenerateAgentDeployTokenRequest)(nil),  // 8: edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	(*GenerateAgentDeployTokenResponse)(nil), // 9: edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	(*CreateAgentDeployTokenRequest)(nil),    // 10: edgebit.platform.v1alpha.CreateAgentDeployTokenRequest
	(*CreateAgentDeployTokenResponse)(nil),   // 11: edgebit.platform.v1alpha.CreateAgentDeployTokenResponse
	(*ListAgentDeployTokensRequest)(nil),     // 12: edgebit.platform.v1alpha.ListAgentDeployTokensRequest
	(*ListAgentDeployTokensResponse)(nil),    // 13: edgebit.platform.v1alpha.ListAgentDeployTokensResponse
	(*AgentDeployToken)(nil),                 // 14: edgebit.platform.v1alpha.AgentDeployToken
	(*DeleteAgentDeployTokenRequest)(nil),    // 15: edgebit.platform.v1alpha.DeleteAgentDeployTokenRequest
	(*DeleteAgentDeployTokenResponse)(nil),   // 16: edgebit.platform.v1alpha.DeleteAgentDeployTokenResponse
	(*ListMachinesRequest)(nil),              // 17: edgebit.platform.v1alpha.ListMachinesRequest
	(*ListMachinesResponse)(nil),             // 18: edgebit.platform.v1alpha.ListMachinesResponse
	(*Machine)(nil),                          // 19: edgebit.platform.v1alpha.Machine
	(*Package)(nil),                          // 20: edgebit.platform.v1alpha.Package
	(*File)(nil),                             // 21: edgebit.platform.v1alpha.File
	(*VulnReference)(nil),                    // 22: edgebit.platform.v1alpha.VulnReference
	(*Vulnerability)(nil),                    // 23: edgebit.platform.v1alpha.Vulnerability
	(*Workload)(nil),                         // 24: edgebit.platform.v1alpha.Workload
	(*GetMachineInventoryRequest)(nil),       // 25: edgebit.platform.v1alpha.GetMachineInventoryRequest
	(*GetMachineInventoryResponse)(nil),      // 26: edgebit.platform.v1alpha.GetMachineInventoryResponse
	(*OverviewRequest)(nil),                  // 27: edgebit.platform.v1alpha.OverviewRequest
	(*OverviewResponse)(nil),                 // 28: edgebit.platform.v1alpha.OverviewResponse
	(*OverviewPackage)(nil),                  // 29: edgebit.platform.v1alpha.OverviewPackage
	(*OverviewPackageVuln)(nil),              // 30: edgebit.platform.v1alpha.OverviewPackageVuln
	(*OverviewOnboardingState)(nil),          // 31: edgebit.platform.v1alpha.OverviewOnboardingState
	(*CreateOrgAccessTokenRequest)(nil),      // 32: edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	(*CreateOrgAccessTokenResponse)(nil),     // 33: edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	(*ListOrgAccessTokensRequest)(nil),       // 34: edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	(*ListOrgAccessTokensResponse)(nil),      // 35: edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	(*OrgAccessToken)(nil),                   // 36: edgebit.platform.v1alpha.OrgAccessToken
	(*DeleteOrgAccessTokenRequest)(nil),      // 37: edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	(*DeleteOrgAccessTokenResponse)(nil),     // 38: edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	(*GenericImage)(nil),                     // 39: edgebit.platform.v1alpha.GenericImage
	(*DockerImage)(nil),                      // 40: edgebit.platform.v1alpha.DockerImage
	(*AMI)(nil),                              // 41: edgebit.platform.v1alpha.AMI
	(*Image)(nil),                            // 42: edgebit.platform.v1alpha.Image
	(*UploadSBOMHeader)(nil),                 // 43: edgebit.platform.v1alpha.UploadSBOMHeader
	(*UploadSBOMRequest)(nil),                // 44: edgebit.platform.v1alpha.UploadSBOMRequest
	(*UploadSBOMResponse)(nil),               // 45: edgebit.platform.v1alpha.UploadSBOMResponse
	(*SBOMListItem)(nil),                     // 46: edgebit.platform.v1alpha.SBOMListItem
	(*ListSBOMsRequest)(nil),                 // 47: edgebit.platform.v1alpha.ListSBOMsRequest
	(*ListSBOMsResponse)(nil),                // 48: edgebit.platform.v1alpha.ListSBOMsResponse
	(*GetSBOMRequest)(nil),                   // 49: edgebit.platform.v1alpha.GetSBOMRequest
	(*GetSBOMResponse)(nil),                  // 50: edgebit.platform.v1alpha.GetSBOMResponse
	(*GetSBOMInventoryRequest)(nil),          // 51: edgebit.platform.v1alpha.GetSBOMInventoryRequest
	(*GetSBOMInventoryResponse)(nil),         // 52: edgebit.platform.v1alpha.GetSBOMInventoryResponse
	(*SBOMInventoryPackage)(nil),             // 53: edgebit.platform.v1alpha.SBOMInventoryPackage
	(*SBOMInventoryVuln)(nil),                // 54: edgebit.platform.v1alpha.SBOMInventoryVuln
	(*ListComponentsRequest)(nil),            // 55: edgebit.platform.v1alpha.ListComponentsRequest
	(*ListComponentsResponse)(nil),           // 56: edgebit.platform.v1alpha.ListComponentsResponse
	(*GetComponentRequest)(nil),              // 57: edgebit.platform.v1alpha.GetComponentRequest
	(*GetComponentResponse)(nil),             // 58: edgebit.platform.v1alpha.GetComponentResponse
	(*CreateComponentRequest)(nil),           // 59: edgebit.platform.v1alpha.CreateComponentRequest
	(*CreateComponentResponse)(nil),          // 60: edgebit.platform.v1alpha.CreateComponentResponse
	(*UpdateComponentRequest)(nil),           // 61: edgebit.platform.v1alpha.UpdateComponentRequest
	(*UpdateComponentResponse)(nil),          // 62: edgebit.platform.v1alpha.UpdateComponentResponse
	(*DeleteComponentRequest)(nil),           // 63: edgebit.platform.v1alpha.DeleteComponentRequest
	(*DeleteComponentResponse)(nil),          // 64: edgebit.platform.v1alpha.DeleteComponentResponse
	(*Component)(nil),                        // 65: edgebit.platform.v1alpha.Component
	(*SetComponentTagRequest)(nil),           // 66: edgebit.platform.v1alpha.SetComponentTagRequest
	(*SetComponentTagResponse)(nil),          // 67: edgebit.platform.v1alpha.SetComponentTagResponse
	(*GetComponentTagRequest)(nil),           // 68: edgebit.platform.v1alpha.GetComponentTagRequest
	(*GetComponentTagResponse)(nil),          // 69: edgebit.platform.v1alpha.GetComponentTagResponse
	(*ListComponentTagsRequest)(nil),         // 70: edgebit.platform.v1alpha.ListComponentTagsRequest
	(*ListComponentTagsResponse)(nil),        // 71: edgebit.platform.v1alpha.ListComponentTagsResponse
	(*DeleteComponentTagRequest)(nil),        // 72: edgebit.platform.v1alpha.DeleteComponentTagRequest
	(*DeleteComponentTagResponse)(nil),       // 73: edgebit.platform.v1alpha.DeleteComponentTagResponse
	(*ComponentTag)(nil),                     // 74: edgebit.platform.v1alpha.ComponentTag
	(*GetComponentTagsOverviewRequest)(nil),  // 75: edgebit.platform.v1alpha.GetComponentTagsOverviewRequest
	(*GetComponentTagsOverviewResponse)(nil), // 76: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse
	(*ComponentEnrichedSBOMSummary)(nil),     // 77: edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	(*GetCIBotCommentRequest)(nil),           // 78: edgebit.platform.v1alpha.GetCIBotCommentRequest
	(*GetCIBotCommentResponse)(nil),          // 79: edgebit.platform.v1alpha.GetCIBotCommentResponse
	(*ListWorkloadsRequest)(nil),             // 80: edgebit.platform.v1alpha.ListWorkloadsRequest
	(*ListWorkloadsResponse)(nil),            // 81: edgebit.platform.v1alpha.ListWorkloadsResponse
	(*GetWorkloadRequest)(nil),               // 82: edgebit.platform.v1alpha.GetWorkloadRequest
	(*GetWorkloadResponse)(nil),              // 83: edgebit.platform.v1alpha.GetWorkloadResponse
	(*WorkloadItem)(nil),                     // 84: edgebit.platform.v1alpha.WorkloadItem
	(*GetSBOMDownloadUrlRequest)(nil),        // 85: edgebit.platform.v1alpha.GetSBOMDownloadUrlRequest
	(*GetSBOMDownloadUrlResponse)(nil),       // 86: edgebit.platform.v1alpha.GetSBOMDownloadUrlResponse
	(*GraphRelationship)(nil),                // 87: edgebit.platform.v1alpha.GraphRelationship
	nil,                                      // 88: edgebit.platform.v1alpha.Machine.LabelsEntry
	nil,                                      // 89: edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	nil,                                      // 90: edgebit.platform.v1alpha.SBOMListItem.LabelsEntry
	nil,                                      // 91: edgebit.platform.v1alpha.GetSBOMResponse.LabelsEntry
	nil,                                      // 92: edgebit.platform.v1alpha.CreateComponentRequest.LabelsEntry
	nil,                                      // 93: edgebit.platform.v1alpha.UpdateComponentRequest.LabelsEntry
	nil,                                      // 94: edgebit.platform.v1alpha.Component.LabelsEntry
	nil,                                      // 95: edgebit.platform.v1alpha.WorkloadItem.LabelsEntry
	(*timestamppb.Timestamp)(nil),            // 96: google.protobuf.Timestamp
}
var file_edgebit_platform_v1alpha_platform_proto_depIdxs = []int32{
	96,  // 0: edgebit.platform.v1alpha.Project.created_at:type_name -> google.protobuf.Timestamp
	96,  // 1: edgebit.platform.v1alpha.Project.updated_at:type_name -> google.protobuf.Timestamp
	5,   // 2: edgebit.platform.v1alpha.ListProjectsResponse.projects:type_name -> edgebit.platform.v1alpha.Project
	14,  // 3: edgebit.platform.v1alpha.ListAgentDeployTokensResponse.tokens:type_name -> edgebit.platform.v1alpha.AgentDeployToken
	96,  // 4: edgebit.platform.v1alpha.AgentDeployToken.created_at:type_name -> google.protobuf.Timestamp
	96,  // 5: edgebit.platform.v1alpha.AgentDeployToken.last_used:type_name -> google.protobuf.Timestamp
	19,  // 6: edgebit.platform.v1alpha.ListMachinesResponse.machines:type_name -> edgebit.platform.v1alpha.Machine
	96,  // 7: edgebit.platform.v1alpha.Machine.last_updated:type_name -> google.protobuf.Timestamp
	88,  // 8: edgebit.platform.v1alpha.Machine.labels:type_name -> edgebit.platform.v1alpha.Machine.LabelsEntry
	0,   // 9: edgebit.platform.v1alpha.Vulnerability.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	22,  // 10: edgebit.platform.v1alpha.Vulnerability.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 11: edgebit.platform.v1alpha.Vulnerability.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	96,  // 12: edgebit.platform.v1alpha.Workload.started_at:type_name -> google.protobuf.Timestamp
	96,  // 13: edgebit.platform.v1alpha.Workload.ended_at:type_name -> google.protobuf.Timestamp
	19,  // 14: edgebit.platform.v1alpha.GetMachineInventoryResponse.machine:type_name -> edgebit.platform.v1alpha.Machine
	20,  // 15: edgebit.platform.v1alpha.GetMachineInventoryResponse.packages:type_name -> edgebit.platform.v1alpha.Package
	21,  // 16: edgebit.platform.v1alpha.GetMachineInventoryResponse.files_in_use:type_name -> edgebit.platform.v1alpha.File
	24,  // 17: edgebit.platform.v1alpha.GetMachineInventoryResponse.workloads:type_name -> edgebit.platform.v1alpha.Workload
	23,  // 18: edgebit.platform.v1alpha.GetMachineInventoryResponse.vulnerabilities:type_name -> edgebit.platform.v1alpha.Vulnerability
	29,  // 19: edgebit.platform.v1alpha.OverviewResponse.packages:type_name -> edgebit.platform.v1alpha.OverviewPackage
	31,  // 20: edgebit.platform.v1alpha.OverviewResponse.onboarding_state:type_name -> edgebit.platform.v1alpha.OverviewOnboardingState
	30,  // 21: edgebit.platform.v1alpha.OverviewPackage.vulns:type_name -> edgebit.platform.v1alpha.OverviewPackageVuln
	0,   // 22: edgebit.platform.v1alpha.OverviewPackageVuln.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	22,  // 23: edgebit.platform.v1alpha.OverviewPackageVuln.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 24: edgebit.platform.v1alpha.OverviewPackageVuln.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	36,  // 25: edgebit.platform.v1alpha.ListOrgAccessTokensResponse.tokens:type_name -> edgebit.platform.v1alpha.OrgAccessToken
	96,  // 26: edgebit.platform.v1alpha.OrgAccessToken.created_at:type_name -> google.protobuf.Timestamp
	96,  // 27: edgebit.platform.v1alpha.OrgAccessToken.last_used:type_name -> google.protobuf.Timestamp
	39,  // 28: edgebit.platform.v1alpha.Image.generic:type_name -> edgebit.platform.v1alpha.GenericImage
	40,  // 29: edgebit.platform.v1alpha.Image.docker:type_name -> edgebit.platform.v1alpha.DockerImage
	41,  // 30: edgebit.platform.v1alpha.Image.ami:type_name -> edgebit.platform.v1alpha.AMI
	2,   // 31: edgebit.platform.v1alpha.UploadSBOMHeader.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	89,  // 32: edgebit.platform.v1alpha.UploadSBOMHeader.labels:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader.LabelsEntry
	42,  // 33: edgebit.platform.v1alpha.UploadSBOMHeader.image:type_name -> edgebit.platform.v1alpha.Image
	43,  // 34: edgebit.platform.v1alpha.UploadSBOMRequest.header:type_name -> edgebit.platform.v1alpha.UploadSBOMHeader
	2,   // 35: edgebit.platform.v1alpha.SBOMListItem.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	90,  // 36: edgebit.platform.v1alpha.SBOMListItem.labels:type_name -> edgebit.platform.v1alpha.SBOMListItem.LabelsEntry
	42,  // 37: edgebit.platform.v1alpha.SBOMListItem.image:type_name -> edgebit.platform.v1alpha.Image
	96,  // 38: edgebit.platform.v1alpha.SBOMListItem.created_at:type_name -> google.protobuf.Timestamp
	46,  // 39: edgebit.platform.v1alpha.ListSBOMsResponse.items:type_name -> edgebit.platform.v1alpha.SBOMListItem
	2,   // 40: edgebit.platform.v1alpha.GetSBOMResponse.format:type_name -> edgebit.platform.v1alpha.SBOMFormat
	91,  // 41: edgebit.platform.v1alpha.GetSBOMResponse.labels:type_name -> edgebit.platform.v1alpha.GetSBOMResponse.LabelsEntry
	42,  // 42: edgebit.platform.v1alpha.GetSBOMResponse.image:type_name -> edgebit.platform.v1alpha.Image
	96,  // 43: edgebit.platform.v1alpha.GetSBOMResponse.created_at:type_name -> google.protobuf.Timestamp
	53,  // 44: edgebit.platform.v1alpha.GetSBOMInventoryResponse.packages:type_name -> edgebit.platform.v1alpha.SBOMInventoryPackage
	87,  // 45: edgebit.platform.v1alpha.GetSBOMInventoryResponse.relationships:type_name -> edgebit.platform.v1alpha.GraphRelationship
	54,  // 46: edgebit.platform.v1alpha.SBOMInventoryPackage.vulns:type_name -> edgebit.platform.v1alpha.SBOMInventoryVuln
	0,   // 47: edgebit.platform.v1alpha.SBOMInventoryVuln.severity:type_name -> edgebit.platform.v1alpha.VulnSeverity
	22,  // 48: edgebit.platform.v1alpha.SBOMInventoryVuln.references:type_name -> edgebit.platform.v1alpha.VulnReference
	1,   // 49: edgebit.platform.v1alpha.SBOMInventoryVuln.fix_state:type_name -> edgebit.platform.v1alpha.VulnFixState
	65,  // 50: edgebit.platform.v1alpha.ListComponentsResponse.components:type_name -> edgebit.platform.v1alpha.Component
	65,  // 51: edgebit.platform.v1alpha.GetComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	3,   // 52: edgebit.platform.v1alpha.CreateComponentRequest.type:type_name -> edgebit.platform.v1alpha.ComponentType
	92,  // 53: edgebit.platform.v1alpha.CreateComponentRequest.labels:type_name -> edgebit.platform.v1alpha.CreateComponentRequest.LabelsEntry
	65,  // 54: edgebit.platform.v1alpha.CreateComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	93,  // 55: edgebit.platform.v1alpha.UpdateComponentRequest.labels:type_name -> edgebit.platform.v1alpha.UpdateComponentRequest.LabelsEntry
	65,  // 56: edgebit.platform.v1alpha.UpdateComponentResponse.component:type_name -> edgebit.platform.v1alpha.Component
	96,  // 57: edgebit.platform.v1alpha.Component.created_at:type_name -> google.protobuf.Timestamp
	96,  // 58: edgebit.platform.v1alpha.Component.updated_at:type_name -> google.protobuf.Timestamp
	3,   // 59: edgebit.platform.v1alpha.Component.type:type_name -> edgebit.platform.v1alpha.ComponentType
	94,  // 60: edgebit.platform.v1alpha.Component.labels:type_name -> edgebit.platform.v1alpha.Component.LabelsEntry
	74,  // 61: edgebit.platform.v1alpha.SetComponentTagResponse.tag:type_name -> edgebit.platform.v1alpha.ComponentTag
	74,  // 62: edgebit.platform.v1alpha.GetComponentTagResponse.tag:type_name -> edgebit.platform.v1alpha.ComponentTag
	74,  // 63: edgebit.platform.v1alpha.ListComponentTagsResponse.tags:type_name -> edgebit.platform.v1alpha.ComponentTag
	96,  // 64: edgebit.platform.v1alpha.ComponentTag.created_at:type_name -> google.protobuf.Timestamp
	96,  // 65: edgebit.platform.v1alpha.ComponentTag.updated_at:type_name -> google.protobuf.Timestamp
	77,  // 66: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse.default_sbom:type_name -> edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	77,  // 67: edgebit.platform.v1alpha.GetComponentTagsOverviewResponse.other_active_sboms:type_name -> edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary
	46,  // 68: edgebit.platform.v1alpha.ComponentEnrichedSBOMSummary.sbom:type_name -> edgebit.platform.v1alpha.SBOMListItem
	4,   // 69: edgebit.platform.v1alpha.GetCIBotCommentRequest.flavor:type_name -> edgebit.platform.v1alpha.CIBotCommentFlavor
	84,  // 70: edgebit.platform.v1alpha.ListWorkloadsResponse.workloads:type_name -> edgebit.platform.v1alpha.WorkloadItem
	84,  // 71: edgebit.platform.v1alpha.GetWorkloadResponse.workload:type_name -> edgebit.platform.v1alpha.WorkloadItem
	96,  // 72: edgebit.platform.v1alpha.WorkloadItem.started_at:type_name -> google.protobuf.Timestamp
	96,  // 73: edgebit.platform.v1alpha.WorkloadItem.ended_at:type_name -> google.protobuf.Timestamp
	95,  // 74: edgebit.platform.v1alpha.WorkloadItem.labels:type_name -> edgebit.platform.v1alpha.WorkloadItem.LabelsEntry
	6,   // 75: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:input_type -> edgebit.platform.v1alpha.ListProjectsRequest
	8,   // 76: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:input_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenRequest
	10,  // 77: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateAgentDeployToken:input_type -> edgebit.platform.v1alpha.CreateAgentDeployTokenRequest
	12,  // 78: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListAgentDeployTokens:input_type -> edgebit.platform.v1alpha.ListAgentDeployTokensRequest
	15,  // 79: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteAgentDeployToken:input_type -> edgebit.platform.v1alpha.DeleteAgentDeployTokenRequest
	17,  // 80: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:input_type -> edgebit.platform.v1alpha.ListMachinesRequest
	25,  // 81: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:input_type -> edgebit.platform.v1alpha.GetMachineInventoryRequest
	27,  // 82: edgebit.platform.v1alpha.EdgeBitPublicAPIService.Overview:input_type -> edgebit.platform.v1alpha.OverviewRequest
	32,  // 83: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:input_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenRequest
	34,  // 84: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:input_type -> edgebit.platform.v1alpha.ListOrgAccessTokensRequest
	37,  // 85: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:input_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenRequest
	44,  // 86: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:input_type -> edgebit.platform.v1alpha.UploadSBOMRequest
	47,  // 87: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListSBOMs:input_type -> edgebit.platform.v1alpha.ListSBOMsRequest
	49,  // 88: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOM:input_type -> edgebit.platform.v1alpha.GetSBOMRequest
	51,  // 89: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMInventory:input_type -> edgebit.platform.v1alpha.GetSBOMInventoryRequest
	55,  // 90: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponents:input_type -> edgebit.platform.v1alpha.ListComponentsRequest
	57,  // 91: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponent:input_type -> edgebit.platform.v1alpha.GetComponentRequest
	59,  // 92: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateComponent:input_type -> edgebit.platform.v1alpha.CreateComponentRequest
	61,  // 93: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponent:input_type -> edgebit.platform.v1alpha.UpdateComponentRequest
	63,  // 94: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponent:input_type -> edgebit.platform.v1alpha.DeleteComponentRequest
	70,  // 95: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentTags:input_type -> edgebit.platform.v1alpha.ListComponentTagsRequest
	68,  // 96: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTag:input_type -> edgebit.platform.v1alpha.GetComponentTagRequest
	66,  // 97: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetComponentTag:input_type -> edgebit.platform.v1alpha.SetComponentTagRequest
	72,  // 98: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponentTag:input_type -> edgebit.platform.v1alpha.DeleteComponentTagRequest
	75,  // 99: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTagsOverview:input_type -> edgebit.platform.v1alpha.GetComponentTagsOverviewRequest
	78,  // 100: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetCIBotComment:input_type -> edgebit.platform.v1alpha.GetCIBotCommentRequest
	80,  // 101: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloads:input_type -> edgebit.platform.v1alpha.ListWorkloadsRequest
	82,  // 102: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetWorkload:input_type -> edgebit.platform.v1alpha.GetWorkloadRequest
	85,  // 103: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMDownloadUrl:input_type -> edgebit.platform.v1alpha.GetSBOMDownloadUrlRequest
	7,   // 104: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListProjects:output_type -> edgebit.platform.v1alpha.ListProjectsResponse
	9,   // 105: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GenerateAgentDeployToken:output_type -> edgebit.platform.v1alpha.GenerateAgentDeployTokenResponse
	11,  // 106: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateAgentDeployToken:output_type -> edgebit.platform.v1alpha.CreateAgentDeployTokenResponse
	13,  // 107: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListAgentDeployTokens:output_type -> edgebit.platform.v1alpha.ListAgentDeployTokensResponse
	16,  // 108: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteAgentDeployToken:output_type -> edgebit.platform.v1alpha.DeleteAgentDeployTokenResponse
	18,  // 109: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListMachines:output_type -> edgebit.platform.v1alpha.ListMachinesResponse
	26,  // 110: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetMachineInventory:output_type -> edgebit.platform.v1alpha.GetMachineInventoryResponse
	28,  // 111: edgebit.platform.v1alpha.EdgeBitPublicAPIService.Overview:output_type -> edgebit.platform.v1alpha.OverviewResponse
	33,  // 112: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateOrgAccessToken:output_type -> edgebit.platform.v1alpha.CreateOrgAccessTokenResponse
	35,  // 113: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListOrgAccessTokens:output_type -> edgebit.platform.v1alpha.ListOrgAccessTokensResponse
	38,  // 114: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteOrgAccessToken:output_type -> edgebit.platform.v1alpha.DeleteOrgAccessTokenResponse
	45,  // 115: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UploadSBOM:output_type -> edgebit.platform.v1alpha.UploadSBOMResponse
	48,  // 116: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListSBOMs:output_type -> edgebit.platform.v1alpha.ListSBOMsResponse
	50,  // 117: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOM:output_type -> edgebit.platform.v1alpha.GetSBOMResponse
	52,  // 118: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMInventory:output_type -> edgebit.platform.v1alpha.GetSBOMInventoryResponse
	56,  // 119: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponents:output_type -> edgebit.platform.v1alpha.ListComponentsResponse
	58,  // 120: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponent:output_type -> edgebit.platform.v1alpha.GetComponentResponse
	60,  // 121: edgebit.platform.v1alpha.EdgeBitPublicAPIService.CreateComponent:output_type -> edgebit.platform.v1alpha.CreateComponentResponse
	62,  // 122: edgebit.platform.v1alpha.EdgeBitPublicAPIService.UpdateComponent:output_type -> edgebit.platform.v1alpha.UpdateComponentResponse
	64,  // 123: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponent:output_type -> edgebit.platform.v1alpha.DeleteComponentResponse
	71,  // 124: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListComponentTags:output_type -> edgebit.platform.v1alpha.ListComponentTagsResponse
	69,  // 125: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTag:output_type -> edgebit.platform.v1alpha.GetComponentTagResponse
	67,  // 126: edgebit.platform.v1alpha.EdgeBitPublicAPIService.SetComponentTag:output_type -> edgebit.platform.v1alpha.SetComponentTagResponse
	73,  // 127: edgebit.platform.v1alpha.EdgeBitPublicAPIService.DeleteComponentTag:output_type -> edgebit.platform.v1alpha.DeleteComponentTagResponse
	76,  // 128: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetComponentTagsOverview:output_type -> edgebit.platform.v1alpha.GetComponentTagsOverviewResponse
	79,  // 129: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetCIBotComment:output_type -> edgebit.platform.v1alpha.GetCIBotCommentResponse
	81,  // 130: edgebit.platform.v1alpha.EdgeBitPublicAPIService.ListWorkloads:output_type -> edgebit.platform.v1alpha.ListWorkloadsResponse
	83,  // 131: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetWorkload:output_type -> edgebit.platform.v1alpha.GetWorkloadResponse
	86,  // 132: edgebit.platform.v1alpha.EdgeBitPublicAPIService.GetSBOMDownloadUrl:output_type -> edgebit.platform.v1alpha.GetSBOMDownloadUrlResponse
	104, // [104:133] is the sub-list for method output_type
	75,  // [75:104] is the sub-list for method input_type
	75,  // [75:75] is the sub-list for extension type_name
	75,  // [75:75] is the sub-list for extension extendee
	0,   // [0:75] is the sub-list for field type_name
}

func init() { file_edgebit_platform_v1alpha_platform_proto_init() }
func file_edgebit_platform_v1alpha_platform_proto_init() {
	if File_edgebit_platform_v1alpha_platform_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentDeployTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAgentDeployTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentDeployToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentDeployTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAgentDeployTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMachinesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Package); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VulnReference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Workload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMachineInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewPackageVuln); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverviewOnboardingState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrgAccessTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgAccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrgAccessTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DockerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AMI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSBOMsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSBOMsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMInventoryPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SBOMInventoryVuln); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListComponentTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteComponentTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagsOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetComponentTagsOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentEnrichedSBOMSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCIBotCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCIBotCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkloadsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkloadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMDownloadUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSBOMDownloadUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_edgebit_platform_v1alpha_platform_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GraphRelationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*Image_Generic)(nil),
		(*Image_Docker)(nil),
		(*Image_Ami)(nil),
	}
	file_edgebit_platform_v1alpha_platform_proto_msgTypes[39].OneofWrappers = []interface{}{
		(*UploadSBOMRequest_Header)(nil),
		(*UploadSBOMRequest_Data)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_edgebit_platform_v1alpha_platform_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   91,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_edgebit_platform_v1alpha_platform_proto_goTypes,
		DependencyIndexes: file_edgebit_platform_v1alpha_platform_proto_depIdxs,
		EnumInfos:         file_edgebit_platform_v1alpha_platform_proto_enumTypes,
		MessageInfos:      file_edgebit_platform_v1alpha_platform_proto_msgTypes,
	}.Build()
	File_edgebit_platform_v1alpha_platform_proto = out.File
	file_edgebit_platform_v1alpha_platform_proto_rawDesc = nil
	file_edgebit_platform_v1alpha_platform_proto_goTypes = nil
	file_edgebit_platform_v1alpha_platform_proto_depIdxs = nil
}
